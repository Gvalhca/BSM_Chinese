namespace CommomUpper_32Series
{
    using System;
    using System.Collections;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Drawing;
    using System.IO;
    using System.IO.Ports;
    using System.Runtime.InteropServices;
    using System.Text;
    using System.Windows.Forms;

    public class Form1 : Form
    {
        public byte RS485_SLAVE_ADDR = 1;
        public byte RS485_BROADCAST_ADDR;
        public byte RS485_CMD_READ_REGS = 3;
        public byte RS485_CMD_WRITE_REG = 6;
        public byte RS485_CMD_WRITE_REGS = 0x10;
        public uint u16RdRunInfoRxCnt;
        public uint u16RdRunInfoTxCnt;
        public byte bRs485FunCmd = 3;
        public byte[] bRxDataBuff = new byte[200];
        public byte bRdCmdErrCnt;
        public ushort g_u16RdSel;
        public byte bRs485Addr = 1;
        public ushort u16Rs485RegAddr;
        public ushort u16Rs485RegNum;
        public byte bRs485ByteNum;
        public ushort u16Rs485RegData;
        public string bLanguageSelect;
        private string filename;
        public int CountCnt;
        public int cout;
        public int m;
        public int len;
        public int length;
        public byte[] sendbuf;
        public float ProgressBar_n;
        private string str_FormName = "32串通用上位机";
        private byte bRxByteCnt;
        private byte bTotleBytes;
        private bool bRxFrameFinishFlag;
        private byte bProtectElement;
        private byte bWarnElement;
        private byte bAddElement;
        private byte bOtherElement;
        private byte AllProtectReadClickCall_FLAG;
        private byte u8ReadAllms = 20;
        private byte bIsEng;
        private string gsLogFilePath;
        private string sLogName = "时间,第一串电压,第二串电压,第三串电压,第四串电压,第五串电压,第六串电压,第七串电压,第八串电压,第九串电压,第十串电压,第十一串电压,第十二串电压,第十三串电压,第十四串电压,第十五串电压,第十六串电压,总压,充电电流,放电电流,SOC,充电管,放电管,IIC通讯失败保护,CBC短路保护,单节过压保护,单节低压保护,总电压过压保护,总电压低压保护,充电过流保护,放电过流保护,充电过温保护,放电过温保护,充电低温保护,放电低温保护,压差过大保护,SOC过低保护,MOS过温保护";
        private string sLogNameEng = "Time,VC1,VC2,VC3,VC4,VC5,VC6,VC7,VC8,VC9,VC10,VC11,VC12,VC13,VC14,VC15,VC16,Vbat,Ichg,Idsg,SOC,ChgFET,DsgFET,IICFailedProtect,CBCProtect,CellOVP,CellUVP,BatOVP,BatUVP,IchgOCP,IdsgOCP,ChgOTP,DsgOTP,ChgUTP,DsgUTP,VcellDeltaOP,SOCLowP,MosOTP";
        public byte byComAvailableNum;
        public string[] stComName;
        public string[] stComAvailable;
        public ushort u16ComCnt;
        public string[] FaultWarnName;
        public string[] FaultWarnName_Eng;
        private string Year;
        private string Month;
        private string Day;
        private string Hour;
        private string Minute;
        private string Second;
        private IContainer components;
        private Button button_TurnOnOffCom;
        private SerialPort serialPort1;
        private ComboBox comboBox_ComNum;
        private ComboBox comboBox_BandRate;
        private Timer timer1;
        private Label label_VC1;
        private Label label_VC2;
        private Label label_VC4;
        private Label label_VC3;
        private Label label_VC8;
        private Label label_VC7;
        private Label label_VC6;
        private Label label_VC5;
        private Label label_VC12;
        private Label label_VC11;
        private Label label_VC10;
        private Label label_VC9;
        private Label label_VC14;
        private Label label_VC13;
        private Button button_MosRelay_Func_Open;
        private Label label_Vcell_max;
        private Label label_Vcell_min;
        private Label label_Vbat;
        private Label label_V_delta;
        private Label label_Min_pos;
        private Label label_Max_pos;
        private Label label_Max_pos_ref;
        private Label label_V_delta_ref;
        private Label label_Vcell_max_ref;
        private Label label_Min_pos_ref;
        private Label label_Vbat_ref;
        private Label label_Vcell_min_ref;
        private Label label7;
        private Label label8;
        private Label label9;
        private Label label10;
        private Label label11;
        private Label label12;
        private Label label13;
        private Label label14;
        private Label label15;
        private Label label16;
        private Label label17;
        private Label label18;
        private Label label19;
        private Label label20;
        private GroupBox groupBox_Vcell;
        private GroupBox groupBox_Vcell_Status;
        private Label label_Temp1_ref;
        private Label label_Temp3_ref;
        private Label label_Temp2_ref;
        private Label label_Temp_env_ref;
        private Label label_CHG_MOS_ref;
        private Label label_heat_ref;
        private GroupBox groupBox_OtherStatus;
        private Label label_Fault_Second;
        private Label label_Fault_First;
        private Label label_SysStatus_CHG_MOS;
        private Label label_WarnStu_ref;
        private Label label_DSG_MOS_ref;
        private Label label_FaultStu_ref;
        private Label label_SysStatus_Pre_MOS;
        private Label label_SysStatus_Heat;
        private TabControl tabControl1;
        private TabPage tabPage1;
        private GroupBox groupBox_Temperature;
        private Label label_Temp5;
        private Label label_Temp4;
        private Label label_Temp2;
        private Label label_Temp1;
        private Label label_Temp_mos_ref;
        private Label label_Temp3;
        private EventLog eventLog1;
        private GroupBox groupBox_Balance;
        private Label label30;
        private Label Balanced_VC1;
        private Label Balanced_VC2;
        private Label Balanced_VC3;
        private Label label36;
        private Label Balanced_VC4;
        private Label label41;
        private Label Balanced_VC5;
        private Label label43;
        private Label label45;
        private Label label49;
        private Label label50;
        private Label label51;
        private Label label52;
        private Label label53;
        private Label label54;
        private Label label55;
        private Label label56;
        private Label label61;
        private Label Balanced_VC6;
        private Label Balanced_VC7;
        private Label Balanced_VC8;
        private Label Balanced_VC9;
        private Label Balanced_VC10;
        private Label Balanced_VC11;
        private Label Balanced_VC12;
        private Label Balanced_VC13;
        private Label Balanced_VC14;
        private GroupBox groupBox_read;
        private GroupBox groupBox_set;
        private Label label_CtrlStartup;
        private ToolStrip toolStrip_Imformation;
        private ToolStripLabel toolStripLabel_RxCnt1;
        private TabPage tabPage3;
        private Button button_Heated_Func_Open;
        private Label label_CtrlBalance;
        private Label label_CtrlHeat;
        private Label label_BaudRate;
        private Label label_UART;
        private Label label_CtrlAFEWake;
        private Label label_CtrlAFEShut;
        private Label label171;
        private Label label_VC15;
        private Label label219;
        private Label Balanced_VC15;
        private Label label_TempMin;
        private Label label_TempMin_ref;
        private Label label_TempMax;
        private Label label_TempMax_ref;
        private GroupBox groupBox_ERROR;
        private Label label_Err_LSE;
        private Label label_Err_Flash;
        private Label label_Err_CBC;
        private Label label_Err_E2P_COM;
        private Label label_Reserved4_ref;
        private Label label_Reserved3_ref;
        private Label label_Reserved2_ref;
        private Label label_Reserved1_ref;
        private Label label_AFE_ComError_ref;
        private Label label229;
        private Label label_Err_AFE1;
        private Label label_CBC_ref;
        private Label label_Err_AFE2;
        private Label label_CycleTimes;
        private Label label_CycleTimes_ref;
        private Label label242;
        private Label label_Factory_mAh_ref;
        private Label label_SOH;
        private Label label_Present_mAh;
        private Label label250;
        private Label label_Present_mAh_ref;
        private Label label_Factory_mAh;
        private Label label_SOC;
        private Label label_Full_mAh;
        private Label label_Residue_mAh_ref;
        private GroupBox groupBox_Present;
        private Button button_ProtectPresentClear;
        private TextBox textBox_Fault_First1;
        private TextBox textBox_Fault_First2;
        private TextBox textBox_Fault_First3;
        private TextBox textBox_Fault_First4;
        private Label label_Fault_Reacent;
        private TextBox textBox_Fault_Second1;
        private TextBox textBox_Fault_Second2;
        private TextBox textBox_Fault_Second3;
        private TextBox textBox_Fault_Second4;
        private Label label_Warn_Reacent;
        private Timer timer2;
        private ToolStripLabel toolStripLabel_RTC_second;
        private ToolStripLabel toolStripLabel4;
        private ToolStripLabel toolStripLabel_RTC_minute;
        private ToolStripLabel toolStripLabel2;
        private ToolStripLabel toolStripLabel_RTC_hour;
        private ToolStripLabel toolStripLabel11;
        private ToolStripLabel toolStripLabel_RTC_day;
        private ToolStripLabel toolStripLabel7;
        private ToolStripLabel toolStripLabel_RTC_month;
        private ToolStripLabel toolStripLabel9;
        private ToolStripLabel toolStripLabel_RTC_year;
        private TabPage tabPage4;
        private GroupBox groupBox2;
        private Label label33;
        private Label label34;
        private Label label38;
        private Label label29;
        private Label label28;
        private Label label27;
        private TextBox textBox_RTC_Alarm_Second;
        private TextBox textBox_RTC_Alarm_Minute;
        private TextBox textBox_RTC_Alarm_Hour;
        private TextBox textBox_RTC_Alarm_Day;
        private TextBox textBox_RTC_Alarm_Month;
        private Label label26;
        private Button button_RTC_Set;
        private TextBox textBox_RTC_Alarm_Year;
        private TextBox textBox_RTC_Time_Second;
        private TextBox textBox_RTC_Time_Minute;
        private TextBox textBox_RTC_Time_Hour;
        private TextBox textBox_RTC_Time_Day;
        private TextBox textBox_RTC_Time_Month;
        private Label label25;
        private Button button_RTC_Read;
        private TextBox textBox_RTC_Time_Year;
        private ToolStripLabel toolStripLabel10;
        private ToolStripLabel toolStripLabel_TxCnt1;
        private GroupBox groupBox_History;
        private Button Button_Fault_Record_Read;
        private Button Button_Fault_Record_Clear;
        private TextBox textBox_Fault_Record10;
        private TextBox textBox_Fault_Record4;
        private TextBox textBox_Fault_Record3;
        private TextBox textBox_Fault_Record6;
        private TextBox textBox_Fault_Record5;
        private TextBox textBox_Fault_Record2;
        private TextBox textBox_Fault_Record1;
        private TextBox textBox_Fault_Record7;
        private TextBox textBox_Fault_Record8;
        private TextBox textBox_Fault_Record9;
        private Label label_Time_Fault_Record10;
        private Label label_Time_Fault_Record9;
        private Label label_Time_Fault_Record8;
        private Label label_Time_Fault_Record7;
        private Label label_Time_Fault_Record6;
        private Label label_Time_Fault_Record5;
        private Label label_Time_Fault_Record4;
        private Label label_Time_Fault_Record3;
        private Label label_Time_Fault_Record2;
        private Label label_Time_Fault_Record1;
        private GroupBox groupBox_upgrate;
        private Button button_upgrate_clear;
        private Label label2;
        private Button button_upgrate_begin;
        private ProgressBar progressBar_upgrate;
        private Button button_upgrate_connect;
        private Label label1;
        private Button Button_upgrate_find;
        private TextBox textBox_upgrate_window;
        private TextBox textBox_upgrate_pack;
        private Label label_Fault_Third;
        private Label label309;
        private GroupBox groupBox7;
        private Label label_Res_Third;
        private Label label_Vdelta_Op_Third;
        private Label label_Soc_Up_Third;
        private Label label283;
        private Label label284;
        private Label label_Tmos_OTP_Third;
        private Label label286;
        private Label label287;
        private Label label_Celldsg_UT_Third;
        private Label label_Celldsg_OT_Third;
        private Label label290;
        private Label label291;
        private Label label292;
        private Label label293;
        private Label label294;
        private Label label_DSG_OC_Third;
        private Label label296;
        private Label label_CHG_OC_Third;
        private Label label_Cellchg_UT_Third;
        private Label label_Cellchg_OT_Third;
        private Label label300;
        private Label label301;
        private Label label302;
        private Label label303;
        private Label label_Vbat_UV_Third;
        private Label label_Vcell_UV_Third;
        private Label label_Vbat_OV_Third;
        private Label label_Vcell_OV_Third;
        private GroupBox groupBox6;
        private Label label_Res_Second;
        private Label label_Vdelta_Op_Second;
        private Label label_Soc_Up_Second;
        private Label label255;
        private Label label256;
        private Label label_Tmos_OTP_Second;
        private Label label258;
        private Label label259;
        private Label label_Celldsg_UT_Second;
        private Label label_Celldsg_OT_Second;
        private Label label262;
        private Label label263;
        private Label label264;
        private Label label265;
        private Label label266;
        private Label label_DSG_OC_Second;
        private Label label268;
        private Label label_CHG_OC_Second;
        private Label label_Cellchg_UT_Second;
        private Label label_Cellchg_OT_Second;
        private Label label272;
        private Label label273;
        private Label label274;
        private Label label275;
        private Label label_Vbat_UV_Second;
        private Label label_Vcell_UV_Second;
        private Label label_Vbat_OV_Second;
        private Label label_Vcell_OV_Second;
        private GroupBox groupBox5;
        private Label label_Res_First;
        private Label label_Vdelta_Op_First;
        private Label label_Soc_Up_First;
        private Label label168;
        private Label label169;
        private Label label_Tmos_OTP_First;
        private Label label173;
        private Label label221;
        private Label label_Celldsg_UT_First;
        private Label label_Celldsg_OT_First;
        private Label label230;
        private Label label231;
        private Label label233;
        private Label label234;
        private Label label235;
        private Label label_DSG_OC_First;
        private Label label237;
        private Label label_CHG_OC_First;
        private Label label_Cellchg_UT_First;
        private Label label_Cellchg_OT_First;
        private Label label243;
        private Label label244;
        private Label label245;
        private Label label246;
        private Label label_Vbat_UV_First;
        private Label label_Vcell_UV_First;
        private Label label_Vbat_OV_First;
        private Label label_Vcell_OV_First;
        private GroupBox groupBox4;
        private Label label118;
        private Label Balanced_VC30;
        private Label label120;
        private Label Balanced_VC16;
        private Label Balanced_VC17;
        private Label Balanced_VC18;
        private Label label124;
        private Label Balanced_VC19;
        private Label label133;
        private Label Balanced_VC20;
        private Label label135;
        private Label label136;
        private Label label137;
        private Label label138;
        private Label label139;
        private Label label140;
        private Label label141;
        private Label label142;
        private Label label143;
        private Label label144;
        private Label label145;
        private Label Balanced_VC21;
        private Label Balanced_VC22;
        private Label Balanced_VC23;
        private Label Balanced_VC24;
        private Label Balanced_VC25;
        private Label Balanced_VC26;
        private Label Balanced_VC27;
        private Label Balanced_VC28;
        private Label Balanced_VC29;
        private GroupBox groupBox3;
        private Label label47;
        private Label label_VC30;
        private Label label57;
        private Label label_VC16;
        private Label label_VC17;
        private Label label_VC18;
        private Label label69;
        private Label label_VC19;
        private Label label93;
        private Label label_VC20;
        private Label label95;
        private Label label96;
        private Label label97;
        private Label label98;
        private Label label99;
        private Label label100;
        private Label label101;
        private Label label102;
        private Label label103;
        private Label label104;
        private Label label105;
        private Label label_VC21;
        private Label label_VC22;
        private Label label_VC23;
        private Label label_VC24;
        private Label label_VC25;
        private Label label_VC26;
        private Label label_VC27;
        private Label label_VC28;
        private Label label_VC29;
        private Label label157;
        private Label label_TempMos;
        private Label label_TempEnv2;
        private Label label160;
        private Label label_TempEnv3;
        private Label label_TempEnv1;
        private Label label163;
        private Label label164;
        private Label label155;
        private Label label_Temp6;
        private GroupBox groupBox_Daily;
        private TextBox textBox_LogTimer;
        private TextBox textBox_LogFileName;
        private Label label_LogTimer;
        private Label label_LogFileName;
        private Button button_LogTimerStart;
        private Button button_LogTimerStop;
        private Label label_Err_ADC;
        private Label label327;
        private Label label_Err_SPI;
        private Label label325;
        private Label label_Err_Balanced;
        private Label label311;
        private TabPage tabPage2;
        private GroupBox groupBox_Vcell_cal;
        private GroupBox groupBox_Vcell16;
        private TextBox textBox_Vy2_16;
        private TextBox textBox_Vx2_16;
        private TextBox textBox_Vy1_16;
        private TextBox textBox_Vx1_16;
        private Label label172;
        private Button button_calc_cell16;
        private Button button_cali_cell16;
        private Label label218;
        private TextBox textBox_cail_cell16_b;
        private Label label220;
        private Label label222;
        private TextBox textBox_cail_cell16_k;
        private GroupBox groupBox_Vcell14;
        private TextBox textBox_Vy2_14;
        private TextBox textBox_Vx2_14;
        private TextBox textBox_Vy1_14;
        private TextBox textBox_Vx1_14;
        private Label label192;
        private Button button_calc_cell14;
        private Button button_cali_cell14;
        private Label label193;
        private TextBox textBox_cail_cell14_b;
        private Label label88;
        private Label label89;
        private TextBox textBox_cail_cell14_k;
        private GroupBox groupBox_Vcell15;
        private TextBox textBox_Vy2_15;
        private TextBox textBox_Vx2_15;
        private TextBox textBox_Vy1_15;
        private TextBox textBox_Vx1_15;
        private Label label223;
        private Button button_cali_cell15;
        private TextBox textBox_cail_cell15_b;
        private Label label224;
        private Label label225;
        private Button button_calc_cell15;
        private Label label226;
        private TextBox textBox_cail_cell15_k;
        private GroupBox groupBox_Vcell13;
        private TextBox textBox_Vy2_13;
        private TextBox textBox_Vx2_13;
        private TextBox textBox_Vy1_13;
        private TextBox textBox_Vx1_13;
        private Label label182;
        private Button button_cali_cell13;
        private TextBox textBox_cail_cell13_b;
        private Label label183;
        private Label label90;
        private Button button_calc_cell13;
        private Label label91;
        private TextBox textBox_cail_cell13_k;
        private GroupBox groupBox_Vcell12;
        private TextBox textBox_Vy2_12;
        private TextBox textBox_Vx2_12;
        private TextBox textBox_Vy1_12;
        private TextBox textBox_Vx1_12;
        private Label label200;
        private Button button_calc_cell12;
        private Button button_cali_cell12;
        private Label label201;
        private TextBox textBox_cail_cell12_b;
        private Label label76;
        private Label label77;
        private TextBox textBox_cail_cell12_k;
        private GroupBox groupBox_Vcell6;
        private TextBox textBox_Vy2_6;
        private TextBox textBox_Vx2_6;
        private TextBox textBox_Vy1_6;
        private TextBox textBox_Vx1_6;
        private Label label196;
        private Button button_calc_cell6;
        private Button button_cali_cell6;
        private Label label197;
        private TextBox textBox_cail_cell6_b;
        private Label label74;
        private Label label75;
        private TextBox textBox_cail_cell6_k;
        private GroupBox groupBox_Vcell11;
        private TextBox textBox_Vy2_11;
        private TextBox textBox_Vx2_11;
        private TextBox textBox_Vy1_11;
        private TextBox textBox_Vx1_11;
        private Label label190;
        private Button button_calc_cell11;
        private Button button_cali_cell11;
        private Label label191;
        private TextBox textBox_cail_cell11_b;
        private Label label78;
        private Label label79;
        private TextBox textBox_cail_cell11_k;
        private GroupBox groupBox_Vcell5;
        private TextBox textBox_Vy2_5;
        private TextBox textBox_Vx2_5;
        private TextBox textBox_Vy1_5;
        private TextBox textBox_Vx1_5;
        private Label label186;
        private Button button_calc_cell5;
        private Button button_cali_cell5;
        private Label label187;
        private TextBox textBox_cail_cell5_b;
        private Label label72;
        private Label label73;
        private TextBox textBox_cail_cell5_k;
        private GroupBox groupBox_Vcell1;
        private TextBox textBox_Vy2_1;
        private Button button_calc_cell1;
        private TextBox textBox_Vx2_1;
        private Label label174;
        private TextBox textBox_Vy1_1;
        private Button button_cali_cell1;
        private TextBox textBox_Vx1_1;
        private TextBox textBox_cail_cell1_b;
        private Label label175;
        private Label label32;
        private Label label31;
        private TextBox textBox_cail_cell1_k;
        private GroupBox groupBox_Vcell10;
        private TextBox textBox_Vy2_10;
        private TextBox textBox_Vx2_10;
        private TextBox textBox_Vy1_10;
        private TextBox textBox_Vx1_10;
        private Button button_calc_cell10;
        private Label label180;
        private Button button_cali_cell10;
        private TextBox textBox_cail_cell10_b;
        private Label label181;
        private Label label80;
        private Label label81;
        private TextBox textBox_cail_cell10_k;
        private GroupBox groupBox_Vcell4;
        private TextBox textBox_Vy2_4;
        private TextBox textBox_Vx2_4;
        private TextBox textBox_Vy1_4;
        private TextBox textBox_Vx1_4;
        private Button button_calc_cell4;
        private Label label176;
        private Button button_cali_cell4;
        private TextBox textBox_cail_cell4_b;
        private Label label177;
        private Label label70;
        private Label label71;
        private TextBox textBox_cail_cell4_k;
        private GroupBox groupBox_Vcell8;
        private TextBox textBox_Vy2_8;
        private TextBox textBox_Vx2_8;
        private TextBox textBox_Vy1_8;
        private TextBox textBox_Vx1_8;
        private Label label188;
        private Button button_calc_cell8;
        private Button button_cali_cell8;
        private Label label189;
        private TextBox textBox_cail_cell8_b;
        private Label label82;
        private Label label83;
        private TextBox textBox_cail_cell8_k;
        private Button button_Reset_Vcell;
        private GroupBox groupBox_Vcell7;
        private TextBox textBox_Vy2_7;
        private TextBox textBox_Vx2_7;
        private TextBox textBox_Vy1_7;
        private TextBox textBox_Vx1_7;
        private Button button_calc_cell7;
        private Label label178;
        private Button button_cali_cell7;
        private TextBox textBox_cail_cell7_b;
        private Label label179;
        private Label label84;
        private Label label85;
        private TextBox textBox_cail_cell7_k;
        private GroupBox groupBox_Vcell9;
        private TextBox textBox_Vy2_9;
        private TextBox textBox_Vx2_9;
        private TextBox textBox_Vy1_9;
        private TextBox textBox_Vx1_9;
        private Label label198;
        private Button button_calc_cell9;
        private Button button_cali_cell9;
        private Label label199;
        private TextBox textBox_cail_cell9_b;
        private Label label86;
        private Label label87;
        private TextBox textBox_cail_cell9_k;
        private GroupBox groupBox_Vcell3;
        private TextBox textBox_Vy2_3;
        private Label label194;
        private TextBox textBox_Vx2_3;
        private Button button_calc_cell3;
        private TextBox textBox_Vy1_3;
        private Button button_cali_cell3;
        private TextBox textBox_Vx1_3;
        private Label label195;
        private TextBox textBox_cail_cell3_b;
        private Label label42;
        private Label label62;
        private TextBox textBox_cail_cell3_k;
        private GroupBox groupBox_Vcell2;
        private TextBox textBox_Vy2_2;
        private TextBox textBox_Vx2_2;
        private TextBox textBox_Vy1_2;
        private TextBox textBox_Vx1_2;
        private Label label184;
        private Button button_calc_cell2;
        private Button button_cali_cell2;
        private Label label185;
        private TextBox textBox_cail_cell2_b;
        private Label label35;
        private Label label37;
        private TextBox textBox_cail_cell2_k;
        private Button button_Read_Vcell;
        private TabPage tabPage5;
        private GroupBox groupBox_Vall_I;
        private Button button_Ichg_reset;
        private Button button_Idsg_reset;
        private Button button_Current_read;
        private GroupBox groupBox_Idsg;
        private Button button_calc_Idsg;
        private TextBox textBox_Vy2_Idsg;
        private Button button_cali_Idsg;
        private TextBox textBox_Vx2_Idsg;
        private TextBox textBox_cail_Idsg_b;
        private Label label206;
        private Label label67;
        private TextBox textBox_Vy1_Idsg;
        private Label label68;
        private Label label207;
        private TextBox textBox_Vx1_Idsg;
        private TextBox textBox_cail_Idsg_k;
        private GroupBox groupBox_Ichg;
        private Button button_calc_Ichg;
        private TextBox textBox_Vy2_Ichg;
        private Button button_cali_Ichg;
        private TextBox textBox_Vx2_Ichg;
        private TextBox textBox_cail_Ichg_b;
        private Label label204;
        private Label label65;
        private TextBox textBox_Vy1_Ichg;
        private Label label66;
        private Label label205;
        private TextBox textBox_Vx1_Ichg;
        private TextBox textBox_cail_Ichg_k;
        private GroupBox groupBox_temp_cal;
        private Button button_temp_reset;
        private Button button_temp_read;
        private GroupBox groupBox_temp_mos;
        private TextBox textBox_Vy2_tempMos;
        private Button button_calc_tempmos;
        private TextBox textBox_Vx2_tempMos;
        private Button button_cali_temp_mos;
        private Label label212;
        private TextBox textBox_temp_mos_b;
        private TextBox textBox_Vy1_tempMos;
        private Label label130;
        private Label label213;
        private TextBox textBox_Vx1_tempMos;
        private Label label131;
        private TextBox textBox_temp_mos_k;
        private GroupBox groupBox_temp3;
        private TextBox textBox_Vy2_temp3;
        private Button button_calc_temp3;
        private TextBox textBox_Vx2_temp3;
        private Button button_cali_temp3;
        private Label label210;
        private TextBox textBox_temp3_b;
        private TextBox textBox_Vy1_temp3;
        private Label label126;
        private Label label211;
        private TextBox textBox_Vx1_temp3;
        private Label label127;
        private TextBox textBox_temp3_k;
        private GroupBox groupBox_temp_env;
        private Button button_calc_tempEnv1;
        private TextBox textBox_Vy2_tempEnv1;
        private Button button_cali_tempEnv1;
        private TextBox textBox_Vx2_tempEnv1;
        private TextBox textBox_tempEnv1_b;
        private Label label216;
        private Label label128;
        private TextBox textBox_Vy1_tempEnv1;
        private Label label129;
        private Label label217;
        private TextBox textBox_Vx1_tempEnv1;
        private TextBox textBox_tempEnv1_k;
        private GroupBox groupBox_temp1;
        private TextBox textBox_Vy2_temp1;
        private Button button_calc_temp1;
        private TextBox textBox_Vx2_temp1;
        private Button button_cali_temp1;
        private Label label208;
        private TextBox textBox_temp1_b;
        private TextBox textBox_Vy1_temp1;
        private Label label112;
        private Label label209;
        private TextBox textBox_Vx1_temp1;
        private Label label115;
        private TextBox textBox_temp1_k;
        private GroupBox groupBox_temp2;
        private TextBox textBox_Vy2_temp2;
        private Button button_calc_temp2;
        private TextBox textBox_Vx2_temp2;
        private Button button_cali_temp2;
        private Label label214;
        private TextBox textBox_temp2_b;
        private TextBox textBox_Vy1_temp2;
        private Label label116;
        private Label label215;
        private TextBox textBox_Vx1_temp2;
        private Label label125;
        private TextBox textBox_temp2_k;
        private GroupBox groupBox20;
        private TextBox textBox_Vy2_30;
        private TextBox textBox_Vx2_30;
        private TextBox textBox_Vy1_30;
        private TextBox textBox_Vx1_30;
        private Label label376;
        private Button button_calc_cell30;
        private Button button_cali_cell30;
        private Label label377;
        private TextBox textBox_cail_cell30_b;
        private Label label378;
        private Label label379;
        private TextBox textBox_cail_cell30_k;
        private GroupBox groupBox13;
        private TextBox textBox_Vy2_28;
        private TextBox textBox_Vx2_28;
        private TextBox textBox_Vy1_28;
        private TextBox textBox_Vx1_28;
        private Label label348;
        private Button button_calc_cell28;
        private Button button_cali_cell28;
        private Label label349;
        private TextBox textBox_cail_cell28_b;
        private Label label350;
        private Label label351;
        private TextBox textBox_cail_cell28_k;
        private GroupBox groupBox21;
        private TextBox textBox_Vy2_29;
        private TextBox textBox_Vx2_29;
        private TextBox textBox_Vy1_29;
        private TextBox textBox_Vx1_29;
        private Label label380;
        private Button button_cali_cell29;
        private TextBox textBox_cail_cell29_b;
        private Label label381;
        private Label label382;
        private Button button_calc_cell29;
        private Label label383;
        private TextBox textBox_cail_cell29_k;
        private GroupBox groupBox8;
        private TextBox textBox_Vy2_21;
        private TextBox textBox_Vx2_21;
        private TextBox textBox_Vy1_21;
        private TextBox textBox_Vx1_21;
        private Label label328;
        private Button button_calc_cell21;
        private Button button_cali_cell21;
        private Label label329;
        private TextBox textBox_cail_cell21_b;
        private Label label330;
        private Label label331;
        private TextBox textBox_cail_cell21_k;
        private GroupBox groupBox14;
        private TextBox textBox_Vy2_23;
        private TextBox textBox_Vx2_23;
        private TextBox textBox_Vy1_23;
        private TextBox textBox_Vx1_23;
        private Label label352;
        private Button button_calc_cell23;
        private Button button_cali_cell23;
        private Label label353;
        private TextBox textBox_cail_cell23_b;
        private Label label354;
        private Label label355;
        private TextBox textBox_cail_cell23_k;
        private GroupBox groupBox15;
        private TextBox textBox_Vy2_27;
        private TextBox textBox_Vx2_27;
        private TextBox textBox_Vy1_27;
        private TextBox textBox_Vx1_27;
        private Label label356;
        private Button button_cali_cell27;
        private TextBox textBox_cail_cell27_b;
        private Label label357;
        private Label label358;
        private Button button_calc_cell27;
        private Label label359;
        private TextBox textBox_cail_cell27_k;
        private GroupBox groupBox9;
        private TextBox textBox_Vy2_20;
        private TextBox textBox_Vx2_20;
        private TextBox textBox_Vy1_20;
        private TextBox textBox_Vx1_20;
        private Label label332;
        private Button button_cali_cell20;
        private TextBox textBox_cail_cell20_b;
        private Label label333;
        private Label label334;
        private Button button_calc_cell20;
        private Label label335;
        private TextBox textBox_cail_cell20_k;
        private GroupBox groupBox16;
        private TextBox textBox_Vy2_26;
        private TextBox textBox_Vx2_26;
        private TextBox textBox_Vy1_26;
        private TextBox textBox_Vx1_26;
        private Label label360;
        private Button button_calc_cell26;
        private Button button_cali_cell26;
        private Label label361;
        private TextBox textBox_cail_cell26_b;
        private Label label362;
        private Label label363;
        private TextBox textBox_cail_cell26_k;
        private GroupBox groupBox17;
        private TextBox textBox_Vy2_22;
        private TextBox textBox_Vx2_22;
        private TextBox textBox_Vy1_22;
        private TextBox textBox_Vx1_22;
        private Label label364;
        private Button button_cali_cell22;
        private TextBox textBox_cail_cell22_b;
        private Label label365;
        private Label label366;
        private Button button_calc_cell22;
        private Label label367;
        private TextBox textBox_cail_cell22_k;
        private GroupBox groupBox18;
        private TextBox textBox_Vy2_25;
        private TextBox textBox_Vx2_25;
        private TextBox textBox_Vy1_25;
        private TextBox textBox_Vx1_25;
        private Label label368;
        private Button button_calc_cell25;
        private Button button_cali_cell25;
        private Label label369;
        private TextBox textBox_cail_cell25_b;
        private Label label370;
        private Label label371;
        private TextBox textBox_cail_cell25_k;
        private GroupBox groupBox10;
        private TextBox textBox_Vy2_19;
        private TextBox textBox_Vx2_19;
        private TextBox textBox_Vy1_19;
        private TextBox textBox_Vx1_19;
        private Label label336;
        private Button button_calc_cell19;
        private Button button_cali_cell19;
        private Label label337;
        private TextBox textBox_cail_cell19_b;
        private Label label338;
        private Label label339;
        private TextBox textBox_cail_cell19_k;
        private GroupBox groupBox19;
        private TextBox textBox_Vy2_24;
        private TextBox textBox_Vx2_24;
        private TextBox textBox_Vy1_24;
        private TextBox textBox_Vx1_24;
        private Button button_calc_cell24;
        private Label label372;
        private Button button_cali_cell24;
        private TextBox textBox_cail_cell24_b;
        private Label label373;
        private Label label374;
        private Label label375;
        private TextBox textBox_cail_cell24_k;
        private GroupBox groupBox11;
        private TextBox textBox_Vy2_18;
        private TextBox textBox_Vx2_18;
        private TextBox textBox_Vy1_18;
        private TextBox textBox_Vx1_18;
        private Label label340;
        private Button button_calc_cell18;
        private Button button_cali_cell18;
        private Label label341;
        private TextBox textBox_cail_cell18_b;
        private Label label342;
        private Label label343;
        private TextBox textBox_cail_cell18_k;
        private GroupBox groupBox12;
        private TextBox textBox_Vy2_17;
        private TextBox textBox_Vx2_17;
        private TextBox textBox_Vy1_17;
        private TextBox textBox_Vx1_17;
        private Button button_calc_cell17;
        private Label label344;
        private Button button_cali_cell17;
        private TextBox textBox_cail_cell17_b;
        private Label label345;
        private Label label346;
        private Label label347;
        private TextBox textBox_cail_cell17_k;
        private GroupBox groupBox22;
        private TextBox textBox_Vy2_AFE2;
        private TextBox textBox_Vx2_AFE2;
        private TextBox textBox_Vy1_AFE2;
        private TextBox textBox_Vx1_AFE2;
        private Label label384;
        private Button button_calc_AFE2;
        private Button button_cali_AFE2;
        private Label label385;
        private TextBox textBox_cail_AFE2_b;
        private Label label386;
        private Label label387;
        private TextBox textBox_cail_AFE2_k;
        private GroupBox groupBox23;
        private TextBox textBox_Vy2_AFE1;
        private TextBox textBox_Vx2_AFE1;
        private TextBox textBox_Vy1_AFE1;
        private TextBox textBox_Vx1_AFE1;
        private Label label388;
        private Button button_cali_AFE1;
        private TextBox textBox_cail_AFE1_b;
        private Label label389;
        private Label label390;
        private Button button_calc_AFE1;
        private Label label391;
        private TextBox textBox_cail_AFE1_k;
        private GroupBox groupBox1;
        private Button button_calc_Vbus;
        private TextBox textBox_Vy2_Vbus;
        private Button button_cali_Vbus;
        private TextBox textBox_Vx2_Vbus;
        private TextBox textBox_cail_Vbus_b;
        private Label label4;
        private Label label5;
        private TextBox textBox_Vy1_Vbus;
        private Label label6;
        private Label label21;
        private TextBox textBox_Vx1_Vbus;
        private TextBox textBox_cail_Vbus_k;
        private Button button_Reset_AFE2;
        private Button button_Reset_Vbus;
        private Button button_Reset_AFE1;
        private Button button_Read_Vafe_bus;
        private GroupBox groupBox24;
        private TextBox textBox_SocTable_Value10;
        private TextBox textBox_SocTable_Value9;
        private TextBox textBox_SocTable_Value8;
        private TextBox textBox_SocTable_Value7;
        private TextBox textBox_SocTable_Volt10;
        private TextBox textBox_SocTable_Volt9;
        private TextBox textBox_SocTable_Volt8;
        private TextBox textBox_SocTable_Volt7;
        private TextBox textBox_SocTable_Value6;
        private TextBox textBox_SocTable_Value5;
        private TextBox textBox_SocTable_Value4;
        private TextBox textBox_SocTable_Value3;
        private TextBox textBox_SocTable_Value2;
        private Label label394;
        private Button button_SocTable_Set;
        private TextBox textBox_SocTable_Value1;
        private TextBox textBox_SocTable_Volt6;
        private TextBox textBox_SocTable_Volt5;
        private TextBox textBox_SocTable_Volt4;
        private TextBox textBox_SocTable_Volt3;
        private TextBox textBox_SocTable_Volt2;
        private Label label395;
        private Button button_SocTable_Read;
        private TextBox textBox_SocTable_Volt1;
        private GroupBox groupBox28;
        private TextBox textBox_Vy2_tempEnv3;
        private Button button_calc_tempEnv3;
        private TextBox textBox_Vx2_tempEnv3;
        private Button button_cali_tempEnv3;
        private Label label402;
        private TextBox textBox_tempEnv3_b;
        private TextBox textBox_Vy1_tempEnv3;
        private Label label403;
        private Label label404;
        private TextBox textBox_Vx1_tempEnv3;
        private Label label405;
        private TextBox textBox_tempEnv3_k;
        private GroupBox groupBox25;
        private TextBox textBox_Vy2_temp6;
        private Button button_calc_temp6;
        private TextBox textBox_Vx2_temp6;
        private Button button_cali_temp6;
        private Label label63;
        private TextBox textBox_temp6_b;
        private TextBox textBox_Vy1_temp6;
        private Label label64;
        private Label label202;
        private TextBox textBox_Vx1_temp6;
        private Label label203;
        private TextBox textBox_temp6_k;
        private GroupBox groupBox29;
        private TextBox textBox_Vy2_tempEnv2;
        private Button button_calc_tempEnv2;
        private TextBox textBox_Vx2_tempEnv2;
        private Button button_cali_tempEnv2;
        private Label label406;
        private TextBox textBox_tempEnv2_b;
        private TextBox textBox_Vy1_tempEnv2;
        private Label label407;
        private Label label408;
        private TextBox textBox_Vx1_tempEnv2;
        private Label label409;
        private TextBox textBox_tempEnv2_k;
        private GroupBox groupBox26;
        private TextBox textBox_Vy2_temp4;
        private Button button_calc_temp4;
        private TextBox textBox_Vx2_temp4;
        private Button button_cali_temp4;
        private Label label392;
        private TextBox textBox_temp4_b;
        private TextBox textBox_Vy1_temp4;
        private Label label393;
        private Label label396;
        private TextBox textBox_Vx1_temp4;
        private Label label397;
        private TextBox textBox_temp4_k;
        private GroupBox groupBox27;
        private TextBox textBox_Vy2_temp5;
        private Button button_calc_temp5;
        private TextBox textBox_Vx2_temp5;
        private Button button_cali_temp5;
        private Label label398;
        private TextBox textBox_temp5_b;
        private TextBox textBox_Vy1_temp5;
        private Label label399;
        private Label label400;
        private TextBox textBox_Vx1_temp5;
        private Label label401;
        private TextBox textBox_temp5_k;
        private TextBox textBox_Fault_Third1;
        private TextBox textBox_Fault_Third2;
        private TextBox textBox_Fault_Third3;
        private TextBox textBox_Fault_Third4;
        private Label label410;
        private Label label40;
        private Label label44;
        private Label label39;
        private Label label24;
        private Button button_SocUp_set;
        private TextBox textBox_SocUp_DelayT;
        private TextBox textBox_SocUp_Rec;
        private TextBox textBox_SocUp_Second;
        private TextBox textBox_SocUp_Third;
        private TextBox textBox_SocUp_First;
        private Button button_VdeltaOVP_set;
        private TextBox textBox_VdeltaOVP_DelayT;
        private TextBox textBox_VdeltaOVP_Rec;
        private TextBox textBox_VdeltaOVP_Second;
        private TextBox textBox_VdeltaOVP_Third;
        private TextBox textBox_VdeltaOVP_First;
        private Button button_TmosOTP_set;
        private TextBox textBox_TmosOTP_DelayT;
        private TextBox textBox_TmosOTP_Rec;
        private TextBox textBox_TmosOTP_Second;
        private TextBox textBox_TmosOTP_Third;
        private TextBox textBox_TmosOTP_First;
        private Button button_TdsgUTP_set;
        private TextBox textBox_TdsgUTP_DelayT;
        private TextBox textBox_TdsgUTP_Rec;
        private TextBox textBox_TdsgUTP_Second;
        private TextBox textBox_TdsgUTP_Third;
        private TextBox textBox_TdsgUTP_First;
        private Button button_TdsgOTP_set;
        private TextBox textBox_TdsgOTP_DelayT;
        private TextBox textBox_TdsgOTP_Rec;
        private TextBox textBox_TdsgOTP_Second;
        private TextBox textBox_TdsgOTP_Third;
        private TextBox textBox_TdsgOTP_First;
        private Button button_TchgUTP_set;
        private TextBox textBox_TchgUTP_DelayT;
        private TextBox textBox_TchgUTP_Rec;
        private TextBox textBox_TchgUTP_Second;
        private TextBox textBox_TchgUTP_Third;
        private TextBox textBox_TchgUTP_First;
        private Button button_TchgOTP_set;
        private TextBox textBox_TchgOTP_DelayT;
        private TextBox textBox_TchgOTP_Rec;
        private TextBox textBox_TchgOTP_Second;
        private TextBox textBox_TchgOTP_Third;
        private TextBox textBox_TchgOTP_First;
        private Button button_IdsgOCP_set;
        private TextBox textBox_IdsgOCP_DelayT;
        private TextBox textBox_IdsgOCP_Rec;
        private TextBox textBox_IdsgOCP_Second;
        private TextBox textBox_IdsgOCP_Third;
        private TextBox textBox_IdsgOCP_First;
        private Button button_IchgOCP_set;
        private TextBox textBox_IchgOCP_DelayT;
        private TextBox textBox_IchgOCP_Rec;
        private TextBox textBox_IchgOCP_Second;
        private TextBox textBox_IchgOCP_Third;
        private TextBox textBox_IchgOCP_First;
        private Button button_VbusUVP_set;
        private TextBox textBox_VbusUVP_DelayT;
        private TextBox textBox_VbusUVP_Rec;
        private TextBox textBox_VbusUVP_Second;
        private TextBox textBox_VbusUVP_Third;
        private TextBox textBox_VbusUVP_First;
        private Button button_VbusOVP_set;
        private TextBox textBox_VbusOVP_DelayT;
        private TextBox textBox_VbusOVP_Rec;
        private TextBox textBox_VbusOVP_Second;
        private TextBox textBox_VbusOVP_Third;
        private TextBox textBox_VbusOVP_First;
        private Button button_VcellUVP_set;
        private TextBox textBox_VcellUVP_DelayT;
        private TextBox textBox_VcellUVP_Rec;
        private TextBox textBox_VcellUVP_Second;
        private TextBox textBox_VcellUVP_Third;
        private TextBox textBox_VcellUVP_First;
        private Label label22;
        private Label label23;
        private Label label_Tmos_OTP;
        private Label label_Tcell_DsgUTP;
        private Label label_Tcell_DsgOTP;
        private Label label_Tcell_ChgUTP;
        private Label label_Tcell_ChgOTP;
        private Label label_Idsg_OCP;
        private Label label_Ichg_OCP;
        private Button button_VcellOVP_set;
        private Button button_Protect_read;
        private Label label_Vcell_DT;
        private Label label_Vbus_UVP;
        private TextBox textBox_VcellOVP_DelayT;
        private Label label_Vbus_OVP;
        private Label label_Vcell_UVP;
        private TextBox textBox_VcellOVP_Rec;
        private TextBox textBox_VcellOVP_Second;
        private TextBox textBox_VcellOVP_Third;
        private TextBox textBox_VcellOVP_First;
        private Label lable_VcellOVP;
        private Label label46;
        private TextBox textBox_Sys_CSRes_Num;
        private Label label232;
        private TextBox textBox_Sys_PreChg_Time;
        private Label label238;
        private TextBox textBox_Sys_SeriesNum;
        private Button textBox_Sys_set;
        private Button textBox_Sys_read;
        private Label label_CS_Res;
        private TextBox textBox_Sys_CSRes;
        private Label label_CHG_low;
        private Label label_DSG_low;
        private Label label_CHG_high;
        private Label label_DSG_high;
        private Label label_Close_W2;
        private Label label_Open_W;
        private Button button_Heat_set;
        private Button button_Balance_set;
        private Button button_Heat_read;
        private Button button_Balance_read;
        private TextBox textBox_Heat_CHGlow;
        private TextBox textBox_Heat_CHGhigh;
        private TextBox textBox_closeW2;
        private TextBox textBox_closeW1;
        private Label label_Close_W1;
        private Label label_Heat_set;
        private Label labe_balance;
        private TextBox textBox_Heat_DSGlow;
        private TextBox textBox_Heat_DSGhigh;
        private TextBox textBox_openW;
        private TextBox textBox_openV;
        private Label label_Open_V;
        private GroupBox groupBox_CopperLoss;
        private Label label_CellNumNotice;
        private Label label_CellNum;
        private TextBox textBox_CellNum8;
        private TextBox textBox_CopperLoss8;
        private TextBox textBox_CellNum7;
        private TextBox textBox_CopperLoss7;
        private TextBox textBox_CellNum6;
        private TextBox textBox_CopperLoss6;
        private TextBox textBox_CellNum5;
        private TextBox textBox_CopperLoss5;
        private TextBox textBox_CellNum4;
        private TextBox textBox_CellNum3;
        private TextBox textBox_CellNum2;
        private TextBox textBox_CellNum1;
        private TextBox textBox_CopperLoss4;
        private Button button_CopperLoss_set;
        private Button button_CopperLoss_read;
        private TextBox textBox_CopperLoss3;
        private Label label_CopperLoss;
        private TextBox textBox_CopperLoss2;
        private TextBox textBox_CopperLoss1;
        private GroupBox groupBox30;
        private TextBox textBox_Vy2_32;
        private TextBox textBox_Vx2_32;
        private TextBox textBox_Vy1_32;
        private TextBox textBox_Vx1_32;
        private Label label48;
        private Button button_calc_cell32;
        private Button button_cali_cell32;
        private Label label59;
        private TextBox textBox_cail_cell32_b;
        private Label label92;
        private Label label106;
        private TextBox textBox_cail_cell32_k;
        private GroupBox groupBox31;
        private TextBox textBox_Vy2_31;
        private TextBox textBox_Vx2_31;
        private TextBox textBox_Vy1_31;
        private TextBox textBox_Vx1_31;
        private Label label107;
        private Button button_cali_cell31;
        private TextBox textBox_cail_cell31_b;
        private Label label108;
        private Label label109;
        private Button button_calc_cell31;
        private Label label110;
        private TextBox textBox_cail_cell31_k;
        private Label label113;
        private Label Balanced_VC32;
        private Label label119;
        private Label Balanced_VC31;
        private Label label111;
        private Label label_VC31;
        private Label label114;
        private Label label_VC32;
        private Label label_Err_Can;
        private Label label134;
        private Label label_Err_HSE;
        private Label label123;
        private Label label_Err_E2P_Store;
        private Label label121;
        private TextBox textBox_CellNum16;
        private TextBox textBox_CopperLoss16;
        private TextBox textBox_CellNum15;
        private TextBox textBox_CopperLoss15;
        private TextBox textBox_CellNum14;
        private TextBox textBox_CopperLoss14;
        private TextBox textBox_CellNum13;
        private TextBox textBox_CopperLoss13;
        private TextBox textBox_CellNum12;
        private TextBox textBox_CellNum11;
        private TextBox textBox_CellNum10;
        private TextBox textBox_CellNum9;
        private TextBox textBox_CopperLoss12;
        private TextBox textBox_CopperLoss11;
        private TextBox textBox_CopperLoss10;
        private TextBox textBox_CopperLoss9;
        private TextBox textBox_SocTable_Value11;
        private TextBox textBox_SocTable_Volt11;
        private Label label152;
        private Label label151;
        private Label label147;
        private TextBox textBox_Soc_CycleTime;
        private Label label148;
        private TextBox textBox_Soc_Res2;
        private Label label149;
        private TextBox textBox_Soc_TabelSelect;
        private Button textBox_Soc_set;
        private Button textBox_Soc_read;
        private Label label150;
        private TextBox textBox_Soc_Ah;
        private Label label117;
        private Label label122;
        private Label label132;
        private Label label146;
        private TextBox textBox_PreChgTime;
        private TextBox textBox_PreChgFre;
        private TextBox textBox_I_DsgLimit;
        private TextBox textBox_I_ChgLimit;
        private Label label_OverDsgT;
        private Label label_OverDsgV;
        private Label label_NormalT;
        private Label label_SleepElement;
        private Label label_NormalV;
        private Button button_Sleep_Set;
        private Button button_Sleep_Read;
        private TextBox textBox_OverDsgT;
        private TextBox textBox_OverDsgV;
        private TextBox textBox_NormalT;
        private TextBox textBox_NormalV;
        private TextBox textBox_SocTable_Value21;
        private TextBox textBox_SocTable_Volt21;
        private TextBox textBox_SocTable_Value20;
        private TextBox textBox_SocTable_Value19;
        private TextBox textBox_SocTable_Value18;
        private TextBox textBox_SocTable_Value17;
        private TextBox textBox_SocTable_Volt20;
        private TextBox textBox_SocTable_Volt19;
        private TextBox textBox_SocTable_Volt18;
        private TextBox textBox_SocTable_Volt17;
        private TextBox textBox_SocTable_Value16;
        private TextBox textBox_SocTable_Value15;
        private TextBox textBox_SocTable_Value14;
        private TextBox textBox_SocTable_Value13;
        private TextBox textBox_SocTable_Value12;
        private TextBox textBox_SocTable_Volt16;
        private TextBox textBox_SocTable_Volt15;
        private TextBox textBox_SocTable_Volt14;
        private TextBox textBox_SocTable_Volt13;
        private TextBox textBox_SocTable_Volt12;
        private GroupBox groupBox33;
        private Button button_Protect_Reset;
        private GroupBox groupBox32;
        private Button button_CanAdd_Reset;
        private Label label_Err_Res6;
        private Label label154;
        private Label label_Err_App;
        private Label label158;
        private Label label_Err_BlueTooth;
        private Label label161;
        private Label label_Err_Res5;
        private Label label166;
        private Label label_Err_Res4;
        private Label label170;
        private Label label_Err_Res3;
        private Label label228;
        private Label label_Err_Res1;
        private Label label_Err_Res2;
        private Label label_Err_Screen;
        private Label label_Err_Wifi;
        private Label label247;
        private Label label248;
        private Label label249;
        private Label label251;
        private Label label253;
        private Label label_Err_Upper;
        private Label label257;
        private Label label_Err_Client1;
        private ToolStrip toolStrip_Calib1;
        private ToolStripLabel toolStripLabel_RxCnt2;
        private ToolStrip toolStrip_Calib2;
        private ToolStripLabel toolStripLabel_RxCnt3;
        private ToolStrip toolStrip_OtherEle;
        private ToolStripLabel toolStripLabel_RxCnt5;
        private ToolStripLabel toolStripLabel33;
        private ToolStripLabel toolStripLabel_TxCnt5;
        private ToolStripLabel toolStripLabel35;
        private ToolStripLabel toolStripLabel_TxCnt2;
        private ToolStripLabel toolStripLabel36;
        private ToolStripLabel toolStripLabel_TxCnt3;
        private ToolStrip toolStrip_Protect;
        private ToolStripLabel toolStripLabel_RxCnt4;
        private ToolStripLabel toolStripLabel19;
        private ToolStripLabel toolStripLabel_TxCnt4;
        private Label label3;
        private ComboBox comboBox1;
        private GroupBox groupBox45;
        private Button button_Chinese;
        private Button button_English;
        private Button button_AFE2_Func_Close;
        private Button button_AFE2_Func_Open;
        private Button button_BMS_Source_Func_Close;
        private Button button_BMS_Source_Func_Open;
        private Button button_Sleep_Func_Close;
        private Button button_Sleep_Func_Open;
        private Label label162;
        private Label label167;
        private Button button_AFE1_Func_Close;
        private Button button_AFE1_Func_Open;
        private Button button_Balance_Func_Close;
        private Button button_Balance_Func_Open;
        private Button button_Cool_Func_Close;
        private Label label159;
        private Button button_Cool_Func_Open;
        private Button button_Heated_Func_Close;
        private Button button_SocFixed_Func_Close;
        private Label label156;
        private Button button_SocFixed_Func_Open;
        private Button button_Relay_Func_Close;
        private Label label153;
        private Button button_Relay_Func_Open;
        private Button button_MosRelay_Func_Close;
        private TabPage tabPage6;
        private Label label_BMS_Source_Func_Status;
        private Label label_Sleep_Func_Status;
        private Label label_AFE1_Func_Status;
        private Label label_Balance_Func_Status;
        private Label label_AFE2_Func_Status;
        private Label label_Cool_Func_Status;
        private Label label239;
        private Label label_Heated_Func_Status;
        private Label label236;
        private Label label_Relay_Func_Status;
        private Label label227;
        private Label label_MosRelay_Func_Status;
        private Label label_SocFixed_Func_Status;
        private GroupBox groupBox34;
        private Label label426;
        private Label label427;
        private Label label428;
        private Label label429;
        private Label label430;
        private Label label431;
        private Label label438;
        private Label label440;
        private Label label442;
        private Label label445;
        private Label label446;
        private Label label447;
        private Label label448;
        private Label label449;
        private Label label450;
        private Label label451;
        private Label label452;
        private Label label453;
        private Label label454;
        private Label label_Switch16;
        private Label label_Switch15;
        private Label label_Switch13;
        private Label label_Switch12;
        private Label label_Switch14;
        private Label label_Switch11;
        private Button button_Low_Switch14;
        private Button button_High_Switch14;
        private Button button_Low_Switch16;
        private Button button_High_Switch16;
        private Button button_Low_Switch15;
        private Button button_High_Switch15;
        private Label label414;
        private Label label415;
        private Button button_Low_Switch13;
        private Button button_High_Switch13;
        private Button button_Low_Switch12;
        private Button button_High_Switch12;
        private Button button_Low_Switch11;
        private Label label416;
        private Button button_High_Switch11;
        private Label label417;
        private Label label418;
        private Label label419;
        private Label label_Switch10;
        private Label label_Switch9;
        private Label label_Switch7;
        private Label label_Switch6;
        private Label label_Switch8;
        private Label label_Switch5;
        private Label label288;
        private Label label_Switch4;
        private Label label295;
        private Label label_Switch2;
        private Label label298;
        private Label label_Switch1;
        private Label label_Switch3;
        private Button button_Low_Switch8;
        private Button button_High_Switch8;
        private Button button_Low_Switch10;
        private Button button_High_Switch10;
        private Button button_Low_Switch9;
        private Button button_High_Switch9;
        private Label label305;
        private Label label306;
        private Button button_Low_Switch7;
        private Button button_High_Switch7;
        private Button button_Low_Switch6;
        private Button button_High_Switch6;
        private Button button_Low_Switch5;
        private Label label307;
        private Button button_High_Switch5;
        private Button button_Low_Switch4;
        private Button button_Low_Switch3;
        private Label label308;
        private Button button_High_Switch3;
        private Button button_Low_Switch2;
        private Label label310;
        private Button button_High_Switch2;
        private Button button_Low_Switch1;
        private Label label312;
        private Label label314;
        private Label label316;
        private Label label318;
        private Button button_High_Switch4;
        private Label label320;
        private Button button_High_Switch1;
        private Button button_Low_Switch30;
        private Button button_High_Switch30;
        private Button button_Low_Switch32;
        private Button button_High_Switch32;
        private Button button_Low_Switch31;
        private Button button_High_Switch31;
        private Button button_Low_Switch29;
        private Button button_High_Switch29;
        private Button button_Low_Switch28;
        private Button button_High_Switch28;
        private Button button_Low_Switch27;
        private Button button_High_Switch27;
        private Button button_Low_Switch24;
        private Button button_High_Switch24;
        private Button button_Low_Switch26;
        private Button button_High_Switch26;
        private Button button_Low_Switch25;
        private Button button_High_Switch25;
        private Button button_Low_Switch23;
        private Button button_High_Switch23;
        private Button button_Low_Switch22;
        private Button button_High_Switch22;
        private Button button_Low_Switch21;
        private Button button_High_Switch21;
        private Button button_Low_Switch20;
        private Button button_Low_Switch19;
        private Button button_High_Switch19;
        private Button button_Low_Switch18;
        private Button button_High_Switch18;
        private Button button_Low_Switch17;
        private Button button_High_Switch20;
        private Button button_High_Switch17;
        private Label label_Switch32;
        private Label label_Switch31;
        private Label label_Switch29;
        private Label label_Switch28;
        private Label label_Switch30;
        private Label label_Switch27;
        private Label label_Switch26;
        private Label label_Switch25;
        private Label label_Switch23;
        private Label label_Switch22;
        private Label label_Switch24;
        private Label label_Switch21;
        private Label label_Switch20;
        private Label label_Switch18;
        private Label label_Switch17;
        private Label label_Switch19;
        private Label label_SysStatus_AFE2;
        private Label label_SysStatus_AFE1;
        private Label label323;
        private Label label455;
        private Label label94;
        private Label label_SysStatus_DSG_MOS;
        private Label label58;
        private Label label_SysStatus_Cool;
        private GroupBox groupBox35;
        private Label label_Idsg_ref;
        private Label label_Ichg_ref;
        private Label label_Idsg;
        private Label label_Ichg;
        private Label label470;
        private Label label_SysStatus_Pre_Relay;
        private Label label472;
        private Label label_SysStatus_Res7;
        private Label label476;
        private Label label_SysStatus_Res6;
        private Label label456;
        private Label label_SysStatus_Res5;
        private Label label459;
        private Label label_SysStatus_Res4;
        private ToolStrip toolStrip_SwitchCtrl;
        private ToolStripLabel toolStripLabel_RxCnt6;
        private ToolStripLabel toolStripLabel3;
        private ToolStripLabel toolStripLabel_TxCnt6;
        private Label label60;
        private Label label240;
        private TextBox textBox_OpenT_Res;
        private TextBox textBox_OpenT_Mos;
        private Label label241;
        private TextBox textBox_OpenT_Even;
        private TextBox textBox_OpenT_Odd;
        private Label label254;
        private Label label267;
        private Label label_SysStatus_ToSleep;
        private Label label270;
        private Label label_SysStatus_Balance;
        private Label label458;
        private Label label_SysStatus_DSG_Relay;
        private Label label462;
        private Label label_SysStatus_CHG_Relay;
        private Label label260;
        private Label label_SysStatus_Main_Relay;
        private Label label_SysStatus_BMS_StartUp;
        private Label label277;
        private Label label_SysStatus_Res3;
        private Label label_SysStatus_Res2;
        private Label label315;
        private Label label317;
        private Label label319;
        private Label label_SysStatus_Res1;
        private Timer timer_Log;
        private Label label165;
        private Label label252;
        private Label label261;
        private Label label269;
        private TextBox textBox_Cool_CHGlow;
        private TextBox textBox_Cool_CHGhigh;
        private TextBox textBox_Cool_DSGlow;
        private TextBox textBox_Cool_DSGhigh;
        private GroupBox groupBox36;
        private Label label_Cool_Res2;
        private Label label_Cool_Res3;
        private Label label326;
        private Label label411;
        private Label label_Cool_Res1;
        private Label label413;
        private Label label420;
        private Label label421;
        private Label label_Cool_OverT;
        private Label label_Cool_Normal;
        private Label label424;
        private Label label425;
        private Label label_Cool_Short;
        private Label label_Cool_Open;
        private Label label_Heat_Res2;
        private Label label_Heat_Res3;
        private Label label278;
        private Label label279;
        private Label label_Heat_Res1;
        private Label label_Heat_;
        private Label label282;
        private Label label_Heat_O;
        private Label label_Heat_OverT;
        private Label label_Heat_Normal;
        private Label label299;
        private Label label304;
        private Label label_Heat_Short;
        private Label label_Heat_Open;
        private Label label_HeatCoolErr;
        private Label label435;
        private GroupBox groupBox37;
        private Button button_HeatCool_Reset;
        private Button button_HeatCool_Set;
        private Button button_HeatCool_Read;
        private TextBox textBox_Cool_Res2;
        private TextBox textBox_Cool_Res3;
        private TextBox textBox_Cool_Res4;
        private Label label463;
        private Label label465;
        private Label label471;
        private Label label473;
        private TextBox textBox_Cool_Res1;
        private Label label464;
        private TextBox textBox_Heat_Res2;
        private Label label466;
        private TextBox textBox_Heat_Res3;
        private TextBox textBox_Heat_Res4;
        private TextBox textBox_Heat_Res6;
        private Label label467;
        private TextBox textBox_Heat_Res5;
        private Label label468;
        private Label label469;
        private Label label437;
        private Label label439;
        private TextBox textBox_CoolDSG_High;
        private Label label441;
        private TextBox textBox_CoolDSG_Low;
        private Label label443;
        private TextBox textBox_CoolCHG_High;
        private TextBox textBox_CoolCHG_Low;
        private TextBox textBox_CoolTime_Max;
        private Label label4441;
        private TextBox textBox_CoolCur_Min;
        private Label label457;
        private TextBox textBox_CoolCur_Max;
        private Label label460;
        private Label label461;
        private Label label281;
        private Label label434;
        private Label label285;
        private TextBox textBox_HeatDSG_High;
        private Label label289;
        private TextBox textBox_HeatDSG_Low;
        private Label label313;
        private TextBox textBox_HeatCHG_High;
        private TextBox textBox_Heat_Res1;
        private TextBox textBox_HeatCHG_Low;
        private TextBox textBox_HeatTime_Max;
        private Label label433;
        private TextBox textBox_HeatCur_Min;
        private Label label432;
        private TextBox textBox_HeatCur_Max;
        private Label label422;
        private Label label321;

        public Form1()
        {
            string[] textArray1 = new string[20];
            textArray1[0] = "COM1";
            textArray1[1] = "COM2";
            textArray1[2] = "COM3";
            textArray1[3] = "COM4";
            textArray1[4] = "COM5";
            textArray1[5] = "COM6";
            textArray1[6] = "COM7";
            textArray1[7] = "COM8";
            textArray1[8] = "COM9";
            textArray1[9] = "COM10";
            textArray1[10] = "COM11";
            textArray1[11] = "COM12";
            textArray1[12] = "COM13";
            textArray1[13] = "COM14";
            textArray1[14] = "COM15";
            textArray1[15] = "COM16";
            textArray1[0x10] = "COM17";
            textArray1[0x11] = "COM18";
            textArray1[0x12] = "COM19";
            textArray1[0x13] = "COM20";
            this.stComName = textArray1;
            this.stComAvailable = new string[20];
            string[] textArray2 = new string[40];
            textArray2[0] = "NA";
            textArray2[1] = "一级单节过压";
            textArray2[2] = "一级单节低压";
            textArray2[3] = "一级总电压过压";
            textArray2[4] = "一级总电压低压";
            textArray2[5] = "一级充电过流";
            textArray2[6] = "一级放电过流";
            textArray2[7] = "一级充电过温";
            textArray2[8] = "一级充电低温";
            textArray2[9] = "一级放电过温";
            textArray2[10] = "一级放电低温";
            textArray2[11] = "一级Mos过温";
            textArray2[12] = "一级压差过大";
            textArray2[13] = "一级电量过低";
            textArray2[14] = "二级单节过压";
            textArray2[15] = "二级单节低压";
            textArray2[0x10] = "二级总电压过压";
            textArray2[0x11] = "二级总电压低压";
            textArray2[0x12] = "二级充电过流";
            textArray2[0x13] = "二级放电过流";
            textArray2[20] = "二级充电过温";
            textArray2[0x15] = "二级充电低温";
            textArray2[0x16] = "二级放电过温";
            textArray2[0x17] = "二级放电低温";
            textArray2[0x18] = "二级Mos过温";
            textArray2[0x19] = "二级压差过大";
            textArray2[0x1a] = "二级电量过低";
            textArray2[0x1b] = "三级单节过压";
            textArray2[0x1c] = "三级单节低压";
            textArray2[0x1d] = "三级总电压过压";
            textArray2[30] = "三级总电压低压";
            textArray2[0x1f] = "三级充电过流";
            textArray2[0x20] = "三级放电过流";
            textArray2[0x21] = "三级充电过温";
            textArray2[0x22] = "三级充电低温";
            textArray2[0x23] = "三级放电过温";
            textArray2[0x24] = "三级放电低温";
            textArray2[0x25] = "三级Mos过温";
            textArray2[0x26] = "三级压差过大";
            textArray2[0x27] = "三级电量过低";
            this.FaultWarnName = textArray2;
            string[] textArray3 = new string[0x21];
            textArray3[0] = "NA";
            textArray3[1] = "CellOVPro";
            textArray3[2] = "CellUVPro";
            textArray3[3] = "BatOVPro";
            textArray3[4] = "BatUVPro";
            textArray3[5] = "ChgOCPro";
            textArray3[6] = "DsgOCPro";
            textArray3[7] = "ChgOTPro";
            textArray3[8] = "DsgOTPro";
            textArray3[9] = "MosOTPro";
            textArray3[10] = "ChgUTPro";
            textArray3[11] = "DsgUTPro";
            textArray3[12] = "LowSOCPro";
            textArray3[13] = "HighDeltaPro";
            textArray3[14] = "NA";
            textArray3[15] = "NA";
            textArray3[0x10] = "NA";
            textArray3[0x11] = "NA";
            textArray3[0x12] = "NA";
            textArray3[0x13] = "NA";
            textArray3[20] = "CellOVWarn";
            textArray3[0x15] = "CellUVWarn";
            textArray3[0x16] = "BatOVWarn";
            textArray3[0x17] = "BatUVWarn";
            textArray3[0x18] = "ChgOCWarn";
            textArray3[0x19] = "DsgOCWarn";
            textArray3[0x1a] = "ChgOTWarn";
            textArray3[0x1b] = "DsgOTWarn";
            textArray3[0x1c] = "MosOTWarn";
            textArray3[0x1d] = "ChgUTWarn";
            textArray3[30] = "DsgUTWarn";
            textArray3[0x1f] = "LowSOCWarn";
            textArray3[0x20] = "HighDeltaWarn";
            this.FaultWarnName_Eng = textArray3;
            this.Year = "";
            this.Month = "";
            this.Day = "";
            this.Hour = "";
            this.Minute = "";
            this.Second = "";
            this.InitializeComponent();
        }

        public void AllProtectReadClickCall()
        {
            this.AllProtectReadClickCall_FLAG = 0;
            if (this.bIsEng == 0)
            {
                MessageBox.Show("全部参数读取成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
            else
            {
                MessageBox.Show("All parameters reading successful！", "ErrorMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
        }

        public void AllProtectSetClickCall()
        {
        }

        private void button_AFE1_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 8;
            this.System_Function_OFF_Call();
        }

        private void button_AFE1_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 8;
            this.System_Function_ON_Call();
        }

        private void button_AFE2_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 9;
            this.System_Function_OFF_Call();
        }

        private void button_AFE2_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 9;
            this.System_Function_ON_Call();
        }

        private void button_Balance_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 1;
            this.System_Function_OFF_Call();
        }

        private void button_Balance_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 1;
            this.System_Function_ON_Call();
        }

        private void button_Balance_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_openV.Text = "";
            this.textBox_openW.Text = "";
            this.textBox_closeW1.Text = "";
            this.textBox_closeW2.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2300;
                    this.u16Rs485RegNum = 8;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Balance_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_openV.Text == "") || ((this.textBox_openW.Text == "") || ((this.textBox_closeW1.Text == "") || ((this.textBox_closeW2.Text == "") || ((this.textBox_OpenT_Odd.Text == "") || ((this.textBox_OpenT_Even.Text == "") || ((this.textBox_OpenT_Mos.Text == "") || (this.textBox_OpenT_Res.Text == ""))))))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_openV.Text);
                float num2 = float.Parse(this.textBox_openW.Text);
                float num3 = float.Parse(this.textBox_closeW1.Text);
                float num4 = float.Parse(this.textBox_closeW2.Text);
                float num5 = float.Parse(this.textBox_OpenT_Odd.Text);
                float num6 = float.Parse(this.textBox_OpenT_Even.Text);
                float num7 = float.Parse(this.textBox_OpenT_Mos.Text);
                float num8 = float.Parse(this.textBox_OpenT_Res.Text);
                if ((num > 5000f) || (num < 1000f))
                {
                    MessageBox.Show("均衡开启电压范围为 1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num2 > 2000f) || (num2 < 5f))
                {
                    MessageBox.Show("均衡开启压差窗口范围为 5 - 2000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num3 > 2000f) || (num3 < 2f))
                {
                    MessageBox.Show("均衡关闭压差窗口1范围为 2 - 2000mV(对应均衡开启电压)，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num4 > 2000f) || (num4 < 2f))
                {
                    MessageBox.Show("均衡关闭压差窗口2范围为 2 - 1000mV(对应均衡开启压差窗口)，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num5 > 50000f) || (num5 < 0f))
                {
                    MessageBox.Show("均衡奇数串开启时间范围为 0 - 50000s，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num6 > 50000f) || (num6 < 0f))
                {
                    MessageBox.Show("均衡偶数串开启时间范围为 0 - 50000s，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num7 > 50000f) || (num7 < 0f))
                {
                    MessageBox.Show("均衡MOS闭合时间范围为 0 - 50000s，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num8 > 50000f) || (num8 < 0f))
                {
                    MessageBox.Show("均衡Res范围为 0 - 50000，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num9 = (ushort) float.Parse(this.textBox_openV.Text);
                    ushort num10 = (ushort) float.Parse(this.textBox_openW.Text);
                    ushort num11 = (ushort) float.Parse(this.textBox_closeW1.Text);
                    ushort num12 = (ushort) float.Parse(this.textBox_closeW2.Text);
                    ushort num13 = (ushort) float.Parse(this.textBox_OpenT_Odd.Text);
                    ushort num14 = (ushort) float.Parse(this.textBox_OpenT_Even.Text);
                    ushort num15 = (ushort) float.Parse(this.textBox_OpenT_Mos.Text);
                    ushort num16 = (ushort) float.Parse(this.textBox_OpenT_Res.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x2300;
                        this.u16Rs485RegNum = 8;
                        this.bRs485ByteNum = 0x10;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num18 = (byte) (index + 1);
                        data[num18] = this.bRs485FunCmd;
                        byte num19 = (byte) (num18 + 1);
                        data[num19] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num20 = (byte) (num19 + 1);
                        data[num20] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num21 = (byte) (num20 + 1);
                        data[num21] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num22 = (byte) (num21 + 1);
                        data[num22] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num23 = (byte) (num22 + 1);
                        data[num23] = this.bRs485ByteNum;
                        byte num24 = (byte) (num23 + 1);
                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                        byte num25 = (byte) (num24 + 1);
                        data[num25] = (byte) (num9 & 0xff);
                        byte num26 = (byte) (num25 + 1);
                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                        byte num27 = (byte) (num26 + 1);
                        data[num27] = (byte) (num10 & 0xff);
                        byte num28 = (byte) (num27 + 1);
                        data[num28] = (byte) ((num11 >> 8) & 0xff);
                        byte num29 = (byte) (num28 + 1);
                        data[num29] = (byte) (num11 & 0xff);
                        byte num30 = (byte) (num29 + 1);
                        data[num30] = (byte) ((num12 >> 8) & 0xff);
                        byte num31 = (byte) (num30 + 1);
                        data[num31] = (byte) (num12 & 0xff);
                        byte num32 = (byte) (num31 + 1);
                        data[num32] = (byte) ((num13 >> 8) & 0xff);
                        byte num33 = (byte) (num32 + 1);
                        data[num33] = (byte) (num13 & 0xff);
                        byte num34 = (byte) (num33 + 1);
                        data[num34] = (byte) ((num14 >> 8) & 0xff);
                        byte num35 = (byte) (num34 + 1);
                        data[num35] = (byte) (num14 & 0xff);
                        byte num36 = (byte) (num35 + 1);
                        data[num36] = (byte) ((num15 >> 8) & 0xff);
                        byte num37 = (byte) (num36 + 1);
                        data[num37] = (byte) (num15 & 0xff);
                        byte num38 = (byte) (num37 + 1);
                        data[num38] = (byte) ((num16 >> 8) & 0xff);
                        byte num39 = (byte) (num38 + 1);
                        byte lenth = (byte) (num39 + 1);
                        data[num39] = (byte) (num16 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void button_BMS_Source_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 2;
            this.System_Function_OFF_Call();
        }

        private void button_BMS_Source_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 2;
            this.System_Function_ON_Call();
        }

        private void button_calc_AFE1_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_AFE1.Text != "") && ((this.textBox_Vx2_AFE1.Text != "") && ((this.textBox_Vy1_AFE1.Text != "") && (this.textBox_Vy2_AFE1.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_AFE1.Text);
                float num3 = float.Parse(this.textBox_Vy1_AFE1.Text);
                float num2 = float.Parse(this.textBox_Vx2_AFE1.Text);
                float num4 = (float.Parse(this.textBox_Vy2_AFE1.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_AFE1_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_AFE1_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_AFE1_k.Text = "";
                this.textBox_cail_AFE1_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_AFE2_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_AFE2.Text != "") && ((this.textBox_Vx2_AFE2.Text != "") && ((this.textBox_Vy1_AFE2.Text != "") && (this.textBox_Vy2_AFE2.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_AFE2.Text);
                float num3 = float.Parse(this.textBox_Vy1_AFE2.Text);
                float num2 = float.Parse(this.textBox_Vx2_AFE2.Text);
                float num4 = (float.Parse(this.textBox_Vy2_AFE2.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_AFE2_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_AFE2_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_AFE2_k.Text = "";
                this.textBox_cail_AFE2_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell1_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_1.Text != "") && ((this.textBox_Vx2_1.Text != "") && ((this.textBox_Vy1_1.Text != "") && (this.textBox_Vy2_1.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_1.Text);
                float num3 = float.Parse(this.textBox_Vy1_1.Text);
                float num2 = float.Parse(this.textBox_Vx2_1.Text);
                float num4 = (float.Parse(this.textBox_Vy2_1.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell1_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell1_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell1_k.Text = "";
                this.textBox_cail_cell1_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell10_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_10.Text != "") && ((this.textBox_Vx2_10.Text != "") && ((this.textBox_Vy1_10.Text != "") && (this.textBox_Vy2_10.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_10.Text);
                float num3 = float.Parse(this.textBox_Vy1_10.Text);
                float num2 = float.Parse(this.textBox_Vx2_10.Text);
                float num4 = (float.Parse(this.textBox_Vy2_10.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell10_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell10_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell10_k.Text = "";
                this.textBox_cail_cell10_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell11_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_11.Text != "") && ((this.textBox_Vx2_11.Text != "") && ((this.textBox_Vy1_11.Text != "") && (this.textBox_Vy2_11.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_11.Text);
                float num3 = float.Parse(this.textBox_Vy1_11.Text);
                float num2 = float.Parse(this.textBox_Vx2_11.Text);
                float num4 = (float.Parse(this.textBox_Vy2_11.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell11_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell11_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell11_k.Text = "";
                this.textBox_cail_cell11_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell12_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_12.Text != "") && ((this.textBox_Vx2_12.Text != "") && ((this.textBox_Vy1_12.Text != "") && (this.textBox_Vy2_12.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_12.Text);
                float num3 = float.Parse(this.textBox_Vy1_12.Text);
                float num2 = float.Parse(this.textBox_Vx2_12.Text);
                float num4 = (float.Parse(this.textBox_Vy2_12.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell12_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell12_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell12_k.Text = "";
                this.textBox_cail_cell12_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell13_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_13.Text != "") && ((this.textBox_Vx2_13.Text != "") && ((this.textBox_Vy1_13.Text != "") && (this.textBox_Vy2_13.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_13.Text);
                float num3 = float.Parse(this.textBox_Vy1_13.Text);
                float num2 = float.Parse(this.textBox_Vx2_13.Text);
                float num4 = (float.Parse(this.textBox_Vy2_13.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell13_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell13_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell13_k.Text = "";
                this.textBox_cail_cell13_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell14_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_14.Text != "") && ((this.textBox_Vx2_14.Text != "") && ((this.textBox_Vy1_14.Text != "") && (this.textBox_Vy2_14.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_14.Text);
                float num3 = float.Parse(this.textBox_Vy1_14.Text);
                float num2 = float.Parse(this.textBox_Vx2_14.Text);
                float num4 = (float.Parse(this.textBox_Vy2_14.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell14_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell14_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell14_k.Text = "";
                this.textBox_cail_cell14_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell15_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_15.Text != "") && ((this.textBox_Vx2_15.Text != "") && ((this.textBox_Vy1_15.Text != "") && (this.textBox_Vy2_15.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_15.Text);
                float num3 = float.Parse(this.textBox_Vy1_15.Text);
                float num2 = float.Parse(this.textBox_Vx2_15.Text);
                float num4 = (float.Parse(this.textBox_Vy2_15.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell15_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell15_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell15_k.Text = "";
                this.textBox_cail_cell15_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell16_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_16.Text != "") && ((this.textBox_Vx2_16.Text != "") && ((this.textBox_Vy1_16.Text != "") && (this.textBox_Vy2_16.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_16.Text);
                float num3 = float.Parse(this.textBox_Vy1_16.Text);
                float num2 = float.Parse(this.textBox_Vx2_16.Text);
                float num4 = (float.Parse(this.textBox_Vy2_16.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell16_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell16_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell16_k.Text = "";
                this.textBox_cail_cell16_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell17_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_17.Text != "") && ((this.textBox_Vx2_17.Text != "") && ((this.textBox_Vy1_17.Text != "") && (this.textBox_Vy2_17.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_17.Text);
                float num3 = float.Parse(this.textBox_Vy1_17.Text);
                float num2 = float.Parse(this.textBox_Vx2_17.Text);
                float num4 = (float.Parse(this.textBox_Vy2_17.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell17_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell17_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell17_k.Text = "";
                this.textBox_cail_cell17_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell18_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_18.Text != "") && ((this.textBox_Vx2_18.Text != "") && ((this.textBox_Vy1_18.Text != "") && (this.textBox_Vy2_18.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_18.Text);
                float num3 = float.Parse(this.textBox_Vy1_18.Text);
                float num2 = float.Parse(this.textBox_Vx2_18.Text);
                float num4 = (float.Parse(this.textBox_Vy2_18.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell18_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell18_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell18_k.Text = "";
                this.textBox_cail_cell18_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell19_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_19.Text != "") && ((this.textBox_Vx2_19.Text != "") && ((this.textBox_Vy1_19.Text != "") && (this.textBox_Vy2_19.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_19.Text);
                float num3 = float.Parse(this.textBox_Vy1_19.Text);
                float num2 = float.Parse(this.textBox_Vx2_19.Text);
                float num4 = (float.Parse(this.textBox_Vy2_19.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell19_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell19_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell19_k.Text = "";
                this.textBox_cail_cell19_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell2_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_2.Text != "") && ((this.textBox_Vx2_2.Text != "") && ((this.textBox_Vy1_2.Text != "") && (this.textBox_Vy2_2.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_2.Text);
                float num3 = float.Parse(this.textBox_Vy1_2.Text);
                float num2 = float.Parse(this.textBox_Vx2_2.Text);
                float num4 = (float.Parse(this.textBox_Vy2_2.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell2_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell2_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell2_k.Text = "";
                this.textBox_cail_cell2_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell20_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_20.Text != "") && ((this.textBox_Vx2_20.Text != "") && ((this.textBox_Vy1_20.Text != "") && (this.textBox_Vy2_20.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_20.Text);
                float num3 = float.Parse(this.textBox_Vy1_20.Text);
                float num2 = float.Parse(this.textBox_Vx2_20.Text);
                float num4 = (float.Parse(this.textBox_Vy2_20.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell20_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell20_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell20_k.Text = "";
                this.textBox_cail_cell20_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell21_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_21.Text != "") && ((this.textBox_Vx2_21.Text != "") && ((this.textBox_Vy1_21.Text != "") && (this.textBox_Vy2_21.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_21.Text);
                float num3 = float.Parse(this.textBox_Vy1_21.Text);
                float num2 = float.Parse(this.textBox_Vx2_21.Text);
                float num4 = (float.Parse(this.textBox_Vy2_21.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell21_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell21_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell21_k.Text = "";
                this.textBox_cail_cell21_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell22_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_22.Text != "") && ((this.textBox_Vx2_22.Text != "") && ((this.textBox_Vy1_22.Text != "") && (this.textBox_Vy2_22.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_22.Text);
                float num3 = float.Parse(this.textBox_Vy1_22.Text);
                float num2 = float.Parse(this.textBox_Vx2_22.Text);
                float num4 = (float.Parse(this.textBox_Vy2_22.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell22_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell22_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell22_k.Text = "";
                this.textBox_cail_cell22_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell23_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_23.Text != "") && ((this.textBox_Vx2_23.Text != "") && ((this.textBox_Vy1_23.Text != "") && (this.textBox_Vy2_23.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_23.Text);
                float num3 = float.Parse(this.textBox_Vy1_23.Text);
                float num2 = float.Parse(this.textBox_Vx2_23.Text);
                float num4 = (float.Parse(this.textBox_Vy2_23.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell23_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell23_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell23_k.Text = "";
                this.textBox_cail_cell23_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell24_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_24.Text != "") && ((this.textBox_Vx2_24.Text != "") && ((this.textBox_Vy1_24.Text != "") && (this.textBox_Vy2_24.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_24.Text);
                float num3 = float.Parse(this.textBox_Vy1_24.Text);
                float num2 = float.Parse(this.textBox_Vx2_24.Text);
                float num4 = (float.Parse(this.textBox_Vy2_24.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell24_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell24_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell24_k.Text = "";
                this.textBox_cail_cell24_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell25_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_25.Text != "") && ((this.textBox_Vx2_25.Text != "") && ((this.textBox_Vy1_25.Text != "") && (this.textBox_Vy2_25.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_25.Text);
                float num3 = float.Parse(this.textBox_Vy1_25.Text);
                float num2 = float.Parse(this.textBox_Vx2_25.Text);
                float num4 = (float.Parse(this.textBox_Vy2_25.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell25_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell25_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell25_k.Text = "";
                this.textBox_cail_cell25_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell26_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_26.Text != "") && ((this.textBox_Vx2_26.Text != "") && ((this.textBox_Vy1_26.Text != "") && (this.textBox_Vy2_26.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_26.Text);
                float num3 = float.Parse(this.textBox_Vy1_26.Text);
                float num2 = float.Parse(this.textBox_Vx2_26.Text);
                float num4 = (float.Parse(this.textBox_Vy2_26.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell26_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell26_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell26_k.Text = "";
                this.textBox_cail_cell26_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell27_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_27.Text != "") && ((this.textBox_Vx2_27.Text != "") && ((this.textBox_Vy1_27.Text != "") && (this.textBox_Vy2_27.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_27.Text);
                float num3 = float.Parse(this.textBox_Vy1_27.Text);
                float num2 = float.Parse(this.textBox_Vx2_27.Text);
                float num4 = (float.Parse(this.textBox_Vy2_27.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell27_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell27_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell27_k.Text = "";
                this.textBox_cail_cell27_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell28_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_28.Text != "") && ((this.textBox_Vx2_28.Text != "") && ((this.textBox_Vy1_28.Text != "") && (this.textBox_Vy2_28.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_28.Text);
                float num3 = float.Parse(this.textBox_Vy1_28.Text);
                float num2 = float.Parse(this.textBox_Vx2_28.Text);
                float num4 = (float.Parse(this.textBox_Vy2_28.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell28_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell28_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell28_k.Text = "";
                this.textBox_cail_cell28_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell29_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_29.Text != "") && ((this.textBox_Vx2_29.Text != "") && ((this.textBox_Vy1_29.Text != "") && (this.textBox_Vy2_29.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_29.Text);
                float num3 = float.Parse(this.textBox_Vy1_29.Text);
                float num2 = float.Parse(this.textBox_Vx2_29.Text);
                float num4 = (float.Parse(this.textBox_Vy2_29.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell29_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell29_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell29_k.Text = "";
                this.textBox_cail_cell29_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell3_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_3.Text != "") && ((this.textBox_Vx2_3.Text != "") && ((this.textBox_Vy1_3.Text != "") && (this.textBox_Vy2_3.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_3.Text);
                float num3 = float.Parse(this.textBox_Vy1_3.Text);
                float num2 = float.Parse(this.textBox_Vx2_3.Text);
                float num4 = (float.Parse(this.textBox_Vy2_3.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell3_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell3_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell3_k.Text = "";
                this.textBox_cail_cell3_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell30_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_30.Text != "") && ((this.textBox_Vx2_30.Text != "") && ((this.textBox_Vy1_30.Text != "") && (this.textBox_Vy2_30.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_30.Text);
                float num3 = float.Parse(this.textBox_Vy1_30.Text);
                float num2 = float.Parse(this.textBox_Vx2_30.Text);
                float num4 = (float.Parse(this.textBox_Vy2_30.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell30_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell30_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell30_k.Text = "";
                this.textBox_cail_cell30_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell31_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_31.Text != "") && ((this.textBox_Vx2_31.Text != "") && ((this.textBox_Vy1_31.Text != "") && (this.textBox_Vy2_31.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_31.Text);
                float num3 = float.Parse(this.textBox_Vy1_31.Text);
                float num2 = float.Parse(this.textBox_Vx2_31.Text);
                float num4 = (float.Parse(this.textBox_Vy2_31.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell31_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell31_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell31_k.Text = "";
                this.textBox_cail_cell31_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell32_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_32.Text != "") && ((this.textBox_Vx2_32.Text != "") && ((this.textBox_Vy1_32.Text != "") && (this.textBox_Vy2_32.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_32.Text);
                float num3 = float.Parse(this.textBox_Vy1_32.Text);
                float num2 = float.Parse(this.textBox_Vx2_32.Text);
                float num4 = (float.Parse(this.textBox_Vy2_32.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell32_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell32_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell32_k.Text = "";
                this.textBox_cail_cell32_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell4_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_4.Text != "") && ((this.textBox_Vx2_4.Text != "") && ((this.textBox_Vy1_4.Text != "") && (this.textBox_Vy2_4.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_4.Text);
                float num3 = float.Parse(this.textBox_Vy1_4.Text);
                float num2 = float.Parse(this.textBox_Vx2_4.Text);
                float num4 = (float.Parse(this.textBox_Vy2_4.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell4_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell4_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell4_k.Text = "";
                this.textBox_cail_cell4_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell5_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_5.Text != "") && ((this.textBox_Vx2_5.Text != "") && ((this.textBox_Vy1_5.Text != "") && (this.textBox_Vy2_5.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_5.Text);
                float num3 = float.Parse(this.textBox_Vy1_5.Text);
                float num2 = float.Parse(this.textBox_Vx2_5.Text);
                float num4 = (float.Parse(this.textBox_Vy2_5.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell5_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell5_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell5_k.Text = "";
                this.textBox_cail_cell5_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell6_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_6.Text != "") && ((this.textBox_Vx2_6.Text != "") && ((this.textBox_Vy1_6.Text != "") && (this.textBox_Vy2_6.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_6.Text);
                float num3 = float.Parse(this.textBox_Vy1_6.Text);
                float num2 = float.Parse(this.textBox_Vx2_6.Text);
                float num4 = (float.Parse(this.textBox_Vy2_6.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell6_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell6_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell6_k.Text = "";
                this.textBox_cail_cell6_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell7_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_7.Text != "") && ((this.textBox_Vx2_7.Text != "") && ((this.textBox_Vy1_7.Text != "") && (this.textBox_Vy2_7.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_7.Text);
                float num3 = float.Parse(this.textBox_Vy1_7.Text);
                float num2 = float.Parse(this.textBox_Vx2_7.Text);
                float num4 = (float.Parse(this.textBox_Vy2_7.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell7_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell7_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell7_k.Text = "";
                this.textBox_cail_cell7_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell8_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_8.Text != "") && ((this.textBox_Vx2_8.Text != "") && ((this.textBox_Vy1_8.Text != "") && (this.textBox_Vy2_8.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_8.Text);
                float num3 = float.Parse(this.textBox_Vy1_8.Text);
                float num2 = float.Parse(this.textBox_Vx2_8.Text);
                float num4 = (float.Parse(this.textBox_Vy2_8.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell8_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell8_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell8_k.Text = "";
                this.textBox_cail_cell8_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_cell9_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_9.Text != "") && ((this.textBox_Vx2_9.Text != "") && ((this.textBox_Vy1_9.Text != "") && (this.textBox_Vy2_9.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_9.Text);
                float num3 = float.Parse(this.textBox_Vy1_9.Text);
                float num2 = float.Parse(this.textBox_Vx2_9.Text);
                float num4 = (float.Parse(this.textBox_Vy2_9.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_cell9_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_cell9_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_cell9_k.Text = "";
                this.textBox_cail_cell9_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_Ichg_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_Ichg.Text != "") && ((this.textBox_Vx2_Ichg.Text != "") && ((this.textBox_Vy1_Ichg.Text != "") && (this.textBox_Vy2_Ichg.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_Ichg.Text);
                float num3 = float.Parse(this.textBox_Vy1_Ichg.Text);
                float num2 = float.Parse(this.textBox_Vx2_Ichg.Text);
                float num4 = (float.Parse(this.textBox_Vy2_Ichg.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_Ichg_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_Ichg_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_cail_Ichg_k.Text = "";
                this.textBox_cail_Ichg_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_Idsg_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_Idsg.Text != "") && ((this.textBox_Vx2_Idsg.Text != "") && ((this.textBox_Vy1_Idsg.Text != "") && (this.textBox_Vy2_Idsg.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_Idsg.Text);
                float num3 = float.Parse(this.textBox_Vy1_Idsg.Text);
                float num2 = float.Parse(this.textBox_Vx2_Idsg.Text);
                float num4 = (float.Parse(this.textBox_Vy2_Idsg.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_Idsg_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_Idsg_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_cail_Idsg_k.Text = "";
                this.textBox_cail_Idsg_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_temp1_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_temp1.Text != "") && ((this.textBox_Vx2_temp1.Text != "") && ((this.textBox_Vy1_temp1.Text != "") && (this.textBox_Vy2_temp1.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_temp1.Text);
                float num3 = float.Parse(this.textBox_Vy1_temp1.Text);
                float num2 = float.Parse(this.textBox_Vx2_temp1.Text);
                float num4 = (float.Parse(this.textBox_Vy2_temp1.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_temp1_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_temp1_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_temp1_k.Text = "";
                this.textBox_temp1_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_temp2_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_temp2.Text != "") && ((this.textBox_Vx2_temp2.Text != "") && ((this.textBox_Vy1_temp2.Text != "") && (this.textBox_Vy2_temp2.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_temp2.Text);
                float num3 = float.Parse(this.textBox_Vy1_temp2.Text);
                float num2 = float.Parse(this.textBox_Vx2_temp2.Text);
                float num4 = (float.Parse(this.textBox_Vy2_temp2.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_temp2_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_temp2_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_temp2_k.Text = "";
                this.textBox_temp2_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_temp3_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_temp3.Text != "") && ((this.textBox_Vx2_temp3.Text != "") && ((this.textBox_Vy1_temp3.Text != "") && (this.textBox_Vy2_temp3.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_temp3.Text);
                float num3 = float.Parse(this.textBox_Vy1_temp3.Text);
                float num2 = float.Parse(this.textBox_Vx2_temp3.Text);
                float num4 = (float.Parse(this.textBox_Vy2_temp3.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_temp3_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_temp3_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_temp3_k.Text = "";
                this.textBox_temp3_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_temp4_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_temp4.Text != "") && ((this.textBox_Vx2_temp4.Text != "") && ((this.textBox_Vy1_temp4.Text != "") && (this.textBox_Vy2_temp4.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_temp4.Text);
                float num3 = float.Parse(this.textBox_Vy1_temp4.Text);
                float num2 = float.Parse(this.textBox_Vx2_temp4.Text);
                float num4 = (float.Parse(this.textBox_Vy2_temp4.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_temp4_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_temp4_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_temp4_k.Text = "";
                this.textBox_temp4_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_temp5_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_temp5.Text != "") && ((this.textBox_Vx2_temp5.Text != "") && ((this.textBox_Vy1_temp5.Text != "") && (this.textBox_Vy2_temp5.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_temp5.Text);
                float num3 = float.Parse(this.textBox_Vy1_temp5.Text);
                float num2 = float.Parse(this.textBox_Vx2_temp5.Text);
                float num4 = (float.Parse(this.textBox_Vy2_temp5.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_temp5_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_temp5_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_temp5_k.Text = "";
                this.textBox_temp5_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_temp6_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_temp6.Text != "") && ((this.textBox_Vx2_temp6.Text != "") && ((this.textBox_Vy1_temp6.Text != "") && (this.textBox_Vy2_temp6.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_temp6.Text);
                float num3 = float.Parse(this.textBox_Vy1_temp6.Text);
                float num2 = float.Parse(this.textBox_Vx2_temp6.Text);
                float num4 = (float.Parse(this.textBox_Vy2_temp6.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_temp6_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_temp6_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_temp6_k.Text = "";
                this.textBox_temp6_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_tempEnv1_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_tempEnv1.Text != "") && ((this.textBox_Vx2_tempEnv1.Text != "") && ((this.textBox_Vy1_tempEnv1.Text != "") && (this.textBox_Vy2_tempEnv1.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_tempEnv1.Text);
                float num3 = float.Parse(this.textBox_Vy1_tempEnv1.Text);
                float num2 = float.Parse(this.textBox_Vx2_tempEnv1.Text);
                float num4 = (float.Parse(this.textBox_Vy2_tempEnv1.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_tempEnv1_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_tempEnv1_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_tempEnv1_k.Text = "";
                this.textBox_tempEnv1_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_tempEnv2_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_tempEnv2.Text != "") && ((this.textBox_Vx2_tempEnv2.Text != "") && ((this.textBox_Vy1_tempEnv2.Text != "") && (this.textBox_Vy2_tempEnv2.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_tempEnv2.Text);
                float num3 = float.Parse(this.textBox_Vy1_tempEnv2.Text);
                float num2 = float.Parse(this.textBox_Vx2_tempEnv2.Text);
                float num4 = (float.Parse(this.textBox_Vy2_tempEnv2.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_tempEnv2_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_tempEnv2_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_tempEnv2_k.Text = "";
                this.textBox_tempEnv2_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_tempEnv3_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_tempEnv3.Text != "") && ((this.textBox_Vx2_tempEnv3.Text != "") && ((this.textBox_Vy1_tempEnv3.Text != "") && (this.textBox_Vy2_tempEnv3.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_tempEnv3.Text);
                float num3 = float.Parse(this.textBox_Vy1_tempEnv3.Text);
                float num2 = float.Parse(this.textBox_Vx2_tempEnv3.Text);
                float num4 = (float.Parse(this.textBox_Vy2_tempEnv3.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_tempEnv3_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_tempEnv3_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_tempEnv3_k.Text = "";
                this.textBox_tempEnv3_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_tempmos_Click(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_tempMos.Text != "") && ((this.textBox_Vx2_tempMos.Text != "") && ((this.textBox_Vy1_tempMos.Text != "") && (this.textBox_Vy2_tempMos.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_tempMos.Text);
                float num3 = float.Parse(this.textBox_Vy1_tempMos.Text);
                float num2 = float.Parse(this.textBox_Vx2_tempMos.Text);
                float num4 = (float.Parse(this.textBox_Vy2_tempMos.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_temp_mos_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_temp_mos_b.Text = Convert.ToDouble(num5).ToString("0.000");
            }
            else
            {
                this.textBox_temp_mos_k.Text = "";
                this.textBox_temp_mos_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_calc_Vbus_Click_1(object sender, EventArgs e)
        {
            if ((this.textBox_Vx1_Vbus.Text != "") && ((this.textBox_Vx2_Vbus.Text != "") && ((this.textBox_Vy1_Vbus.Text != "") && (this.textBox_Vy2_Vbus.Text != ""))))
            {
                float num = float.Parse(this.textBox_Vx1_Vbus.Text);
                float num3 = float.Parse(this.textBox_Vy1_Vbus.Text);
                float num2 = float.Parse(this.textBox_Vx2_Vbus.Text);
                float num4 = (float.Parse(this.textBox_Vy2_Vbus.Text) - num3) / (num2 - num);
                float num5 = num3 - (num4 * num);
                this.textBox_cail_Vbus_k.Text = Convert.ToDouble(num4).ToString("0.000");
                this.textBox_cail_Vbus_b.Text = Convert.ToDouble(num5).ToString("0");
            }
            else
            {
                this.textBox_cail_Vbus_k.Text = "";
                this.textBox_cail_Vbus_b.Text = "";
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void button_cali_AFE1_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_AFE1_k.Text == "") || (this.textBox_cail_AFE1_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_AFE1_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_AFE1_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2040;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_AFE2_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_AFE2_k.Text == "") || (this.textBox_cail_AFE2_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_AFE2_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_AFE2_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2042;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell1_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell1_k.Text == "") || (this.textBox_cail_cell1_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell1_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell1_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2000;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell10_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell10_k.Text == "") || (this.textBox_cail_cell10_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell10_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell10_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2012;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell11_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell11_k.Text == "") || (this.textBox_cail_cell11_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell11_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell11_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2014;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell12_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell12_k.Text == "") || (this.textBox_cail_cell12_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell12_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell12_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2016;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell13_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell13_k.Text == "") || (this.textBox_cail_cell13_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell13_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell13_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2018;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell14_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell14_k.Text == "") || (this.textBox_cail_cell14_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell14_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell14_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x201a;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell15_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell15_k.Text == "") || (this.textBox_cail_cell15_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell15_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell15_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x201c;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell16_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell16_k.Text == "") || (this.textBox_cail_cell16_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell16_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell16_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x201e;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell17_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell17_k.Text == "") || (this.textBox_cail_cell17_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell17_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell17_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2020;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell18_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell18_k.Text == "") || (this.textBox_cail_cell18_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell18_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell18_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2022;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell19_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell19_k.Text == "") || (this.textBox_cail_cell19_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell19_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell19_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2024;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell2_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell2_k.Text == "") || (this.textBox_cail_cell2_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell2_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell2_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2002;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell20_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell20_k.Text == "") || (this.textBox_cail_cell20_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell20_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell20_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2026;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell21_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell21_k.Text == "") || (this.textBox_cail_cell21_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell21_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell21_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2028;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell22_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell22_k.Text == "") || (this.textBox_cail_cell22_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell22_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell22_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x202a;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell23_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell23_k.Text == "") || (this.textBox_cail_cell23_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell23_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell23_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x202c;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell24_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell24_k.Text == "") || (this.textBox_cail_cell24_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell24_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell24_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x202e;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell25_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell25_k.Text == "") || (this.textBox_cail_cell25_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell25_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell25_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2030;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell26_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell26_k.Text == "") || (this.textBox_cail_cell26_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell26_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell26_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2032;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell27_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell27_k.Text == "") || (this.textBox_cail_cell27_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell27_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell27_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2034;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell28_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell28_k.Text == "") || (this.textBox_cail_cell28_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell28_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell28_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2036;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell29_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell29_k.Text == "") || (this.textBox_cail_cell29_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell29_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell29_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2038;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell3_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell3_k.Text == "") || (this.textBox_cail_cell3_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell3_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell3_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2004;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell30_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell30_k.Text == "") || (this.textBox_cail_cell30_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell30_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell30_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x203a;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell31_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell31_k.Text == "") || (this.textBox_cail_cell31_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell31_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell31_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x203c;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell32_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell32_k.Text == "") || (this.textBox_cail_cell32_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell32_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell32_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x203e;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell4_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell4_k.Text == "") || (this.textBox_cail_cell4_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell4_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell4_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2006;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell5_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell5_k.Text == "") || (this.textBox_cail_cell5_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell5_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell5_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2008;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell6_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell6_k.Text == "") || (this.textBox_cail_cell6_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell6_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell6_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x200a;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell7_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell7_k.Text == "") || (this.textBox_cail_cell7_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell7_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell7_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x200c;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell8_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell8_k.Text == "") || (this.textBox_cail_cell8_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell8_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell8_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x200e;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_cell9_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_cell9_k.Text == "") || (this.textBox_cail_cell9_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_cell9_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_cell9_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2010;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_Ichg_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_Ichg_k.Text == "") || (this.textBox_cail_Ichg_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_Ichg_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_cail_Ichg_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2046;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_Idsg_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_Idsg_k.Text == "") || (this.textBox_cail_Idsg_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_Idsg_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_cail_Idsg_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2048;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_temp_mos_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_temp_mos_k.Text == "") || (this.textBox_temp_mos_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_temp_mos_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_temp_mos_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x205c;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_temp1_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_temp1_k.Text == "") || (this.textBox_temp1_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_temp1_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_temp1_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x204a;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_temp2_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_temp2_k.Text == "") || (this.textBox_temp2_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_temp2_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_temp2_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x204c;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_temp3_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_temp3_k.Text == "") || (this.textBox_temp3_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_temp3_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_temp3_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x204e;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_temp4_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_temp4_k.Text == "") || (this.textBox_temp4_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_temp4_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_temp4_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2050;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_temp5_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_temp5_k.Text == "") || (this.textBox_temp5_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_temp5_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_temp5_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2052;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_temp6_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_temp6_k.Text == "") || (this.textBox_temp6_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_temp6_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_temp6_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2054;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_tempEnv1_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_tempEnv1_k.Text == "") || (this.textBox_tempEnv1_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_tempEnv1_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_tempEnv1_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2056;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_tempEnv2_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_tempEnv2_k.Text == "") || (this.textBox_tempEnv2_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_tempEnv2_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_tempEnv2_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2058;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_tempEnv3_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_tempEnv3_k.Text == "") || (this.textBox_tempEnv3_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_tempEnv3_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = (float) (float.Parse(this.textBox_tempEnv3_b.Text) * Math.Pow(2.0, 10.0));
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x205a;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_cali_Vbus_Click_1(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_cail_Vbus_k.Text == "") || (this.textBox_cail_Vbus_b.Text == ""))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("数据不能为空！", "计算失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Data is empty！", "Calculation Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort num = (ushort) (float.Parse(this.textBox_cail_Vbus_k.Text) * Math.Pow(2.0, 10.0));
                float num3 = float.Parse(this.textBox_cail_Vbus_b.Text) * 1f;
                ushort num2 = (num3 < 0f) ? ((ushort) (((ushort) -num3) | 0x8000)) : ((ushort) num3);
                try
                {
                    this.bRs485FunCmd = 0x10;
                    this.u16Rs485RegAddr = 0x2044;
                    this.u16Rs485RegNum = 2;
                    this.bRs485ByteNum = 4;
                    byte index = 0;
                    data[index] = this.bRs485Addr;
                    byte num5 = (byte) (index + 1);
                    data[num5] = this.bRs485FunCmd;
                    byte num6 = (byte) (num5 + 1);
                    data[num6] = (byte) (this.u16Rs485RegAddr / 0x100);
                    byte num7 = (byte) (num6 + 1);
                    data[num7] = (byte) (this.u16Rs485RegAddr % 0x100);
                    byte num8 = (byte) (num7 + 1);
                    data[num8] = (byte) (this.u16Rs485RegNum / 0x100);
                    byte num9 = (byte) (num8 + 1);
                    data[num9] = (byte) (this.u16Rs485RegNum % 0x100);
                    byte num10 = (byte) (num9 + 1);
                    data[num10] = this.bRs485ByteNum;
                    byte num11 = (byte) (num10 + 1);
                    data[num11] = (byte) ((num >> 8) & 0xff);
                    byte num12 = (byte) (num11 + 1);
                    data[num12] = (byte) (num & 0xff);
                    byte num13 = (byte) (num12 + 1);
                    data[num13] = (byte) ((num2 >> 8) & 0xff);
                    byte num14 = (byte) (num13 + 1);
                    byte lenth = (byte) (num14 + 1);
                    data[num14] = (byte) (num2 & 0xff);
                    this.Calculate_Sum_Tx(ref data, lenth);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, lenth + 2);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_CanAdd_Reset_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1003;
                    this.u16Rs485RegData = 1;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Chinese_Click(object sender, EventArgs e)
        {
            this.bIsEng = 0;
            if (this.button_TurnOnOffCom.Text == "StartUp")
            {
                this.button_TurnOnOffCom.Text = "打开串口";
            }
            else if (this.button_TurnOnOffCom.Text == "ShutDown")
            {
                this.button_TurnOnOffCom.Text = "关闭串口";
            }
            if (this.button_MosRelay_Func_Open.Text == "PowerOn")
            {
                this.button_MosRelay_Func_Open.Text = "开机";
            }
            else if (this.button_MosRelay_Func_Open.Text == "ShutDown")
            {
                this.button_MosRelay_Func_Open.Text = "关机";
            }
            if (this.button_Heated_Func_Open.Text == "EnableHeatFun")
            {
                this.button_Heated_Func_Open.Text = "开启加热功能";
            }
            else if (this.button_Heated_Func_Open.Text == "DisableHeatFun")
            {
                this.button_Heated_Func_Open.Text = "关闭加热功能";
            }
            this.label_UART.Text = "端口:";
            this.label_BaudRate.Text = "波特率:";
            this.groupBox_History.Text = "历史保护记录";
            this.groupBox_Present.Text = "当前保护记录";
            this.Button_Fault_Record_Read.Text = "读取";
            this.Button_Fault_Record_Clear.Text = "清除";
            this.button_ProtectPresentClear.Text = "清除";
            this.label_CtrlStartup.Text = "开关控制:";
            this.label_CtrlHeat.Text = "加热控制:";
            this.label_CtrlBalance.Text = "均衡控制:";
            this.label_CtrlAFEWake.Text = "激活前端:";
            this.label_CtrlAFEShut.Text = "关闭前端:";
            this.groupBox_set.Text = "控制面板";
            this.groupBox_read.Text = "信息面板";
            this.groupBox_ERROR.Text = "报错";
            this.label_Vdelta_Op_Third.Text = "单节过压:";
            this.label_Vbat_OV_Second.Text = "单节低压:";
            this.label_Vbat_UV_Second.Text = "总压过压:";
            this.label275.Text = "总压低压:";
            this.label_Tmos_OTP_Third.Text = "充电过流:";
            this.label287.Text = "放电过流:";
            this.label286.Text = "充电过温:";
            this.label_Celldsg_UT_Third.Text = "充电低温:";
            this.label_Vcell_OV_Second.Text = "放电过温:";
            this.label_Vcell_UV_Second.Text = "放电低温:";
            this.label268.Text = "压差过大:";
            this.label266.Text = "未使用:";
            this.label272.Text = "MOS过温:";
            this.label_Cellchg_UT_Second.Text = "SOC过低:";
            this.label_LogTimer.Text = "日志记录间隔(秒):";
            this.button_LogTimerStart.Text = "开始";
            this.button_LogTimerStop.Text = "停止";
            this.label_LogFileName.Text = "日志文件名:";
            this.groupBox_Vcell_cal.Text = "电压校准(B值单位为mV)";
            this.groupBox_temp_cal.Text = "温度校准(B值单位为℃)";
            using (IEnumerator enumerator = this.tabPage2.Controls.GetEnumerator())
            {
                while (true)
                {
                    if (!enumerator.MoveNext())
                    {
                        break;
                    }
                    foreach (Control control in ((Control) enumerator.Current).Controls)
                    {
                        string name;
                        uint num;
                        if (control is GroupBox)
                        {
                            using (IEnumerator enumerator3 = control.Controls.GetEnumerator())
                            {
                                Control current;
                                goto TR_00DB;
                            TR_000D:
                                current.Text = "目标电压";
                                goto TR_00DB;
                            TR_0010:
                                current.Text = "当前电压";
                                goto TR_00DB;
                            TR_0013:
                                current.Text = "K值";
                                goto TR_00DB;
                            TR_0070:
                                current.Text = "当前温度";
                                goto TR_00DB;
                            TR_0072:
                                current.Text = "目标温度";
                                goto TR_00DB;
                            TR_0075:
                                current.Text = "当前值";
                                goto TR_00DB;
                            TR_007E:
                                current.Text = "目标值";
                                goto TR_00DB;
                            TR_00A5:
                                current.Text = "计算";
                                goto TR_00DB;
                            TR_00A6:
                                current.Text = "写入";
                            TR_00DB:
                                while (true)
                                {
                                    if (enumerator3.MoveNext())
                                    {
                                        current = (Control) enumerator3.Current;
                                        if (!(current is Label))
                                        {
                                            if (!(current is Button))
                                            {
                                                continue;
                                            }
                                            name = current.Name;
                                            num = <PrivateImplementationDetails>.ComputeStringHash(name);
                                            if (num > 0x8b86399d)
                                            {
                                                if (num > 0xc3476e9f)
                                                {
                                                    if (num > 0xc8998b3c)
                                                    {
                                                        if (num == 0xc9998ccf)
                                                        {
                                                            if (name != "button_calc_temp3")
                                                            {
                                                                goto TR_00A6;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (num == 0xcb998ff5)
                                                            {
                                                                if (name == "button_calc_temp1")
                                                                {
                                                                    goto TR_00A5;
                                                                }
                                                            }
                                                            else if ((num == 0xfed4f9cb) && (name == "button_calc_tempmos"))
                                                            {
                                                                goto TR_00A5;
                                                            }
                                                            goto TR_00A6;
                                                        }
                                                        goto TR_00A5;
                                                    }
                                                    else
                                                    {
                                                        if (num == 0xc4477032)
                                                        {
                                                            if (name != "button_calc_cell11")
                                                            {
                                                                goto TR_00A6;
                                                            }
                                                        }
                                                        else if (num == 0xc54771c5)
                                                        {
                                                            if (name != "button_calc_cell10")
                                                            {
                                                                goto TR_00A6;
                                                            }
                                                        }
                                                        else if ((num != 0xc8998b3c) || (name != "button_calc_temp2"))
                                                        {
                                                            goto TR_00A6;
                                                        }
                                                        goto TR_00A5;
                                                    }
                                                }
                                                else if (num > 0xc04769e6)
                                                {
                                                    if (num == 0xc1476b79)
                                                    {
                                                        if (name == "button_calc_cell14")
                                                        {
                                                            goto TR_00A5;
                                                        }
                                                    }
                                                    else if (num == 0xc2476d0c)
                                                    {
                                                        if (name == "button_calc_cell13")
                                                        {
                                                            goto TR_00A5;
                                                        }
                                                    }
                                                    else if ((num == 0xc3476e9f) && (name == "button_calc_cell12"))
                                                    {
                                                        goto TR_00A5;
                                                    }
                                                }
                                                else if (num == 0x8d179db9)
                                                {
                                                    if (name == "button_calc_tempenv")
                                                    {
                                                        goto TR_00A5;
                                                    }
                                                }
                                                else
                                                {
                                                    if (num == 0xbf476853)
                                                    {
                                                        if (name != "button_calc_cell16")
                                                        {
                                                            goto TR_00A6;
                                                        }
                                                    }
                                                    else if ((num != 0xc04769e6) || (name != "button_calc_cell15"))
                                                    {
                                                        goto TR_00A6;
                                                    }
                                                    goto TR_00A5;
                                                }
                                            }
                                            else
                                            {
                                                if (num > 0x84862e98)
                                                {
                                                    if (num > 0x87863351)
                                                    {
                                                        if (num == 0x89863677)
                                                        {
                                                            if (name == "button_calc_cell1")
                                                            {
                                                                goto TR_00A5;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (num == 0x8a86380a)
                                                            {
                                                                if (name != "button_calc_cell2")
                                                                {
                                                                    goto TR_00A6;
                                                                }
                                                            }
                                                            else if ((num != 0x8b86399d) || (name != "button_calc_cell3"))
                                                            {
                                                                goto TR_00A6;
                                                            }
                                                            goto TR_00A5;
                                                        }
                                                        goto TR_00A6;
                                                    }
                                                    else
                                                    {
                                                        if (num == 0x8586302b)
                                                        {
                                                            if (name == "button_calc_cell5")
                                                            {
                                                                goto TR_00A5;
                                                            }
                                                        }
                                                        else if (num == 0x868631be)
                                                        {
                                                            if (name == "button_calc_cell6")
                                                            {
                                                                goto TR_00A5;
                                                            }
                                                        }
                                                        else if ((num == 0x87863351) && (name == "button_calc_cell7"))
                                                        {
                                                            goto TR_00A5;
                                                        }
                                                        goto TR_00A6;
                                                    }
                                                }
                                                else if (num > 0x4beb5567)
                                                {
                                                    if (num == 0x8086284c)
                                                    {
                                                        if (name != "button_calc_cell8")
                                                        {
                                                            goto TR_00A6;
                                                        }
                                                    }
                                                    else if (num == 0x818629df)
                                                    {
                                                        if (name != "button_calc_cell9")
                                                        {
                                                            goto TR_00A6;
                                                        }
                                                    }
                                                    else if ((num != 0x84862e98) || (name != "button_calc_cell4"))
                                                    {
                                                        goto TR_00A6;
                                                    }
                                                }
                                                else if (num == 0xec9e563)
                                                {
                                                    if (name != "button_calc_all")
                                                    {
                                                        goto TR_00A6;
                                                    }
                                                }
                                                else
                                                {
                                                    if (num == 0x215ee525)
                                                    {
                                                        if (name == "button_calc_Ichg")
                                                        {
                                                            goto TR_00A5;
                                                        }
                                                    }
                                                    else if ((num == 0x4beb5567) && (name == "button_calc_Idsg"))
                                                    {
                                                        goto TR_00A5;
                                                    }
                                                    goto TR_00A6;
                                                }
                                                goto TR_00A5;
                                            }
                                            goto TR_00A6;
                                        }
                                        else
                                        {
                                            name = current.Name;
                                            num = <PrivateImplementationDetails>.ComputeStringHash(name);
                                            if (num > 0x920ce001)
                                            {
                                                if (num > 0xd30b6b60)
                                                {
                                                    if (num > 0xd80b733f)
                                                    {
                                                        if (num > 0xe10b816a)
                                                        {
                                                            if (num > 0xe210002b)
                                                            {
                                                                if (num == 0xe4100351)
                                                                {
                                                                    if (name == "label226")
                                                                    {
                                                                        goto TR_0013;
                                                                    }
                                                                }
                                                                else if (num == 0xe710080a)
                                                                {
                                                                    if (name == "label223")
                                                                    {
                                                                        goto TR_000D;
                                                                    }
                                                                }
                                                                else if ((num == 0xe810099d) && (name == "label222"))
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if (num == 0xe20b82fd)
                                                            {
                                                                if (name == "label208")
                                                                {
                                                                    goto TR_0072;
                                                                }
                                                            }
                                                            else if ((num == 0xe210002b) && (name == "label224"))
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if (num > 0xda0b7665)
                                                        {
                                                            if (num == 0xdc093af4)
                                                            {
                                                                if (name == "label218")
                                                                {
                                                                    goto TR_0010;
                                                                }
                                                            }
                                                            else if ((num == 0xe10b816a) && (name == "label209"))
                                                            {
                                                                goto TR_0070;
                                                            }
                                                        }
                                                        else if (num == 0xd90b74d2)
                                                        {
                                                            if (name == "label201")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0xda0b7665) && (name == "label200"))
                                                        {
                                                            goto TR_000D;
                                                        }
                                                    }
                                                    else if (num > 0xd50b6e86)
                                                    {
                                                        if (num > 0xd60b7019)
                                                        {
                                                            if (num == 0xd7093315)
                                                            {
                                                                if (name == "label213")
                                                                {
                                                                    goto TR_0070;
                                                                }
                                                            }
                                                            else if (num == 0xd70b71ac)
                                                            {
                                                                if (name == "label203")
                                                                {
                                                                    goto TR_0075;
                                                                }
                                                            }
                                                            else if ((num == 0xd80b733f) && (name == "label202"))
                                                            {
                                                                goto TR_007E;
                                                            }
                                                        }
                                                        else if (num == 0xd6093182)
                                                        {
                                                            if (name == "label212")
                                                            {
                                                                goto TR_0072;
                                                            }
                                                        }
                                                        else if ((num == 0xd60b7019) && (name == "label204"))
                                                        {
                                                            goto TR_007E;
                                                        }
                                                    }
                                                    else if (num > 0xd40b6cf3)
                                                    {
                                                        if (num == 0xd5092fef)
                                                        {
                                                            if (name == "label211")
                                                            {
                                                                goto TR_0070;
                                                            }
                                                        }
                                                        else if ((num == 0xd50b6e86) && (name == "label205"))
                                                        {
                                                            goto TR_0075;
                                                        }
                                                    }
                                                    else if (num == 0xd4092e5c)
                                                    {
                                                        if (name == "label210")
                                                        {
                                                            goto TR_0072;
                                                        }
                                                    }
                                                    else if ((num == 0xd40b6cf3) && (name == "label206"))
                                                    {
                                                        goto TR_007E;
                                                    }
                                                }
                                                else if (num > 0x9dd47487)
                                                {
                                                    if (num > 0xa1d6b96a)
                                                    {
                                                        if (num > 0xd10929a3)
                                                        {
                                                            if (num == 0xd2092b36)
                                                            {
                                                                if (name == "label216")
                                                                {
                                                                    goto TR_0072;
                                                                }
                                                            }
                                                            else if (num == 0xd3092cc9)
                                                            {
                                                                if (name == "label217")
                                                                {
                                                                    goto TR_0070;
                                                                }
                                                            }
                                                            else if ((num == 0xd30b6b60) && (name == "label207"))
                                                            {
                                                                goto TR_0075;
                                                            }
                                                        }
                                                        else if (num == 0xd0092810)
                                                        {
                                                            if (name == "label214")
                                                            {
                                                                goto TR_0072;
                                                            }
                                                        }
                                                        else if ((num == 0xd10929a3) && (name == "label215"))
                                                        {
                                                            goto TR_0070;
                                                        }
                                                    }
                                                    else if (num > 0x9e0ab44e)
                                                    {
                                                        if (num == 0x9fd6b644)
                                                        {
                                                            if (name == "label83")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0xa1d6b96a) && (name == "label81"))
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if (num == 0x9dd6b31e)
                                                    {
                                                        if (name == "label85")
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if ((num == 0x9e0ab44e) && (name == "label115"))
                                                    {
                                                        goto TR_0013;
                                                    }
                                                }
                                                else if (num > 0x961bf0d7)
                                                {
                                                    if (num > 0x9a1e35ba)
                                                    {
                                                        if (num == 0x9b1e374d)
                                                        {
                                                            if (name == "label198")
                                                            {
                                                                goto TR_000D;
                                                            }
                                                        }
                                                        else if (num == 0x9bd6aff8)
                                                        {
                                                            if (name == "label87")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0x9dd47487) && (name == "label91"))
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if (num == 0x99d6acd2)
                                                    {
                                                        if (name == "label89")
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if ((num == 0x9a1e35ba) && (name == "label199"))
                                                    {
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if (num > 0x931e2ab5)
                                                {
                                                    if (num == 0x951bef44)
                                                    {
                                                        if (name == "label188")
                                                        {
                                                            goto TR_000D;
                                                        }
                                                    }
                                                    else if ((num == 0x961bf0d7) && (name == "label189"))
                                                    {
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if (num == 0x921e2922)
                                                {
                                                    if (name == "label191")
                                                    {
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if ((num == 0x931e2ab5) && (name == "label190"))
                                                {
                                                    goto TR_000D;
                                                }
                                            }
                                            else
                                            {
                                                if (num > 0x8ae59fbf)
                                                {
                                                    if (num > 0x8e0f184c)
                                                    {
                                                        if (num > 0x8f1be5d2)
                                                        {
                                                            if (num > 0x901be765)
                                                            {
                                                                if (num == 0x901e25fc)
                                                                {
                                                                    if (name == "label193")
                                                                    {
                                                                        goto TR_0010;
                                                                    }
                                                                }
                                                                else if (num == 0x911e278f)
                                                                {
                                                                    if (name == "label192")
                                                                    {
                                                                        goto TR_000D;
                                                                    }
                                                                }
                                                                else if ((num == 0x920ce001) && (name == "label129"))
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if (num == 0x8f1e2469)
                                                            {
                                                                if (name == "label194")
                                                                {
                                                                    goto TR_000D;
                                                                }
                                                            }
                                                            else if ((num == 0x901be765) && (name == "label183"))
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if (num > 0x8e1e22d6)
                                                        {
                                                            if (num == 0x8ee5a60b)
                                                            {
                                                                if (name == "label68")
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if ((num == 0x8f1be5d2) && (name == "label182"))
                                                            {
                                                                goto TR_000D;
                                                            }
                                                        }
                                                        else if (num == 0x8e1be43f)
                                                        {
                                                            if (name == "label181")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0x8e1e22d6) && (name == "label195"))
                                                        {
                                                            goto TR_0010;
                                                        }
                                                        break;
                                                    }
                                                    else if (num > 0x8c1e1fb0)
                                                    {
                                                        if (num > 0x8d1be2ac)
                                                        {
                                                            if (num == 0x8d1e2143)
                                                            {
                                                                if (name == "label196")
                                                                {
                                                                    goto TR_000D;
                                                                }
                                                            }
                                                            else if (num == 0x8e0cd9b5)
                                                            {
                                                                if (name == "label125")
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if ((num == 0x8e0f184c) && (name == "label131"))
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if (num == 0x8ce5a2e5)
                                                        {
                                                            if (name == "label66")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0x8d1be2ac) && (name == "label180"))
                                                        {
                                                            goto TR_000D;
                                                        }
                                                        break;
                                                    }
                                                    else if (num > 0x8c0cd68f)
                                                    {
                                                        if (num == 0x8c1be119)
                                                        {
                                                            if (name == "label187")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0x8c1e1fb0) && (name == "label197"))
                                                        {
                                                            goto TR_0010;
                                                        }
                                                        break;
                                                    }
                                                    else if (num == 0x8b1bdf86)
                                                    {
                                                        if (name != "label186")
                                                        {
                                                            break;
                                                        }
                                                        goto TR_000D;
                                                    }
                                                    else if ((num != 0x8c0cd68f) || (name != "label127"))
                                                    {
                                                        break;
                                                    }
                                                }
                                                else if (num > 0x1bed3fc7)
                                                {
                                                    if (num > 0x1fe2b8b7)
                                                    {
                                                        if (num > 0x88e59c99)
                                                        {
                                                            if (num == 0x891bdc60)
                                                            {
                                                                if (name != "label184")
                                                                {
                                                                    break;
                                                                }
                                                                goto TR_000D;
                                                            }
                                                            else if (num == 0x8a1bddf3)
                                                            {
                                                                if (name != "label185")
                                                                {
                                                                    break;
                                                                }
                                                                goto TR_0010;
                                                            }
                                                            else if ((num != 0x8ae59fbf) || (name != "label64"))
                                                            {
                                                                break;
                                                            }
                                                            goto TR_0013;
                                                        }
                                                        else
                                                        {
                                                            if (num != 0x21e2bbdd)
                                                            {
                                                                if ((num != 0x88e59c99) || (name != "label62"))
                                                                {
                                                                    break;
                                                                }
                                                            }
                                                            else if (name != "label71")
                                                            {
                                                                break;
                                                            }
                                                            goto TR_0013;
                                                        }
                                                        break;
                                                    }
                                                    else if (num > 0x1d056c0d)
                                                    {
                                                        if (num == 0x1de2b591)
                                                        {
                                                            if (name == "label75")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0x1fe2b8b7) && (name == "label73"))
                                                        {
                                                            goto TR_0013;
                                                        }
                                                        break;
                                                    }
                                                    else
                                                    {
                                                        if (num == 0x1c056a7a)
                                                        {
                                                            if (name == "label177")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0x1d056c0d) && (name == "label176"))
                                                        {
                                                            goto TR_000D;
                                                        }
                                                        break;
                                                    }
                                                }
                                                else if (num > 0x19e2af45)
                                                {
                                                    if (num > 0x1a056754)
                                                    {
                                                        if (num == 0x1b0568e7)
                                                        {
                                                            if (name != "label174")
                                                            {
                                                                break;
                                                            }
                                                            goto TR_000D;
                                                        }
                                                        else if (num != 0x1be2b26b)
                                                        {
                                                            if ((num != 0x1bed3fc7) || (name != "label37"))
                                                            {
                                                                break;
                                                            }
                                                        }
                                                        else if (name != "label77")
                                                        {
                                                            break;
                                                        }
                                                    }
                                                    else if (num == 0x19ed3ca1)
                                                    {
                                                        if (name != "label31")
                                                        {
                                                            break;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if ((num != 0x1a056754) || (name != "label175"))
                                                        {
                                                            break;
                                                        }
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if (num > 0xf055603)
                                                {
                                                    if (num == 0x190565c1)
                                                    {
                                                        if (name == "label172")
                                                        {
                                                            goto TR_000D;
                                                        }
                                                    }
                                                    else if ((num == 0x19e2af45) && (name == "label79"))
                                                    {
                                                        goto TR_0013;
                                                    }
                                                    break;
                                                }
                                                else
                                                {
                                                    if (num == 0xe055470)
                                                    {
                                                        if (name == "label179")
                                                        {
                                                            goto TR_0010;
                                                        }
                                                    }
                                                    else if ((num == 0xf055603) && (name == "label178"))
                                                    {
                                                        goto TR_000D;
                                                    }
                                                    break;
                                                }
                                                goto TR_0013;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        continue;
                                    }
                                    break;
                                }
                                current.Text = "B值";
                                goto TR_00DB;
                            }
                        }
                        name = control.Name;
                        num = <PrivateImplementationDetails>.ComputeStringHash(name);
                        if (num <= 0x53db3712)
                        {
                            if (num == 0x23a34f05)
                            {
                                if (name == "button_Other_read")
                                {
                                    control.Text = "其他参数读取";
                                    continue;
                                }
                            }
                            else if (num != 0x46036dcd)
                            {
                                if ((num == 0x53db3712) && (name == "button_read_all"))
                                {
                                    control.Text = "单节电池校准参数读取";
                                    continue;
                                }
                            }
                            else if (name == "button_reset")
                            {
                                control.Text = "单节电池校准参数复位";
                                continue;
                            }
                        }
                        else if (num <= 0x8e9405c8)
                        {
                            if (num != 0x8a97ba7d)
                            {
                                if ((num == 0x8e9405c8) && (name == "button_temp_reset"))
                                {
                                    control.Text = "温度校准参数复位";
                                    continue;
                                }
                            }
                            else if (name == "button_Idsg_reset")
                            {
                                control.Text = "放电电流校准参数重置";
                                continue;
                            }
                        }
                        else if (num != 0xa7dba1dd)
                        {
                            if ((num == 0xc6fdaecf) && (name == "button_Ichg_reset"))
                            {
                                control.Text = "充电电流校准参数重置";
                                continue;
                            }
                        }
                        else if (name == "button_temp_read")
                        {
                            control.Text = "温度校准参数读取";
                            continue;
                        }
                        control.Text = "整体电压偏置参数重置";
                    }
                }
            }
        }

        private void button_Cool_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 7;
            this.System_Function_OFF_Call();
        }

        private void button_Cool_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 7;
            this.System_Function_ON_Call();
        }

        private void button_CopperLoss_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_CopperLoss1.Text = "";
            this.textBox_CopperLoss2.Text = "";
            this.textBox_CopperLoss3.Text = "";
            this.textBox_CopperLoss4.Text = "";
            this.textBox_CopperLoss5.Text = "";
            this.textBox_CopperLoss6.Text = "";
            this.textBox_CopperLoss7.Text = "";
            this.textBox_CopperLoss8.Text = "";
            this.textBox_CellNum1.Text = "";
            this.textBox_CellNum2.Text = "";
            this.textBox_CellNum3.Text = "";
            this.textBox_CellNum4.Text = "";
            this.textBox_CellNum5.Text = "";
            this.textBox_CellNum6.Text = "";
            this.textBox_CellNum7.Text = "";
            this.textBox_CellNum8.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x222a;
                    this.u16Rs485RegNum = 0x20;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_CopperLoss_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[100];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_CopperLoss1.Text == "") || ((this.textBox_CopperLoss2.Text == "") || ((this.textBox_CopperLoss3.Text == "") || ((this.textBox_CopperLoss4.Text == "") || ((this.textBox_CopperLoss5.Text == "") || ((this.textBox_CopperLoss6.Text == "") || ((this.textBox_CopperLoss7.Text == "") || ((this.textBox_CopperLoss8.Text == "") || ((this.textBox_CopperLoss9.Text == "") || ((this.textBox_CopperLoss10.Text == "") || ((this.textBox_CopperLoss11.Text == "") || ((this.textBox_CopperLoss12.Text == "") || ((this.textBox_CopperLoss13.Text == "") || ((this.textBox_CopperLoss14.Text == "") || ((this.textBox_CopperLoss15.Text == "") || ((this.textBox_CopperLoss16.Text == "") || ((this.textBox_CellNum1.Text == "") || ((this.textBox_CellNum2.Text == "") || ((this.textBox_CellNum3.Text == "") || ((this.textBox_CellNum4.Text == "") || ((this.textBox_CellNum5.Text == "") || ((this.textBox_CellNum6.Text == "") || ((this.textBox_CellNum7.Text == "") || ((this.textBox_CellNum8.Text == "") || ((this.textBox_CellNum9.Text == "") || ((this.textBox_CellNum10.Text == "") || ((this.textBox_CellNum11.Text == "") || ((this.textBox_CellNum12.Text == "") || ((this.textBox_CellNum13.Text == "") || ((this.textBox_CellNum14.Text == "") || ((this.textBox_CellNum15.Text == "") || (this.textBox_CellNum16.Text == ""))))))))))))))))))))))))))))))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_CopperLoss1.Text);
                float num2 = float.Parse(this.textBox_CopperLoss2.Text);
                float num3 = float.Parse(this.textBox_CopperLoss3.Text);
                float num4 = float.Parse(this.textBox_CopperLoss4.Text);
                float num5 = float.Parse(this.textBox_CopperLoss5.Text);
                float num6 = float.Parse(this.textBox_CopperLoss6.Text);
                float num7 = float.Parse(this.textBox_CopperLoss7.Text);
                float num8 = float.Parse(this.textBox_CopperLoss8.Text);
                float num9 = float.Parse(this.textBox_CopperLoss9.Text);
                float num10 = float.Parse(this.textBox_CopperLoss10.Text);
                float num11 = float.Parse(this.textBox_CopperLoss11.Text);
                float num12 = float.Parse(this.textBox_CopperLoss12.Text);
                float num13 = float.Parse(this.textBox_CopperLoss13.Text);
                float num14 = float.Parse(this.textBox_CopperLoss14.Text);
                float num15 = float.Parse(this.textBox_CopperLoss15.Text);
                float num16 = float.Parse(this.textBox_CopperLoss16.Text);
                float num17 = float.Parse(this.textBox_CellNum1.Text);
                float num18 = float.Parse(this.textBox_CellNum2.Text);
                float num19 = float.Parse(this.textBox_CellNum3.Text);
                float num20 = float.Parse(this.textBox_CellNum4.Text);
                float num21 = float.Parse(this.textBox_CellNum5.Text);
                float num22 = float.Parse(this.textBox_CellNum6.Text);
                float num23 = float.Parse(this.textBox_CellNum7.Text);
                float num24 = float.Parse(this.textBox_CellNum8.Text);
                float num25 = float.Parse(this.textBox_CellNum9.Text);
                float num26 = float.Parse(this.textBox_CellNum10.Text);
                float num27 = float.Parse(this.textBox_CellNum11.Text);
                float num28 = float.Parse(this.textBox_CellNum12.Text);
                float num29 = float.Parse(this.textBox_CellNum13.Text);
                float num30 = float.Parse(this.textBox_CellNum14.Text);
                float num31 = float.Parse(this.textBox_CellNum15.Text);
                float num32 = float.Parse(this.textBox_CellNum16.Text);
                if ((num > 10000f) || ((num < 0f) || ((num2 > 10000f) || ((num2 < 0f) || ((num3 > 10000f) || ((num3 < 0f) || ((num4 > 10000f) || ((num4 < 0f) || ((num5 > 10000f) || ((num5 < 0f) || ((num6 > 10000f) || ((num6 < 0f) || ((num7 > 10000f) || ((num7 < 0f) || ((num8 > 10000f) || ((num8 < 0f) || ((num9 > 10000f) || ((num9 < 0f) || ((num10 > 10000f) || ((num10 < 0f) || ((num11 > 10000f) || ((num11 < 0f) || ((num12 > 10000f) || ((num12 < 0f) || ((num13 > 10000f) || ((num13 < 0f) || ((num14 > 10000f) || ((num14 < 0f) || ((num15 > 10000f) || ((num15 < 0f) || ((num16 > 10000f) || (num16 < 0f))))))))))))))))))))))))))))))))
                {
                    MessageBox.Show("铜损补偿电阻取值范围为0 - 10000mΩ，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num17 > 32f) || ((num17 < 0f) || ((num18 > 32f) || ((num18 < 0f) || ((num19 > 32f) || ((num19 < 0f) || ((num20 > 32f) || ((num20 < 0f) || ((num21 > 32f) || ((num21 < 0f) || ((num22 > 32f) || ((num22 < 0f) || ((num23 > 32f) || ((num23 < 0f) || ((num24 > 32f) || ((num24 < 0f) || ((num25 > 32f) || ((num25 < 0f) || ((num26 > 32f) || ((num26 < 0f) || ((num27 > 32f) || ((num27 < 0f) || ((num28 > 32f) || ((num28 < 0f) || ((num29 > 32f) || ((num29 < 0f) || ((num30 > 32f) || ((num30 < 0f) || ((num31 > 32f) || ((num31 < 0f) || ((num32 > 32f) || (num32 < 0f))))))))))))))))))))))))))))))))
                {
                    MessageBox.Show("铜损补偿串数取值范围为为0 - 32，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num33 = (ushort) float.Parse(this.textBox_CopperLoss1.Text);
                    ushort num34 = (ushort) float.Parse(this.textBox_CopperLoss2.Text);
                    ushort num35 = (ushort) float.Parse(this.textBox_CopperLoss3.Text);
                    ushort num36 = (ushort) float.Parse(this.textBox_CopperLoss4.Text);
                    ushort num37 = (ushort) float.Parse(this.textBox_CopperLoss5.Text);
                    ushort num38 = (ushort) float.Parse(this.textBox_CopperLoss6.Text);
                    ushort num39 = (ushort) float.Parse(this.textBox_CopperLoss7.Text);
                    ushort num40 = (ushort) float.Parse(this.textBox_CopperLoss8.Text);
                    ushort num41 = (ushort) float.Parse(this.textBox_CopperLoss9.Text);
                    ushort num42 = (ushort) float.Parse(this.textBox_CopperLoss10.Text);
                    ushort num43 = (ushort) float.Parse(this.textBox_CopperLoss11.Text);
                    ushort num44 = (ushort) float.Parse(this.textBox_CopperLoss12.Text);
                    ushort num45 = (ushort) float.Parse(this.textBox_CopperLoss13.Text);
                    ushort num46 = (ushort) float.Parse(this.textBox_CopperLoss14.Text);
                    ushort num47 = (ushort) float.Parse(this.textBox_CopperLoss15.Text);
                    ushort num48 = (ushort) float.Parse(this.textBox_CopperLoss16.Text);
                    ushort num49 = (ushort) float.Parse(this.textBox_CellNum1.Text);
                    ushort num50 = (ushort) float.Parse(this.textBox_CellNum2.Text);
                    ushort num51 = (ushort) float.Parse(this.textBox_CellNum3.Text);
                    ushort num52 = (ushort) float.Parse(this.textBox_CellNum4.Text);
                    ushort num53 = (ushort) float.Parse(this.textBox_CellNum5.Text);
                    ushort num54 = (ushort) float.Parse(this.textBox_CellNum6.Text);
                    ushort num55 = (ushort) float.Parse(this.textBox_CellNum7.Text);
                    ushort num56 = (ushort) float.Parse(this.textBox_CellNum8.Text);
                    ushort num57 = (ushort) float.Parse(this.textBox_CellNum9.Text);
                    ushort num58 = (ushort) float.Parse(this.textBox_CellNum10.Text);
                    ushort num59 = (ushort) float.Parse(this.textBox_CellNum11.Text);
                    ushort num60 = (ushort) float.Parse(this.textBox_CellNum12.Text);
                    ushort num61 = (ushort) float.Parse(this.textBox_CellNum13.Text);
                    ushort num62 = (ushort) float.Parse(this.textBox_CellNum14.Text);
                    ushort num63 = (ushort) float.Parse(this.textBox_CellNum15.Text);
                    ushort num64 = (ushort) float.Parse(this.textBox_CellNum16.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x222a;
                        this.u16Rs485RegNum = 0x20;
                        this.bRs485ByteNum = 0x40;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num66 = (byte) (index + 1);
                        data[num66] = this.bRs485FunCmd;
                        byte num67 = (byte) (num66 + 1);
                        data[num67] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num68 = (byte) (num67 + 1);
                        data[num68] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num69 = (byte) (num68 + 1);
                        data[num69] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num70 = (byte) (num69 + 1);
                        data[num70] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num71 = (byte) (num70 + 1);
                        data[num71] = this.bRs485ByteNum;
                        byte num72 = (byte) (num71 + 1);
                        data[num72] = (byte) ((num33 >> 8) & 0xff);
                        byte num73 = (byte) (num72 + 1);
                        data[num73] = (byte) (num33 & 0xff);
                        byte num74 = (byte) (num73 + 1);
                        data[num74] = (byte) ((num34 >> 8) & 0xff);
                        byte num75 = (byte) (num74 + 1);
                        data[num75] = (byte) (num34 & 0xff);
                        byte num76 = (byte) (num75 + 1);
                        data[num76] = (byte) ((num35 >> 8) & 0xff);
                        byte num77 = (byte) (num76 + 1);
                        data[num77] = (byte) (num35 & 0xff);
                        byte num78 = (byte) (num77 + 1);
                        data[num78] = (byte) ((num36 >> 8) & 0xff);
                        byte num79 = (byte) (num78 + 1);
                        data[num79] = (byte) (num36 & 0xff);
                        byte num80 = (byte) (num79 + 1);
                        data[num80] = (byte) ((num37 >> 8) & 0xff);
                        byte num81 = (byte) (num80 + 1);
                        data[num81] = (byte) (num37 & 0xff);
                        byte num82 = (byte) (num81 + 1);
                        data[num82] = (byte) ((num38 >> 8) & 0xff);
                        byte num83 = (byte) (num82 + 1);
                        data[num83] = (byte) (num38 & 0xff);
                        byte num84 = (byte) (num83 + 1);
                        data[num84] = (byte) ((num39 >> 8) & 0xff);
                        byte num85 = (byte) (num84 + 1);
                        data[num85] = (byte) (num39 & 0xff);
                        byte num86 = (byte) (num85 + 1);
                        data[num86] = (byte) ((num40 >> 8) & 0xff);
                        byte num87 = (byte) (num86 + 1);
                        data[num87] = (byte) (num40 & 0xff);
                        byte num88 = (byte) (num87 + 1);
                        data[num88] = (byte) ((num41 >> 8) & 0xff);
                        byte num89 = (byte) (num88 + 1);
                        data[num89] = (byte) (num41 & 0xff);
                        byte num90 = (byte) (num89 + 1);
                        data[num90] = (byte) ((num42 >> 8) & 0xff);
                        byte num91 = (byte) (num90 + 1);
                        data[num91] = (byte) (num42 & 0xff);
                        byte num92 = (byte) (num91 + 1);
                        data[num92] = (byte) ((num43 >> 8) & 0xff);
                        byte num93 = (byte) (num92 + 1);
                        data[num93] = (byte) (num43 & 0xff);
                        byte num94 = (byte) (num93 + 1);
                        data[num94] = (byte) ((num44 >> 8) & 0xff);
                        byte num95 = (byte) (num94 + 1);
                        data[num95] = (byte) (num44 & 0xff);
                        byte num96 = (byte) (num95 + 1);
                        data[num96] = (byte) ((num45 >> 8) & 0xff);
                        byte num97 = (byte) (num96 + 1);
                        data[num97] = (byte) (num45 & 0xff);
                        byte num98 = (byte) (num97 + 1);
                        data[num98] = (byte) ((num46 >> 8) & 0xff);
                        byte num99 = (byte) (num98 + 1);
                        data[num99] = (byte) (num46 & 0xff);
                        byte num100 = (byte) (num99 + 1);
                        data[num100] = (byte) ((num47 >> 8) & 0xff);
                        byte num101 = (byte) (num100 + 1);
                        data[num101] = (byte) (num47 & 0xff);
                        byte num102 = (byte) (num101 + 1);
                        data[num102] = (byte) ((num48 >> 8) & 0xff);
                        byte num103 = (byte) (num102 + 1);
                        data[num103] = (byte) (num48 & 0xff);
                        byte num104 = (byte) (num103 + 1);
                        data[num104] = (byte) ((num49 >> 8) & 0xff);
                        byte num105 = (byte) (num104 + 1);
                        data[num105] = (byte) (num49 & 0xff);
                        byte num106 = (byte) (num105 + 1);
                        data[num106] = (byte) ((num50 >> 8) & 0xff);
                        byte num107 = (byte) (num106 + 1);
                        data[num107] = (byte) (num50 & 0xff);
                        byte num108 = (byte) (num107 + 1);
                        data[num108] = (byte) ((num51 >> 8) & 0xff);
                        byte num109 = (byte) (num108 + 1);
                        data[num109] = (byte) (num51 & 0xff);
                        byte num110 = (byte) (num109 + 1);
                        data[num110] = (byte) ((num52 >> 8) & 0xff);
                        byte num111 = (byte) (num110 + 1);
                        data[num111] = (byte) (num52 & 0xff);
                        byte num112 = (byte) (num111 + 1);
                        data[num112] = (byte) ((num53 >> 8) & 0xff);
                        byte num113 = (byte) (num112 + 1);
                        data[num113] = (byte) (num53 & 0xff);
                        byte num114 = (byte) (num113 + 1);
                        data[num114] = (byte) ((num54 >> 8) & 0xff);
                        byte num115 = (byte) (num114 + 1);
                        data[num115] = (byte) (num54 & 0xff);
                        byte num116 = (byte) (num115 + 1);
                        data[num116] = (byte) ((num55 >> 8) & 0xff);
                        byte num117 = (byte) (num116 + 1);
                        data[num117] = (byte) (num55 & 0xff);
                        byte num118 = (byte) (num117 + 1);
                        data[num118] = (byte) ((num56 >> 8) & 0xff);
                        byte num119 = (byte) (num118 + 1);
                        data[num119] = (byte) (num56 & 0xff);
                        byte num120 = (byte) (num119 + 1);
                        data[num120] = (byte) ((num57 >> 8) & 0xff);
                        byte num121 = (byte) (num120 + 1);
                        data[num121] = (byte) (num57 & 0xff);
                        byte num122 = (byte) (num121 + 1);
                        data[num122] = (byte) ((num58 >> 8) & 0xff);
                        byte num123 = (byte) (num122 + 1);
                        data[num123] = (byte) (num58 & 0xff);
                        byte num124 = (byte) (num123 + 1);
                        data[num124] = (byte) ((num59 >> 8) & 0xff);
                        byte num125 = (byte) (num124 + 1);
                        data[num125] = (byte) (num59 & 0xff);
                        byte num126 = (byte) (num125 + 1);
                        data[num126] = (byte) ((num60 >> 8) & 0xff);
                        byte num127 = (byte) (num126 + 1);
                        data[num127] = (byte) (num60 & 0xff);
                        byte num128 = (byte) (num127 + 1);
                        data[num128] = (byte) ((num61 >> 8) & 0xff);
                        byte num129 = (byte) (num128 + 1);
                        data[num129] = (byte) (num61 & 0xff);
                        byte num130 = (byte) (num129 + 1);
                        data[num130] = (byte) ((num62 >> 8) & 0xff);
                        byte num131 = (byte) (num130 + 1);
                        data[num131] = (byte) (num62 & 0xff);
                        byte num132 = (byte) (num131 + 1);
                        data[num132] = (byte) ((num63 >> 8) & 0xff);
                        byte num133 = (byte) (num132 + 1);
                        data[num133] = (byte) (num63 & 0xff);
                        byte num134 = (byte) (num133 + 1);
                        data[num134] = (byte) ((num64 >> 8) & 0xff);
                        byte num135 = (byte) (num134 + 1);
                        byte lenth = (byte) (num135 + 1);
                        data[num135] = (byte) (num64 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void button_Current_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_cail_Idsg_k.Text = "";
            this.textBox_cail_Idsg_b.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2046;
                    this.u16Rs485RegNum = 4;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_English_Click(object sender, EventArgs e)
        {
            this.tabPage1.Text = "Imformation";
            this.tabPage2.Text = "Calibration";
            this.tabPage3.Text = "Protection";
            this.groupBox_Vcell.Text = "Vcell(mV)";
            this.groupBox_Balance.Text = "Balanced(Y/N)";
            this.label_AFE_ComError_ref.Text = "AFE_ComError:";
            this.label_CBC_ref.Text = "CBC_ShortError:";
            this.label_Reserved1_ref.Text = "Reserved1:";
            this.label_Reserved2_ref.Text = "Reserved2:";
            this.label_Reserved3_ref.Text = "Reserved3:";
            this.label_Reserved4_ref.Text = "Reserved4:";
            this.label_Fault_Reacent.Text = "Fault_Reacent:";
            this.label_Warn_Reacent.Text = "Warn_Reacent:";
            this.label_Present_mAh_ref.Text = "Present_mAh:";
            this.label_Residue_mAh_ref.Text = "Residue_mAh:";
            this.label_Factory_mAh_ref.Text = "Factory_mAh:";
            this.label_CycleTimes_ref.Text = "CycleTimes:";
            this.groupBox_Vcell_Status.Text = "Vcell_Status";
            this.label_Vcell_max_ref.Text = "Vcell_max:";
            this.label_Vcell_min_ref.Text = "Vcell_min:";
            this.label_Max_pos_ref.Text = "Max_pos:";
            this.label_Min_pos_ref.Text = "Min_pos:";
            this.label_V_delta_ref.Text = "Vdelta(mV):";
            this.label_Vbat_ref.Text = "Vbat(V):";
            this.groupBox_Temperature.Text = "Temperature(℃)";
            this.label_Temp1_ref.Text = "Temp1:";
            this.label_Temp2_ref.Text = "Temp2:";
            this.label_Temp3_ref.Text = "Temp3:";
            this.label_Temp_env_ref.Text = "Temp_env:";
            this.label_Temp_mos_ref.Text = "Temp_mos:";
            this.label_TempMax_ref.Text = "TempMax:";
            this.label_TempMin_ref.Text = "TempMin:";
            this.groupBox_OtherStatus.Text = "OtherStatus";
            this.label_Ichg_ref.Text = "Ichg(A):";
            this.label_Idsg_ref.Text = "Idsg(A):";
            this.label_CHG_MOS_ref.Text = "CHG_MOS:";
            this.label_heat_ref.Text = "Heat_RLY:";
            this.label_DSG_MOS_ref.Text = "DSG_MOS:";
            this.label_WarnStu_ref.Text = "WarnStu:";
            this.label_FaultStu_ref.Text = "FaultStu:";
            this.groupBox_Vcell1.Text = "Cell_1";
            this.groupBox_Vcell2.Text = "Cell_2";
            this.groupBox_Vcell3.Text = "Cell_3";
            this.groupBox_Vcell4.Text = "Cell_4";
            this.groupBox_Vcell5.Text = "Cell_5";
            this.groupBox_Vcell6.Text = "Cell_6";
            this.groupBox_Vcell7.Text = "Cell_7";
            this.groupBox_Vcell8.Text = "Cell_8";
            this.groupBox_Vcell9.Text = "Cell_9";
            this.groupBox_Vcell10.Text = "Cell_10";
            this.groupBox_Vcell11.Text = "Cell_11";
            this.groupBox_Vcell12.Text = "Cell_12";
            this.groupBox_Vcell13.Text = "Cell_13";
            this.groupBox_Vcell14.Text = "Cell_14";
            this.groupBox_Vcell15.Text = "Cell_15";
            this.groupBox_Vcell16.Text = "Cell_16";
            this.groupBox_temp1.Text = "Temp1";
            this.groupBox_temp2.Text = "Temp2";
            this.groupBox_temp3.Text = "Temp3";
            this.groupBox_temp_env.Text = "Temp_env";
            this.groupBox_temp_mos.Text = "Temp_mos";
            this.groupBox_Vall_I.Text = "Vall_I";
            this.groupBox_Idsg.Text = "Idsg(B_unit_A)";
            this.groupBox_Ichg.Text = "Ichg(B_unit_A)";
            this.labe_balance.Text = "Balance(mV)";
            this.label_Open_V.Text = "Open_V:";
            this.label_Open_W.Text = "Open_W:";
            this.label_Close_W1.Text = "Close_W1:";
            this.label_Close_W2.Text = "Close_W2:";
            this.label_Heat_set.Text = "Heat(℃)";
            this.label_DSG_high.Text = "DSG_high:";
            this.label_DSG_low.Text = "DSG_low:";
            this.label_CHG_high.Text = "CHG_high:";
            this.label_CHG_low.Text = "CHG_low:";
            this.bIsEng = 1;
            if (this.button_TurnOnOffCom.Text == "打开串口")
            {
                this.button_TurnOnOffCom.Text = "StartUp";
            }
            else if (this.button_TurnOnOffCom.Text == "关闭串口")
            {
                this.button_TurnOnOffCom.Text = "ShutDown";
            }
            if (this.button_MosRelay_Func_Open.Text == "开机")
            {
                this.button_MosRelay_Func_Open.Text = "PowerOn";
            }
            else if (this.button_MosRelay_Func_Open.Text == "关机")
            {
                this.button_MosRelay_Func_Open.Text = "ShutDown";
            }
            if (this.button_Heated_Func_Open.Text == "开启加热功能")
            {
                this.button_Heated_Func_Open.Text = "EnableHeatFun";
            }
            else if (this.button_Heated_Func_Open.Text == "关闭加热功能")
            {
                this.button_Heated_Func_Open.Text = "DisableHeatFun";
            }
            this.label_UART.Text = "UART:";
            this.label_BaudRate.Text = "BaudRate:";
            this.groupBox_History.Text = "ProtectRecordHistory";
            this.groupBox_Present.Text = "PresentProtectRecord";
            this.label_CtrlStartup.Text = "CtrlStartup:";
            this.label_CtrlHeat.Text = "CtrlHeat:";
            this.label_CtrlBalance.Text = "CtrlBalance:";
            this.label_CtrlAFEWake.Text = "CtrlAFEWake:";
            this.label_CtrlAFEShut.Text = "CtrlAFEShut:";
            this.Button_Fault_Record_Read.Text = "Read";
            this.Button_Fault_Record_Clear.Text = "Clear";
            this.button_ProtectPresentClear.Text = "Clear";
            this.groupBox_set.Text = "Set_information";
            this.groupBox_read.Text = "Read_imformation";
            this.groupBox_ERROR.Text = "ERROR";
            this.label_Vdelta_Op_Third.Text = "Vcell_OW:";
            this.label_Vbat_OV_Second.Text = "Vcell_UW:";
            this.label_Vbat_UV_Second.Text = "Vbat_OW:";
            this.label275.Text = "Vbat_UW:";
            this.label_Tmos_OTP_Third.Text = "CHG_OCW:";
            this.label287.Text = "DSG_OCW:";
            this.label286.Text = "Cellchg_OTW:";
            this.label_Celldsg_UT_Third.Text = "Cellchg_UTW:";
            this.label_Vcell_OV_Second.Text = "Celldsg_OTW:";
            this.label_Vcell_UV_Second.Text = "Celldsg_UTW:";
            this.label268.Text = "Vdelta_OW:";
            this.label266.Text = "Res:";
            this.label272.Text = "Tmos_OTW:";
            this.label_Cellchg_UT_Second.Text = "SOC_low_W:";
            this.label_LogTimer.Text = "Log record interval(s):";
            this.button_LogTimerStart.Text = "Start";
            this.button_LogTimerStop.Text = "Stop";
            this.label_LogFileName.Text = "LogFileName:";
            this.groupBox_Vcell_cal.Text = "CalibrateVoltage(Unit Of B-value Is 'mV')";
            this.groupBox_temp_cal.Text = "CalibrateTemperature(Unit of B-value Is '℃')";
            using (IEnumerator enumerator = this.tabPage2.Controls.GetEnumerator())
            {
                while (true)
                {
                    if (!enumerator.MoveNext())
                    {
                        break;
                    }
                    foreach (Control control in ((Control) enumerator.Current).Controls)
                    {
                        string name;
                        uint num;
                        if (control is GroupBox)
                        {
                            using (IEnumerator enumerator3 = control.Controls.GetEnumerator())
                            {
                                Control current;
                                goto TR_00DD;
                            TR_000D:
                                current.Text = "TargetV";
                                goto TR_00DD;
                            TR_0010:
                                current.Text = "PresentV";
                                goto TR_00DD;
                            TR_0013:
                                current.Text = "K_val";
                                goto TR_00DD;
                            TR_0070:
                                current.Text = "PresentT";
                                goto TR_00DD;
                            TR_0072:
                                current.Text = "TargetT";
                                goto TR_00DD;
                            TR_0075:
                                current.Text = "PresentI";
                                goto TR_00DD;
                            TR_007E:
                                current.Text = "TargetI";
                                goto TR_00DD;
                            TR_00A7:
                                current.Text = "Calculate";
                                goto TR_00DD;
                            TR_00A8:
                                current.Text = "Write";
                            TR_00DD:
                                while (true)
                                {
                                    if (enumerator3.MoveNext())
                                    {
                                        current = (Control) enumerator3.Current;
                                        if (!(current is Label))
                                        {
                                            if (!(current is Button))
                                            {
                                                continue;
                                            }
                                            name = current.Name;
                                            num = <PrivateImplementationDetails>.ComputeStringHash(name);
                                            if (num > 0x8b86399d)
                                            {
                                                if (num > 0xc3476e9f)
                                                {
                                                    if (num > 0xc8998b3c)
                                                    {
                                                        if (num == 0xc9998ccf)
                                                        {
                                                            if (name != "button_calc_temp3")
                                                            {
                                                                goto TR_00A8;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (num == 0xcb998ff5)
                                                            {
                                                                if (name == "button_calc_temp1")
                                                                {
                                                                    goto TR_00A7;
                                                                }
                                                            }
                                                            else if ((num == 0xfed4f9cb) && (name == "button_calc_tempmos"))
                                                            {
                                                                goto TR_00A7;
                                                            }
                                                            goto TR_00A8;
                                                        }
                                                        goto TR_00A7;
                                                    }
                                                    else
                                                    {
                                                        if (num == 0xc4477032)
                                                        {
                                                            if (name != "button_calc_cell11")
                                                            {
                                                                goto TR_00A8;
                                                            }
                                                        }
                                                        else if (num == 0xc54771c5)
                                                        {
                                                            if (name != "button_calc_cell10")
                                                            {
                                                                goto TR_00A8;
                                                            }
                                                        }
                                                        else if ((num != 0xc8998b3c) || (name != "button_calc_temp2"))
                                                        {
                                                            goto TR_00A8;
                                                        }
                                                        goto TR_00A7;
                                                    }
                                                }
                                                else if (num > 0xc04769e6)
                                                {
                                                    if (num == 0xc1476b79)
                                                    {
                                                        if (name == "button_calc_cell14")
                                                        {
                                                            goto TR_00A7;
                                                        }
                                                    }
                                                    else if (num == 0xc2476d0c)
                                                    {
                                                        if (name == "button_calc_cell13")
                                                        {
                                                            goto TR_00A7;
                                                        }
                                                    }
                                                    else if ((num == 0xc3476e9f) && (name == "button_calc_cell12"))
                                                    {
                                                        goto TR_00A7;
                                                    }
                                                }
                                                else if (num == 0x8d179db9)
                                                {
                                                    if (name == "button_calc_tempenv")
                                                    {
                                                        goto TR_00A7;
                                                    }
                                                }
                                                else
                                                {
                                                    if (num == 0xbf476853)
                                                    {
                                                        if (name != "button_calc_cell16")
                                                        {
                                                            goto TR_00A8;
                                                        }
                                                    }
                                                    else if ((num != 0xc04769e6) || (name != "button_calc_cell15"))
                                                    {
                                                        goto TR_00A8;
                                                    }
                                                    goto TR_00A7;
                                                }
                                            }
                                            else
                                            {
                                                if (num > 0x84862e98)
                                                {
                                                    if (num > 0x87863351)
                                                    {
                                                        if (num == 0x89863677)
                                                        {
                                                            if (name == "button_calc_cell1")
                                                            {
                                                                goto TR_00A7;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (num == 0x8a86380a)
                                                            {
                                                                if (name != "button_calc_cell2")
                                                                {
                                                                    goto TR_00A8;
                                                                }
                                                            }
                                                            else if ((num != 0x8b86399d) || (name != "button_calc_cell3"))
                                                            {
                                                                goto TR_00A8;
                                                            }
                                                            goto TR_00A7;
                                                        }
                                                        goto TR_00A8;
                                                    }
                                                    else
                                                    {
                                                        if (num == 0x8586302b)
                                                        {
                                                            if (name == "button_calc_cell5")
                                                            {
                                                                goto TR_00A7;
                                                            }
                                                        }
                                                        else if (num == 0x868631be)
                                                        {
                                                            if (name == "button_calc_cell6")
                                                            {
                                                                goto TR_00A7;
                                                            }
                                                        }
                                                        else if ((num == 0x87863351) && (name == "button_calc_cell7"))
                                                        {
                                                            goto TR_00A7;
                                                        }
                                                        goto TR_00A8;
                                                    }
                                                }
                                                else if (num > 0x4beb5567)
                                                {
                                                    if (num == 0x8086284c)
                                                    {
                                                        if (name != "button_calc_cell8")
                                                        {
                                                            goto TR_00A8;
                                                        }
                                                    }
                                                    else if (num == 0x818629df)
                                                    {
                                                        if (name != "button_calc_cell9")
                                                        {
                                                            goto TR_00A8;
                                                        }
                                                    }
                                                    else if ((num != 0x84862e98) || (name != "button_calc_cell4"))
                                                    {
                                                        goto TR_00A8;
                                                    }
                                                }
                                                else if (num == 0xec9e563)
                                                {
                                                    if (name != "button_calc_all")
                                                    {
                                                        goto TR_00A8;
                                                    }
                                                }
                                                else
                                                {
                                                    if (num == 0x215ee525)
                                                    {
                                                        if (name == "button_calc_Ichg")
                                                        {
                                                            goto TR_00A7;
                                                        }
                                                    }
                                                    else if ((num == 0x4beb5567) && (name == "button_calc_Idsg"))
                                                    {
                                                        goto TR_00A7;
                                                    }
                                                    goto TR_00A8;
                                                }
                                                goto TR_00A7;
                                            }
                                            goto TR_00A8;
                                        }
                                        else
                                        {
                                            name = current.Name;
                                            num = <PrivateImplementationDetails>.ComputeStringHash(name);
                                            if (num > 0x920ce001)
                                            {
                                                if (num > 0xd30b6b60)
                                                {
                                                    if (num > 0xd80b733f)
                                                    {
                                                        if (num > 0xe10b816a)
                                                        {
                                                            if (num > 0xe210002b)
                                                            {
                                                                if (num == 0xe4100351)
                                                                {
                                                                    if (name == "label226")
                                                                    {
                                                                        goto TR_0013;
                                                                    }
                                                                }
                                                                else if (num == 0xe710080a)
                                                                {
                                                                    if (name == "label223")
                                                                    {
                                                                        goto TR_000D;
                                                                    }
                                                                }
                                                                else if ((num == 0xe810099d) && (name == "label222"))
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if (num == 0xe20b82fd)
                                                            {
                                                                if (name == "label208")
                                                                {
                                                                    goto TR_0072;
                                                                }
                                                            }
                                                            else if ((num == 0xe210002b) && (name == "label224"))
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if (num > 0xda0b7665)
                                                        {
                                                            if (num == 0xdc093af4)
                                                            {
                                                                if (name == "label218")
                                                                {
                                                                    goto TR_0010;
                                                                }
                                                            }
                                                            else if ((num == 0xe10b816a) && (name == "label209"))
                                                            {
                                                                goto TR_0070;
                                                            }
                                                        }
                                                        else if (num == 0xd90b74d2)
                                                        {
                                                            if (name == "label201")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0xda0b7665) && (name == "label200"))
                                                        {
                                                            goto TR_000D;
                                                        }
                                                    }
                                                    else if (num > 0xd50b6e86)
                                                    {
                                                        if (num > 0xd60b7019)
                                                        {
                                                            if (num == 0xd7093315)
                                                            {
                                                                if (name == "label213")
                                                                {
                                                                    goto TR_0070;
                                                                }
                                                            }
                                                            else if (num != 0xd70b71ac)
                                                            {
                                                                if ((num == 0xd80b733f) && (name == "label202"))
                                                                {
                                                                    current.Text = "TargetVafe";
                                                                    continue;
                                                                }
                                                            }
                                                            else if (name == "label203")
                                                            {
                                                                current.Text = "PresentVafe";
                                                                continue;
                                                            }
                                                        }
                                                        else if (num == 0xd6093182)
                                                        {
                                                            if (name == "label212")
                                                            {
                                                                goto TR_0072;
                                                            }
                                                        }
                                                        else if ((num == 0xd60b7019) && (name == "label204"))
                                                        {
                                                            goto TR_007E;
                                                        }
                                                    }
                                                    else if (num > 0xd40b6cf3)
                                                    {
                                                        if (num == 0xd5092fef)
                                                        {
                                                            if (name == "label211")
                                                            {
                                                                goto TR_0070;
                                                            }
                                                        }
                                                        else if ((num == 0xd50b6e86) && (name == "label205"))
                                                        {
                                                            goto TR_0075;
                                                        }
                                                    }
                                                    else if (num == 0xd4092e5c)
                                                    {
                                                        if (name == "label210")
                                                        {
                                                            goto TR_0072;
                                                        }
                                                    }
                                                    else if ((num == 0xd40b6cf3) && (name == "label206"))
                                                    {
                                                        goto TR_007E;
                                                    }
                                                }
                                                else if (num > 0x9dd47487)
                                                {
                                                    if (num > 0xa1d6b96a)
                                                    {
                                                        if (num > 0xd10929a3)
                                                        {
                                                            if (num == 0xd2092b36)
                                                            {
                                                                if (name == "label216")
                                                                {
                                                                    goto TR_0072;
                                                                }
                                                            }
                                                            else if (num == 0xd3092cc9)
                                                            {
                                                                if (name == "label217")
                                                                {
                                                                    goto TR_0070;
                                                                }
                                                            }
                                                            else if ((num == 0xd30b6b60) && (name == "label207"))
                                                            {
                                                                goto TR_0075;
                                                            }
                                                        }
                                                        else if (num == 0xd0092810)
                                                        {
                                                            if (name == "label214")
                                                            {
                                                                goto TR_0072;
                                                            }
                                                        }
                                                        else if ((num == 0xd10929a3) && (name == "label215"))
                                                        {
                                                            goto TR_0070;
                                                        }
                                                    }
                                                    else if (num > 0x9e0ab44e)
                                                    {
                                                        if (num == 0x9fd6b644)
                                                        {
                                                            if (name == "label83")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0xa1d6b96a) && (name == "label81"))
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if (num == 0x9dd6b31e)
                                                    {
                                                        if (name == "label85")
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if ((num == 0x9e0ab44e) && (name == "label115"))
                                                    {
                                                        goto TR_0013;
                                                    }
                                                }
                                                else if (num > 0x961bf0d7)
                                                {
                                                    if (num > 0x9a1e35ba)
                                                    {
                                                        if (num == 0x9b1e374d)
                                                        {
                                                            if (name == "label198")
                                                            {
                                                                goto TR_000D;
                                                            }
                                                        }
                                                        else if (num == 0x9bd6aff8)
                                                        {
                                                            if (name == "label87")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0x9dd47487) && (name == "label91"))
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if (num == 0x99d6acd2)
                                                    {
                                                        if (name == "label89")
                                                        {
                                                            goto TR_0013;
                                                        }
                                                    }
                                                    else if ((num == 0x9a1e35ba) && (name == "label199"))
                                                    {
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if (num > 0x931e2ab5)
                                                {
                                                    if (num == 0x951bef44)
                                                    {
                                                        if (name == "label188")
                                                        {
                                                            goto TR_000D;
                                                        }
                                                    }
                                                    else if ((num == 0x961bf0d7) && (name == "label189"))
                                                    {
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if (num == 0x921e2922)
                                                {
                                                    if (name == "label191")
                                                    {
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if ((num == 0x931e2ab5) && (name == "label190"))
                                                {
                                                    goto TR_000D;
                                                }
                                            }
                                            else
                                            {
                                                if (num > 0x8ae59fbf)
                                                {
                                                    if (num > 0x8e0f184c)
                                                    {
                                                        if (num > 0x8f1be5d2)
                                                        {
                                                            if (num > 0x901be765)
                                                            {
                                                                if (num == 0x901e25fc)
                                                                {
                                                                    if (name == "label193")
                                                                    {
                                                                        goto TR_0010;
                                                                    }
                                                                }
                                                                else if (num == 0x911e278f)
                                                                {
                                                                    if (name == "label192")
                                                                    {
                                                                        goto TR_000D;
                                                                    }
                                                                }
                                                                else if ((num == 0x920ce001) && (name == "label129"))
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if (num == 0x8f1e2469)
                                                            {
                                                                if (name == "label194")
                                                                {
                                                                    goto TR_000D;
                                                                }
                                                            }
                                                            else if ((num == 0x901be765) && (name == "label183"))
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if (num > 0x8e1e22d6)
                                                        {
                                                            if (num == 0x8ee5a60b)
                                                            {
                                                                if (name == "label68")
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if ((num == 0x8f1be5d2) && (name == "label182"))
                                                            {
                                                                goto TR_000D;
                                                            }
                                                        }
                                                        else if (num == 0x8e1be43f)
                                                        {
                                                            if (name == "label181")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0x8e1e22d6) && (name == "label195"))
                                                        {
                                                            goto TR_0010;
                                                        }
                                                        break;
                                                    }
                                                    else if (num > 0x8c1e1fb0)
                                                    {
                                                        if (num > 0x8d1be2ac)
                                                        {
                                                            if (num == 0x8d1e2143)
                                                            {
                                                                if (name == "label196")
                                                                {
                                                                    goto TR_000D;
                                                                }
                                                            }
                                                            else if (num == 0x8e0cd9b5)
                                                            {
                                                                if (name == "label125")
                                                                {
                                                                    goto TR_0013;
                                                                }
                                                            }
                                                            else if ((num == 0x8e0f184c) && (name == "label131"))
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if (num == 0x8ce5a2e5)
                                                        {
                                                            if (name == "label66")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0x8d1be2ac) && (name == "label180"))
                                                        {
                                                            goto TR_000D;
                                                        }
                                                        break;
                                                    }
                                                    else if (num > 0x8c0cd68f)
                                                    {
                                                        if (num == 0x8c1be119)
                                                        {
                                                            if (name == "label187")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0x8c1e1fb0) && (name == "label197"))
                                                        {
                                                            goto TR_0010;
                                                        }
                                                        break;
                                                    }
                                                    else if (num == 0x8b1bdf86)
                                                    {
                                                        if (name != "label186")
                                                        {
                                                            break;
                                                        }
                                                        goto TR_000D;
                                                    }
                                                    else if ((num != 0x8c0cd68f) || (name != "label127"))
                                                    {
                                                        break;
                                                    }
                                                }
                                                else if (num > 0x1bed3fc7)
                                                {
                                                    if (num > 0x1fe2b8b7)
                                                    {
                                                        if (num > 0x88e59c99)
                                                        {
                                                            if (num == 0x891bdc60)
                                                            {
                                                                if (name != "label184")
                                                                {
                                                                    break;
                                                                }
                                                                goto TR_000D;
                                                            }
                                                            else if (num == 0x8a1bddf3)
                                                            {
                                                                if (name != "label185")
                                                                {
                                                                    break;
                                                                }
                                                                goto TR_0010;
                                                            }
                                                            else if ((num != 0x8ae59fbf) || (name != "label64"))
                                                            {
                                                                break;
                                                            }
                                                            goto TR_0013;
                                                        }
                                                        else
                                                        {
                                                            if (num != 0x21e2bbdd)
                                                            {
                                                                if ((num != 0x88e59c99) || (name != "label62"))
                                                                {
                                                                    break;
                                                                }
                                                            }
                                                            else if (name != "label71")
                                                            {
                                                                break;
                                                            }
                                                            goto TR_0013;
                                                        }
                                                        break;
                                                    }
                                                    else if (num > 0x1d056c0d)
                                                    {
                                                        if (num == 0x1de2b591)
                                                        {
                                                            if (name == "label75")
                                                            {
                                                                goto TR_0013;
                                                            }
                                                        }
                                                        else if ((num == 0x1fe2b8b7) && (name == "label73"))
                                                        {
                                                            goto TR_0013;
                                                        }
                                                        break;
                                                    }
                                                    else
                                                    {
                                                        if (num == 0x1c056a7a)
                                                        {
                                                            if (name == "label177")
                                                            {
                                                                goto TR_0010;
                                                            }
                                                        }
                                                        else if ((num == 0x1d056c0d) && (name == "label176"))
                                                        {
                                                            goto TR_000D;
                                                        }
                                                        break;
                                                    }
                                                }
                                                else if (num > 0x19e2af45)
                                                {
                                                    if (num > 0x1a056754)
                                                    {
                                                        if (num == 0x1b0568e7)
                                                        {
                                                            if (name != "label174")
                                                            {
                                                                break;
                                                            }
                                                            goto TR_000D;
                                                        }
                                                        else if (num != 0x1be2b26b)
                                                        {
                                                            if ((num != 0x1bed3fc7) || (name != "label37"))
                                                            {
                                                                break;
                                                            }
                                                        }
                                                        else if (name != "label77")
                                                        {
                                                            break;
                                                        }
                                                    }
                                                    else if (num == 0x19ed3ca1)
                                                    {
                                                        if (name != "label31")
                                                        {
                                                            break;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if ((num != 0x1a056754) || (name != "label175"))
                                                        {
                                                            break;
                                                        }
                                                        goto TR_0010;
                                                    }
                                                }
                                                else if (num > 0xf055603)
                                                {
                                                    if (num == 0x190565c1)
                                                    {
                                                        if (name == "label172")
                                                        {
                                                            goto TR_000D;
                                                        }
                                                    }
                                                    else if ((num == 0x19e2af45) && (name == "label79"))
                                                    {
                                                        goto TR_0013;
                                                    }
                                                    break;
                                                }
                                                else
                                                {
                                                    if (num == 0xe055470)
                                                    {
                                                        if (name == "label179")
                                                        {
                                                            goto TR_0010;
                                                        }
                                                    }
                                                    else if ((num == 0xf055603) && (name == "label178"))
                                                    {
                                                        goto TR_000D;
                                                    }
                                                    break;
                                                }
                                                goto TR_0013;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        continue;
                                    }
                                    break;
                                }
                                current.Text = "B_val";
                                goto TR_00DD;
                            }
                        }
                        name = control.Name;
                        num = <PrivateImplementationDetails>.ComputeStringHash(name);
                        if (num <= 0x53db3712)
                        {
                            if (num == 0x23a34f05)
                            {
                                if (name == "button_Other_read")
                                {
                                    control.Text = "I_Vall_Read";
                                    continue;
                                }
                            }
                            else if (num != 0x46036dcd)
                            {
                                if ((num == 0x53db3712) && (name == "button_read_all"))
                                {
                                    control.Text = "Vcell_Read";
                                    continue;
                                }
                            }
                            else if (name == "button_reset")
                            {
                                control.Text = "Vcell_Reset";
                                continue;
                            }
                        }
                        else if (num <= 0x8e9405c8)
                        {
                            if (num != 0x8a97ba7d)
                            {
                                if ((num == 0x8e9405c8) && (name == "button_temp_reset"))
                                {
                                    control.Text = "Temp_Reset";
                                    continue;
                                }
                            }
                            else if (name == "button_Idsg_reset")
                            {
                                control.Text = "Idsg_Reset";
                                continue;
                            }
                        }
                        else if (num != 0xa7dba1dd)
                        {
                            if ((num == 0xc6fdaecf) && (name == "button_Ichg_reset"))
                            {
                                control.Text = "Ichg_Reset";
                                continue;
                            }
                        }
                        else if (name == "button_temp_read")
                        {
                            control.Text = "Temp_Read";
                            continue;
                        }
                        control.Text = "CellAll_Reset";
                    }
                }
            }
        }

        private void Button_Fault_Record_Clear_Click(object sender, EventArgs e)
        {
            this.textBox_Fault_Record1.Text = "NA";
            this.textBox_Fault_Record2.Text = "NA";
            this.textBox_Fault_Record3.Text = "NA";
            this.textBox_Fault_Record4.Text = "NA";
            this.textBox_Fault_Record5.Text = "NA";
            this.textBox_Fault_Record6.Text = "NA";
            this.textBox_Fault_Record7.Text = "NA";
            this.textBox_Fault_Record8.Text = "NA";
            this.textBox_Fault_Record9.Text = "NA";
            this.textBox_Fault_Record10.Text = "NA";
            this.label_Time_Fault_Record1.Text = "NA";
            this.label_Time_Fault_Record2.Text = "NA";
            this.label_Time_Fault_Record3.Text = "NA";
            this.label_Time_Fault_Record4.Text = "NA";
            this.label_Time_Fault_Record5.Text = "NA";
            this.label_Time_Fault_Record6.Text = "NA";
            this.label_Time_Fault_Record7.Text = "NA";
            this.label_Time_Fault_Record8.Text = "NA";
            this.label_Time_Fault_Record9.Text = "NA";
            this.label_Time_Fault_Record10.Text = "NA";
        }

        private void Button_Fault_Record_Read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_Fault_Record1.Text = "";
            this.textBox_Fault_Record2.Text = "";
            this.textBox_Fault_Record3.Text = "";
            this.textBox_Fault_Record4.Text = "";
            this.textBox_Fault_Record5.Text = "";
            this.textBox_Fault_Record6.Text = "";
            this.textBox_Fault_Record7.Text = "";
            this.textBox_Fault_Record8.Text = "";
            this.textBox_Fault_Record9.Text = "";
            this.textBox_Fault_Record10.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0xc001;
                    this.u16Rs485RegNum = 70;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Heat_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_Heat_DSGhigh.Text = "";
            this.textBox_Heat_DSGlow.Text = "";
            this.textBox_Heat_CHGhigh.Text = "";
            this.textBox_Heat_CHGlow.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2308;
                    this.u16Rs485RegNum = 8;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Heat_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_Heat_DSGhigh.Text == "") || ((this.textBox_Heat_DSGlow.Text == "") || ((this.textBox_Heat_CHGhigh.Text == "") || ((this.textBox_Heat_CHGlow.Text == "") || ((this.textBox_Cool_DSGhigh.Text == "") || ((this.textBox_Cool_DSGlow.Text == "") || ((this.textBox_Cool_CHGhigh.Text == "") || (this.textBox_Cool_CHGlow.Text == ""))))))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_Heat_DSGhigh.Text);
                float num2 = float.Parse(this.textBox_Heat_DSGlow.Text);
                float num3 = float.Parse(this.textBox_Heat_CHGhigh.Text);
                float num4 = float.Parse(this.textBox_Heat_CHGlow.Text);
                float num5 = float.Parse(this.textBox_Cool_DSGhigh.Text);
                float num6 = float.Parse(this.textBox_Cool_DSGlow.Text);
                float num7 = float.Parse(this.textBox_Cool_CHGhigh.Text);
                float num8 = float.Parse(this.textBox_Cool_CHGlow.Text);
                if ((num > 160f) || (num < -40f))
                {
                    MessageBox.Show("放电加热打开高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num2 > 160f) || (num2 < -40f))
                {
                    MessageBox.Show("放电加热关闭低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num3 > 160f) || (num3 < -40f))
                {
                    MessageBox.Show("充电加热打开高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num4 > 160f) || (num4 < -40f))
                {
                    MessageBox.Show("充电加热关闭低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num5 > 160f) || (num5 < -40f))
                {
                    MessageBox.Show("放电制冷关闭高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num6 > 160f) || (num6 < -40f))
                {
                    MessageBox.Show("放电制冷开启低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num7 > 160f) || (num7 < -40f))
                {
                    MessageBox.Show("充电制冷关闭高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num8 > 160f) || (num8 < -40f))
                {
                    MessageBox.Show("充电制冷开启低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num9 = (ushort) ((float.Parse(this.textBox_Heat_DSGhigh.Text) + 40f) * 10f);
                    ushort num10 = (ushort) ((float.Parse(this.textBox_Heat_DSGlow.Text) + 40f) * 10f);
                    ushort num11 = (ushort) ((float.Parse(this.textBox_Heat_CHGhigh.Text) + 40f) * 10f);
                    ushort num12 = (ushort) ((float.Parse(this.textBox_Heat_CHGlow.Text) + 40f) * 10f);
                    ushort num13 = (ushort) ((float.Parse(this.textBox_Cool_DSGhigh.Text) + 40f) * 10f);
                    ushort num14 = (ushort) ((float.Parse(this.textBox_Cool_DSGlow.Text) + 40f) * 10f);
                    ushort num15 = (ushort) ((float.Parse(this.textBox_Cool_CHGhigh.Text) + 40f) * 10f);
                    ushort num16 = (ushort) ((float.Parse(this.textBox_Cool_CHGlow.Text) + 40f) * 10f);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x2308;
                        this.u16Rs485RegNum = 8;
                        this.bRs485ByteNum = 0x10;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num18 = (byte) (index + 1);
                        data[num18] = this.bRs485FunCmd;
                        byte num19 = (byte) (num18 + 1);
                        data[num19] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num20 = (byte) (num19 + 1);
                        data[num20] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num21 = (byte) (num20 + 1);
                        data[num21] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num22 = (byte) (num21 + 1);
                        data[num22] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num23 = (byte) (num22 + 1);
                        data[num23] = this.bRs485ByteNum;
                        byte num24 = (byte) (num23 + 1);
                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                        byte num25 = (byte) (num24 + 1);
                        data[num25] = (byte) (num9 & 0xff);
                        byte num26 = (byte) (num25 + 1);
                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                        byte num27 = (byte) (num26 + 1);
                        data[num27] = (byte) (num10 & 0xff);
                        byte num28 = (byte) (num27 + 1);
                        data[num28] = (byte) ((num11 >> 8) & 0xff);
                        byte num29 = (byte) (num28 + 1);
                        data[num29] = (byte) (num11 & 0xff);
                        byte num30 = (byte) (num29 + 1);
                        data[num30] = (byte) ((num12 >> 8) & 0xff);
                        byte num31 = (byte) (num30 + 1);
                        data[num31] = (byte) (num12 & 0xff);
                        byte num32 = (byte) (num31 + 1);
                        data[num32] = (byte) ((num13 >> 8) & 0xff);
                        byte num33 = (byte) (num32 + 1);
                        data[num33] = (byte) (num13 & 0xff);
                        byte num34 = (byte) (num33 + 1);
                        data[num34] = (byte) ((num14 >> 8) & 0xff);
                        byte num35 = (byte) (num34 + 1);
                        data[num35] = (byte) (num14 & 0xff);
                        byte num36 = (byte) (num35 + 1);
                        data[num36] = (byte) ((num15 >> 8) & 0xff);
                        byte num37 = (byte) (num36 + 1);
                        data[num37] = (byte) (num15 & 0xff);
                        byte num38 = (byte) (num37 + 1);
                        data[num38] = (byte) ((num16 >> 8) & 0xff);
                        byte num39 = (byte) (num38 + 1);
                        byte lenth = (byte) (num39 + 1);
                        data[num39] = (byte) (num16 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void button_HeatCool_Read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_HeatDSG_High.Text = "";
            this.textBox_HeatDSG_Low.Text = "";
            this.textBox_HeatCHG_High.Text = "";
            this.textBox_HeatCHG_Low.Text = "";
            this.textBox_HeatCur_Max.Text = "";
            this.textBox_HeatCur_Min.Text = "";
            this.textBox_HeatTime_Max.Text = "";
            this.textBox_Heat_Res1.Text = "";
            this.textBox_Heat_Res2.Text = "";
            this.textBox_Heat_Res3.Text = "";
            this.textBox_Heat_Res4.Text = "";
            this.textBox_Heat_Res5.Text = "";
            this.textBox_Heat_Res6.Text = "";
            this.textBox_CoolDSG_High.Text = "";
            this.textBox_CoolDSG_Low.Text = "";
            this.textBox_CoolCHG_High.Text = "";
            this.textBox_CoolCHG_Low.Text = "";
            this.textBox_CoolCur_Max.Text = "";
            this.textBox_CoolCur_Min.Text = "";
            this.textBox_CoolTime_Max.Text = "";
            this.textBox_Cool_Res1.Text = "";
            this.textBox_Cool_Res2.Text = "";
            this.textBox_Cool_Res3.Text = "";
            this.textBox_Cool_Res4.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2320;
                    this.u16Rs485RegNum = 0x18;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_HeatCool_Reset_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1004;
                    this.u16Rs485RegData = 1;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_HeatCool_Set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[100];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_HeatDSG_High.Text == "") || ((this.textBox_HeatDSG_Low.Text == "") || ((this.textBox_HeatCHG_High.Text == "") || ((this.textBox_HeatCHG_Low.Text == "") || ((this.textBox_HeatCur_Max.Text == "") || ((this.textBox_HeatCur_Min.Text == "") || ((this.textBox_HeatTime_Max.Text == "") || ((this.textBox_Heat_Res1.Text == "") || ((this.textBox_Heat_Res2.Text == "") || ((this.textBox_Heat_Res3.Text == "") || ((this.textBox_Heat_Res4.Text == "") || ((this.textBox_Heat_Res5.Text == "") || ((this.textBox_Heat_Res6.Text == "") || ((this.textBox_CoolDSG_High.Text == "") || ((this.textBox_CoolDSG_Low.Text == "") || ((this.textBox_CoolCHG_High.Text == "") || ((this.textBox_CoolCHG_Low.Text == "") || ((this.textBox_CoolCur_Max.Text == "") || ((this.textBox_CoolCur_Min.Text == "") || ((this.textBox_CoolTime_Max.Text == "") || ((this.textBox_Cool_Res1.Text == "") || ((this.textBox_Cool_Res2.Text == "") || ((this.textBox_Cool_Res3.Text == "") || (this.textBox_Cool_Res4.Text == ""))))))))))))))))))))))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_HeatDSG_High.Text);
                float num2 = float.Parse(this.textBox_HeatDSG_Low.Text);
                float num3 = float.Parse(this.textBox_HeatCHG_High.Text);
                float num4 = float.Parse(this.textBox_HeatCHG_Low.Text);
                float num5 = float.Parse(this.textBox_HeatCur_Max.Text);
                float num6 = float.Parse(this.textBox_HeatCur_Min.Text);
                float num7 = float.Parse(this.textBox_HeatTime_Max.Text);
                float num8 = float.Parse(this.textBox_Heat_Res1.Text);
                float num9 = float.Parse(this.textBox_Heat_Res2.Text);
                float num10 = float.Parse(this.textBox_Heat_Res3.Text);
                float num11 = float.Parse(this.textBox_Heat_Res4.Text);
                float num12 = float.Parse(this.textBox_Heat_Res5.Text);
                float num13 = float.Parse(this.textBox_Heat_Res6.Text);
                float num14 = float.Parse(this.textBox_CoolDSG_High.Text);
                float num15 = float.Parse(this.textBox_CoolDSG_Low.Text);
                float num16 = float.Parse(this.textBox_CoolCHG_High.Text);
                float num17 = float.Parse(this.textBox_CoolCHG_Low.Text);
                float num18 = float.Parse(this.textBox_CoolCur_Max.Text);
                float num19 = float.Parse(this.textBox_CoolCur_Min.Text);
                float num20 = float.Parse(this.textBox_CoolTime_Max.Text);
                float num21 = float.Parse(this.textBox_Cool_Res1.Text);
                float num22 = float.Parse(this.textBox_Cool_Res2.Text);
                float num23 = float.Parse(this.textBox_Cool_Res3.Text);
                float num24 = float.Parse(this.textBox_Cool_Res4.Text);
                if ((num > 160f) || (num < -40f))
                {
                    MessageBox.Show("放电加热关闭高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num2 > 160f) || (num2 < -40f))
                {
                    MessageBox.Show("放电加热开启低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num3 > 160f) || (num3 < -40f))
                {
                    MessageBox.Show("充电加热关闭高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num4 > 160f) || (num4 < -40f))
                {
                    MessageBox.Show("充电加热开启低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num5 > 50f) || (num5 < 0f))
                {
                    MessageBox.Show("加热最大电流范围为0 - 50A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num6 > 50f) || (num6 < 0f))
                {
                    MessageBox.Show("加热最小电流范围为0 - 50A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num7 > 65000f) || (num7 < 0f))
                {
                    MessageBox.Show("加热最大时间范围为0 - 65000Min，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num8 > 65000f) || ((num8 < 0f) || ((num9 > 65000f) || ((num9 < 0f) || ((num10 > 65000f) || ((num10 < 0f) || ((num11 > 65000f) || ((num11 < 0f) || ((num12 > 65000f) || ((num12 < 0f) || ((num13 > 65000f) || (num13 < 0f))))))))))))
                {
                    MessageBox.Show("保留位范围为0 - 65000，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num14 > 160f) || (num14 < -40f))
                {
                    MessageBox.Show("放电制冷开启高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num15 > 160f) || (num15 < -40f))
                {
                    MessageBox.Show("放电制冷关闭低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num16 > 160f) || (num16 < -40f))
                {
                    MessageBox.Show("充电制冷开启高温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num17 > 160f) || (num17 < -40f))
                {
                    MessageBox.Show("充电制冷关闭低温范围为 -40 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num18 > 50f) || (num18 < 0f))
                {
                    MessageBox.Show("制冷最大电流范围为0 - 50A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num19 > 50f) || (num19 < 0f))
                {
                    MessageBox.Show("制冷最小电流范围为0 - 50A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num20 > 65000f) || (num20 < 0f))
                {
                    MessageBox.Show("制冷最大时间范围为0 - 65000Min，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num21 > 65000f) || ((num21 < 0f) || ((num22 > 65000f) || ((num22 < 0f) || ((num23 > 65000f) || ((num23 < 0f) || ((num24 > 65000f) || (num24 < 0f))))))))
                {
                    MessageBox.Show("保留位范围为0 - 65000，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num25 = (ushort) ((float.Parse(this.textBox_HeatDSG_High.Text) + 40f) * 10f);
                    ushort num26 = (ushort) ((float.Parse(this.textBox_HeatDSG_Low.Text) + 40f) * 10f);
                    ushort num27 = (ushort) ((float.Parse(this.textBox_HeatCHG_High.Text) + 40f) * 10f);
                    ushort num28 = (ushort) ((float.Parse(this.textBox_HeatCHG_Low.Text) + 40f) * 10f);
                    ushort num29 = (ushort) (float.Parse(this.textBox_HeatCur_Max.Text) * 10f);
                    ushort num30 = (ushort) (float.Parse(this.textBox_HeatCur_Min.Text) * 10f);
                    ushort num31 = (ushort) float.Parse(this.textBox_HeatTime_Max.Text);
                    ushort num32 = (ushort) float.Parse(this.textBox_Heat_Res1.Text);
                    ushort num33 = (ushort) float.Parse(this.textBox_Heat_Res2.Text);
                    ushort num34 = (ushort) float.Parse(this.textBox_Heat_Res3.Text);
                    ushort num35 = (ushort) float.Parse(this.textBox_Heat_Res4.Text);
                    ushort num36 = (ushort) float.Parse(this.textBox_Heat_Res5.Text);
                    ushort num37 = (ushort) float.Parse(this.textBox_Heat_Res6.Text);
                    ushort num38 = (ushort) ((float.Parse(this.textBox_CoolDSG_High.Text) + 40f) * 10f);
                    ushort num39 = (ushort) ((float.Parse(this.textBox_CoolDSG_Low.Text) + 40f) * 10f);
                    ushort num40 = (ushort) ((float.Parse(this.textBox_CoolCHG_High.Text) + 40f) * 10f);
                    ushort num41 = (ushort) ((float.Parse(this.textBox_CoolCHG_Low.Text) + 40f) * 10f);
                    ushort num42 = (ushort) (float.Parse(this.textBox_CoolCur_Max.Text) * 10f);
                    ushort num43 = (ushort) (float.Parse(this.textBox_CoolCur_Min.Text) * 10f);
                    ushort num44 = (ushort) float.Parse(this.textBox_CoolTime_Max.Text);
                    ushort num45 = (ushort) float.Parse(this.textBox_Cool_Res1.Text);
                    ushort num46 = (ushort) float.Parse(this.textBox_Cool_Res2.Text);
                    ushort num47 = (ushort) float.Parse(this.textBox_Cool_Res3.Text);
                    ushort num48 = (ushort) float.Parse(this.textBox_Cool_Res4.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x2320;
                        this.u16Rs485RegNum = 0x18;
                        this.bRs485ByteNum = 0x30;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num50 = (byte) (index + 1);
                        data[num50] = this.bRs485FunCmd;
                        byte num51 = (byte) (num50 + 1);
                        data[num51] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num52 = (byte) (num51 + 1);
                        data[num52] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num53 = (byte) (num52 + 1);
                        data[num53] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num54 = (byte) (num53 + 1);
                        data[num54] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num55 = (byte) (num54 + 1);
                        data[num55] = this.bRs485ByteNum;
                        byte num56 = (byte) (num55 + 1);
                        data[num56] = (byte) ((num25 >> 8) & 0xff);
                        byte num57 = (byte) (num56 + 1);
                        data[num57] = (byte) (num25 & 0xff);
                        byte num58 = (byte) (num57 + 1);
                        data[num58] = (byte) ((num26 >> 8) & 0xff);
                        byte num59 = (byte) (num58 + 1);
                        data[num59] = (byte) (num26 & 0xff);
                        byte num60 = (byte) (num59 + 1);
                        data[num60] = (byte) ((num27 >> 8) & 0xff);
                        byte num61 = (byte) (num60 + 1);
                        data[num61] = (byte) (num27 & 0xff);
                        byte num62 = (byte) (num61 + 1);
                        data[num62] = (byte) ((num28 >> 8) & 0xff);
                        byte num63 = (byte) (num62 + 1);
                        data[num63] = (byte) (num28 & 0xff);
                        byte num64 = (byte) (num63 + 1);
                        data[num64] = (byte) ((num29 >> 8) & 0xff);
                        byte num65 = (byte) (num64 + 1);
                        data[num65] = (byte) (num29 & 0xff);
                        byte num66 = (byte) (num65 + 1);
                        data[num66] = (byte) ((num30 >> 8) & 0xff);
                        byte num67 = (byte) (num66 + 1);
                        data[num67] = (byte) (num30 & 0xff);
                        byte num68 = (byte) (num67 + 1);
                        data[num68] = (byte) ((num31 >> 8) & 0xff);
                        byte num69 = (byte) (num68 + 1);
                        data[num69] = (byte) (num31 & 0xff);
                        byte num70 = (byte) (num69 + 1);
                        data[num70] = (byte) ((num32 >> 8) & 0xff);
                        byte num71 = (byte) (num70 + 1);
                        data[num71] = (byte) (num32 & 0xff);
                        byte num72 = (byte) (num71 + 1);
                        data[num72] = (byte) ((num33 >> 8) & 0xff);
                        byte num73 = (byte) (num72 + 1);
                        data[num73] = (byte) (num33 & 0xff);
                        byte num74 = (byte) (num73 + 1);
                        data[num74] = (byte) ((num34 >> 8) & 0xff);
                        byte num75 = (byte) (num74 + 1);
                        data[num75] = (byte) (num34 & 0xff);
                        byte num76 = (byte) (num75 + 1);
                        data[num76] = (byte) ((num35 >> 8) & 0xff);
                        byte num77 = (byte) (num76 + 1);
                        data[num77] = (byte) (num35 & 0xff);
                        byte num78 = (byte) (num77 + 1);
                        data[num78] = (byte) ((num36 >> 8) & 0xff);
                        byte num79 = (byte) (num78 + 1);
                        data[num79] = (byte) (num36 & 0xff);
                        byte num80 = (byte) (num79 + 1);
                        data[num80] = (byte) ((num37 >> 8) & 0xff);
                        byte num81 = (byte) (num80 + 1);
                        data[num81] = (byte) (num37 & 0xff);
                        byte num82 = (byte) (num81 + 1);
                        data[num82] = (byte) ((num38 >> 8) & 0xff);
                        byte num83 = (byte) (num82 + 1);
                        data[num83] = (byte) (num38 & 0xff);
                        byte num84 = (byte) (num83 + 1);
                        data[num84] = (byte) ((num39 >> 8) & 0xff);
                        byte num85 = (byte) (num84 + 1);
                        data[num85] = (byte) (num39 & 0xff);
                        byte num86 = (byte) (num85 + 1);
                        data[num86] = (byte) ((num40 >> 8) & 0xff);
                        byte num87 = (byte) (num86 + 1);
                        data[num87] = (byte) (num40 & 0xff);
                        byte num88 = (byte) (num87 + 1);
                        data[num88] = (byte) ((num41 >> 8) & 0xff);
                        byte num89 = (byte) (num88 + 1);
                        data[num89] = (byte) (num41 & 0xff);
                        byte num90 = (byte) (num89 + 1);
                        data[num90] = (byte) ((num42 >> 8) & 0xff);
                        byte num91 = (byte) (num90 + 1);
                        data[num91] = (byte) (num42 & 0xff);
                        byte num92 = (byte) (num91 + 1);
                        data[num92] = (byte) ((num43 >> 8) & 0xff);
                        byte num93 = (byte) (num92 + 1);
                        data[num93] = (byte) (num43 & 0xff);
                        byte num94 = (byte) (num93 + 1);
                        data[num94] = (byte) ((num44 >> 8) & 0xff);
                        byte num95 = (byte) (num94 + 1);
                        data[num95] = (byte) (num44 & 0xff);
                        byte num96 = (byte) (num95 + 1);
                        data[num96] = (byte) ((num45 >> 8) & 0xff);
                        byte num97 = (byte) (num96 + 1);
                        data[num97] = (byte) (num45 & 0xff);
                        byte num98 = (byte) (num97 + 1);
                        data[num98] = (byte) ((num46 >> 8) & 0xff);
                        byte num99 = (byte) (num98 + 1);
                        data[num99] = (byte) (num46 & 0xff);
                        byte num100 = (byte) (num99 + 1);
                        data[num100] = (byte) ((num47 >> 8) & 0xff);
                        byte num101 = (byte) (num100 + 1);
                        data[num101] = (byte) (num47 & 0xff);
                        byte num102 = (byte) (num101 + 1);
                        data[num102] = (byte) ((num48 >> 8) & 0xff);
                        byte num103 = (byte) (num102 + 1);
                        byte lenth = (byte) (num103 + 1);
                        data[num103] = (byte) (num48 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void button_Heated_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 6;
            this.System_Function_OFF_Call();
        }

        private void button_Heated_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 6;
            this.System_Function_ON_Call();
        }

        private void button_High_Switch1_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 1;
            this.Switch_High_Call();
        }

        private void button_High_Switch10_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 10;
            this.Switch_High_Call();
        }

        private void button_High_Switch11_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 11;
            this.Switch_High_Call();
        }

        private void button_High_Switch12_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 12;
            this.Switch_High_Call();
        }

        private void button_High_Switch13_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 13;
            this.Switch_High_Call();
        }

        private void button_High_Switch14_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 14;
            this.Switch_High_Call();
        }

        private void button_High_Switch15_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 15;
            this.Switch_High_Call();
        }

        private void button_High_Switch16_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x10;
            this.Switch_High_Call();
        }

        private void button_High_Switch17_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x11;
            this.Switch_High_Call();
        }

        private void button_High_Switch18_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x12;
            this.Switch_High_Call();
        }

        private void button_High_Switch19_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x13;
            this.Switch_High_Call();
        }

        private void button_High_Switch2_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 2;
            this.Switch_High_Call();
        }

        private void button_High_Switch20_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 20;
            this.Switch_High_Call();
        }

        private void button_High_Switch21_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x15;
            this.Switch_High_Call();
        }

        private void button_High_Switch22_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x16;
            this.Switch_High_Call();
        }

        private void button_High_Switch23_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x17;
            this.Switch_High_Call();
        }

        private void button_High_Switch24_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x18;
            this.Switch_High_Call();
        }

        private void button_High_Switch25_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x19;
            this.Switch_High_Call();
        }

        private void button_High_Switch26_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1a;
            this.Switch_High_Call();
        }

        private void button_High_Switch27_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1b;
            this.Switch_High_Call();
        }

        private void button_High_Switch28_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1c;
            this.Switch_High_Call();
        }

        private void button_High_Switch29_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1d;
            this.Switch_High_Call();
        }

        private void button_High_Switch3_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 3;
            this.Switch_High_Call();
        }

        private void button_High_Switch30_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 30;
            this.Switch_High_Call();
        }

        private void button_High_Switch31_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1f;
            this.Switch_High_Call();
        }

        private void button_High_Switch32_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x20;
            this.Switch_High_Call();
        }

        private void button_High_Switch4_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 4;
            this.Switch_High_Call();
        }

        private void button_High_Switch5_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 5;
            this.Switch_High_Call();
        }

        private void button_High_Switch6_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 6;
            this.Switch_High_Call();
        }

        private void button_High_Switch7_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 7;
            this.Switch_High_Call();
        }

        private void button_High_Switch8_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 8;
            this.Switch_High_Call();
        }

        private void button_High_Switch9_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 9;
            this.Switch_High_Call();
        }

        private void button_Ichg_reset_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1000;
                    this.u16Rs485RegData = 0x55b0;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_IchgOCP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_IchgOCP_First.Text == "") || ((this.textBox_IchgOCP_Second.Text == "") || ((this.textBox_IchgOCP_Third.Text == "") || ((this.textBox_IchgOCP_Rec.Text == "") || (this.textBox_IchgOCP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_IchgOCP_First.Text);
                if ((num > 5000f) || (num < 1f))
                {
                    MessageBox.Show("充电过流保护(一级)值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_IchgOCP_Second.Text);
                    if ((num2 > 5000f) || (num2 < 1f))
                    {
                        MessageBox.Show("充电过流保护(二级)值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_IchgOCP_Third.Text);
                        if ((num3 > 5000f) || (num3 < 1f))
                        {
                            MessageBox.Show("充电过流保护(三级)值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_IchgOCP_Rec.Text);
                            if ((num4 > 5000f) || (num4 < 1f))
                            {
                                MessageBox.Show("充电过流保护恢复值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_IchgOCP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 5000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) (float.Parse(this.textBox_IchgOCP_First.Text) * 10f);
                                    ushort num7 = (ushort) (float.Parse(this.textBox_IchgOCP_Second.Text) * 10f);
                                    ushort num8 = (ushort) (float.Parse(this.textBox_IchgOCP_Third.Text) * 10f);
                                    ushort num9 = (ushort) (float.Parse(this.textBox_IchgOCP_Rec.Text) * 10f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_IchgOCP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2114;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_Idsg_reset_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1000;
                    this.u16Rs485RegData = 0x55af;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_IdsgOCP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_IdsgOCP_First.Text == "") || ((this.textBox_IdsgOCP_Second.Text == "") || ((this.textBox_IdsgOCP_Third.Text == "") || ((this.textBox_IdsgOCP_Rec.Text == "") || (this.textBox_IdsgOCP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_IdsgOCP_First.Text);
                if ((num > 5000f) || (num < 1f))
                {
                    MessageBox.Show("充电过流保护(一级)值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_IdsgOCP_Second.Text);
                    if ((num2 > 5000f) || (num2 < 1f))
                    {
                        MessageBox.Show("充电过流保护(二级)值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_IdsgOCP_Third.Text);
                        if ((num3 > 5000f) || (num3 < 1f))
                        {
                            MessageBox.Show("充电过流保护(三级)值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_IdsgOCP_Rec.Text);
                            if ((num4 > 5000f) || (num4 < 1f))
                            {
                                MessageBox.Show("充电过流保护恢复值范围为1 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_IdsgOCP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) (float.Parse(this.textBox_IdsgOCP_First.Text) * 10f);
                                    ushort num7 = (ushort) (float.Parse(this.textBox_IdsgOCP_Second.Text) * 10f);
                                    ushort num8 = (ushort) (float.Parse(this.textBox_IdsgOCP_Third.Text) * 10f);
                                    ushort num9 = (ushort) (float.Parse(this.textBox_IdsgOCP_Rec.Text) * 10f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_IdsgOCP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2119;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_LogTimerStart_Click(object sender, EventArgs e)
        {
            int num = 0;
            try
            {
                num = Convert.ToInt32(this.textBox_LogTimer.Text);
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("日志记录间隔有误", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Log record interval Error!", "ErrorMessage！");
                }
                return;
            }
            if ((num < 1) || (num > 0xe10))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("日志记录时间间隔范围为 1 - 3600s，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Log record interval range is 1 - 3600s, and the data is out of bounds！", "Setting Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            object[] objArray1 = new object[11];
            objArray1[0] = "./";
            objArray1[1] = DateTime.Now.Month;
            objArray1[2] = "-";
            objArray1[3] = DateTime.Now.Day;
            objArray1[4] = "_";
            objArray1[5] = DateTime.Now.Hour;
            objArray1[6] = "-";
            objArray1[7] = DateTime.Now.Minute;
            objArray1[8] = "-";
            objArray1[9] = DateTime.Now.Second;
            objArray1[10] = "-log.csv";
            string str = string.Concat(objArray1);
            this.gsLogFilePath = str;
            try
            {
                StreamWriter writer = new StreamWriter(this.gsLogFilePath, true, Encoding.UTF8, 2);
                if (this.bIsEng == 0)
                {
                    writer.WriteLine(this.sLogName);
                }
                else
                {
                    writer.WriteLine(this.sLogNameEng);
                }
                writer.Flush();
                writer.Close();
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("日志文件异常", "错误提示！");
                }
                else
                {
                    MessageBox.Show("LogFile Error!", "ErrorMessage！");
                }
                return;
            }
            this.timer_Log.Interval = num * 0x3e8;
            this.timer_Log.Enabled = true;
            this.textBox_LogFileName.Text = str.Substring(2);
            if (this.bIsEng == 0)
            {
                MessageBox.Show("日志记录时间间隔设置成功，开始记录", "消息提示！");
            }
            else
            {
                MessageBox.Show("Log record interval set succeed，recording!", "Message！");
            }
        }

        private void button_LogTimerStop_Click(object sender, EventArgs e)
        {
            this.timer_Log.Enabled = false;
            if (this.bIsEng == 0)
            {
                MessageBox.Show("停止记录日志", "消息提示！");
            }
            else
            {
                MessageBox.Show("Log Recording Stopped!", "Message！");
            }
        }

        private void button_Low_Switch1_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 1;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch10_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 10;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch11_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 11;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch12_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 12;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch13_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 13;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch14_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 14;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch15_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 15;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch16_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x10;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch17_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x11;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch18_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x12;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch19_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x13;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch2_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 2;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch20_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 20;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch21_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x15;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch22_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x16;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch23_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x17;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch24_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x18;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch25_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x19;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch26_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1a;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch27_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1b;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch28_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1c;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch29_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1d;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch3_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 3;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch30_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 30;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch31_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x1f;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch32_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 0x20;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch4_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 4;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch5_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 5;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch6_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 6;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch7_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 7;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch8_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 8;
            this.Switch_Low_Call();
        }

        private void button_Low_Switch9_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 9;
            this.Switch_Low_Call();
        }

        private void button_MosRelay_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 3;
            this.System_Function_OFF_Call();
        }

        private void button_MosRelay_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 3;
            this.System_Function_ON_Call();
        }

        private void button_Protect_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2100;
                    this.u16Rs485RegNum = 0x41;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Protect_Reset_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1002;
                    this.u16Rs485RegData = 1;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_ProtectPresentClear_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1001;
                    this.u16Rs485RegData = 1;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_read_all_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_cail_cell1_k.Text = "";
            this.textBox_cail_cell1_b.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2000;
                    this.u16Rs485RegNum = 0x40;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Read_Vafe_bus_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_cail_AFE1_k.Text = "";
            this.textBox_cail_AFE1_b.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2040;
                    this.u16Rs485RegNum = 6;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Relay_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 4;
            this.System_Function_OFF_Call();
        }

        private void button_Relay_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 4;
            this.System_Function_ON_Call();
        }

        private void button_Reset_AFE1_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1000;
                    this.u16Rs485RegData = 0x55ab;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Reset_AFE2_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1000;
                    this.u16Rs485RegData = 0x55ac;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_reset_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1000;
                    this.u16Rs485RegData = 0x55aa;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Reset_Vbus_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1000;
                    this.u16Rs485RegData = 0x55ad;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_RTC_Read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_RTC_Time_Year.Text = "";
            this.textBox_RTC_Time_Month.Text = "";
            this.textBox_RTC_Time_Day.Text = "";
            this.textBox_RTC_Time_Hour.Text = "";
            this.textBox_RTC_Time_Minute.Text = "";
            this.textBox_RTC_Time_Second.Text = "";
            this.textBox_RTC_Alarm_Year.Text = "";
            this.textBox_RTC_Alarm_Month.Text = "";
            this.textBox_RTC_Alarm_Day.Text = "";
            this.textBox_RTC_Alarm_Hour.Text = "";
            this.textBox_RTC_Alarm_Minute.Text = "";
            this.textBox_RTC_Alarm_Second.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x224a;
                    this.u16Rs485RegNum = 12;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_RTC_Set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_RTC_Time_Year.Text == "") || ((this.textBox_RTC_Time_Month.Text == "") || ((this.textBox_RTC_Time_Day.Text == "") || ((this.textBox_RTC_Time_Hour.Text == "") || ((this.textBox_RTC_Time_Minute.Text == "") || ((this.textBox_RTC_Time_Second.Text == "") || ((this.textBox_RTC_Alarm_Year.Text == "") || ((this.textBox_RTC_Alarm_Month.Text == "") || ((this.textBox_RTC_Alarm_Day.Text == "") || ((this.textBox_RTC_Alarm_Hour.Text == "") || ((this.textBox_RTC_Alarm_Minute.Text == "") || (this.textBox_RTC_Alarm_Second.Text == ""))))))))))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_RTC_Time_Year.Text);
                float num2 = float.Parse(this.textBox_RTC_Time_Month.Text);
                float num3 = float.Parse(this.textBox_RTC_Time_Day.Text);
                float num4 = float.Parse(this.textBox_RTC_Time_Hour.Text);
                float num5 = float.Parse(this.textBox_RTC_Time_Minute.Text);
                float num6 = float.Parse(this.textBox_RTC_Time_Second.Text);
                float num7 = float.Parse(this.textBox_RTC_Alarm_Year.Text);
                float num8 = float.Parse(this.textBox_RTC_Alarm_Month.Text);
                float num9 = float.Parse(this.textBox_RTC_Alarm_Day.Text);
                float num10 = float.Parse(this.textBox_RTC_Alarm_Hour.Text);
                float num11 = float.Parse(this.textBox_RTC_Alarm_Minute.Text);
                float num12 = float.Parse(this.textBox_RTC_Alarm_Second.Text);
                if ((num > 99f) || ((num < 0f) || ((num7 > 99f) || (num7 < 0f))))
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("RTC年(包括闹钟)设置范围为0 - 99，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        MessageBox.Show("The RTC year range is 0 - 99, and the data is out of bounds！", "Setting Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                }
                else if ((num2 > 12f) || ((num2 < 1f) || ((num8 > 12f) || (num8 < 1f))))
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("RTC月(包括闹钟)设置范围为1 - 12，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        MessageBox.Show("The RTC month range is 1 - 12, and the data is out of bounds！", "Setting Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                }
                else if ((num3 > 31f) || ((num3 < 1f) || ((num9 > 31f) || (num9 < 1f))))
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("RTC日(包括闹钟)设置范围为1 - 31，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        MessageBox.Show("The RTC day range is 1 - 31, and the data is out of bounds！", "Setting Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                }
                else if ((num4 > 23f) || ((num4 < 0f) || ((num10 > 23f) || (num10 < 0f))))
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("RTC时(包括闹钟)设置范围为0 - 23，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        MessageBox.Show("The RTC hour range is 0 - 23, and the data is out of bounds！", "Setting Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                }
                else if ((num5 > 59f) || ((num5 < 0f) || ((num11 > 59f) || (num11 < 0f))))
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("RTC分(包括闹钟)设置范围为0 - 59，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        MessageBox.Show("The RTC minute range is 0 - 59, and the data is out of bounds！", "Setting Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                }
                else if ((num6 > 59f) || ((num6 < 0f) || ((num12 > 59f) || (num12 < 0f))))
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("RTC秒(包括闹钟)设置范围为0 - 59，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        MessageBox.Show("The RTC second range is 0 - 59, and the data is out of bounds！", "Setting Failed", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                }
                else
                {
                    ushort num13 = (ushort) float.Parse(this.textBox_RTC_Time_Year.Text);
                    ushort num14 = (ushort) float.Parse(this.textBox_RTC_Time_Month.Text);
                    ushort num15 = (ushort) float.Parse(this.textBox_RTC_Time_Day.Text);
                    ushort num16 = (ushort) float.Parse(this.textBox_RTC_Time_Hour.Text);
                    ushort num17 = (ushort) float.Parse(this.textBox_RTC_Time_Minute.Text);
                    ushort num18 = (ushort) float.Parse(this.textBox_RTC_Time_Second.Text);
                    ushort num19 = (ushort) float.Parse(this.textBox_RTC_Alarm_Year.Text);
                    ushort num20 = (ushort) float.Parse(this.textBox_RTC_Alarm_Month.Text);
                    ushort num21 = (ushort) float.Parse(this.textBox_RTC_Alarm_Day.Text);
                    ushort num22 = (ushort) float.Parse(this.textBox_RTC_Alarm_Hour.Text);
                    ushort num23 = (ushort) float.Parse(this.textBox_RTC_Alarm_Minute.Text);
                    ushort num24 = (ushort) float.Parse(this.textBox_RTC_Alarm_Second.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x224a;
                        this.u16Rs485RegNum = 12;
                        this.bRs485ByteNum = 0x18;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num26 = (byte) (index + 1);
                        data[num26] = this.bRs485FunCmd;
                        byte num27 = (byte) (num26 + 1);
                        data[num27] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num28 = (byte) (num27 + 1);
                        data[num28] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num29 = (byte) (num28 + 1);
                        data[num29] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num30 = (byte) (num29 + 1);
                        data[num30] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num31 = (byte) (num30 + 1);
                        data[num31] = this.bRs485ByteNum;
                        byte num32 = (byte) (num31 + 1);
                        data[num32] = (byte) ((num13 >> 8) & 0xff);
                        byte num33 = (byte) (num32 + 1);
                        data[num33] = (byte) (num13 & 0xff);
                        byte num34 = (byte) (num33 + 1);
                        data[num34] = (byte) ((num14 >> 8) & 0xff);
                        byte num35 = (byte) (num34 + 1);
                        data[num35] = (byte) (num14 & 0xff);
                        byte num36 = (byte) (num35 + 1);
                        data[num36] = (byte) ((num15 >> 8) & 0xff);
                        byte num37 = (byte) (num36 + 1);
                        data[num37] = (byte) (num15 & 0xff);
                        byte num38 = (byte) (num37 + 1);
                        data[num38] = (byte) ((num16 >> 8) & 0xff);
                        byte num39 = (byte) (num38 + 1);
                        data[num39] = (byte) (num16 & 0xff);
                        byte num40 = (byte) (num39 + 1);
                        data[num40] = (byte) ((num17 >> 8) & 0xff);
                        byte num41 = (byte) (num40 + 1);
                        data[num41] = (byte) (num17 & 0xff);
                        byte num42 = (byte) (num41 + 1);
                        data[num42] = (byte) ((num18 >> 8) & 0xff);
                        byte num43 = (byte) (num42 + 1);
                        data[num43] = (byte) (num18 & 0xff);
                        byte num44 = (byte) (num43 + 1);
                        data[num44] = (byte) ((num19 >> 8) & 0xff);
                        byte num45 = (byte) (num44 + 1);
                        data[num45] = (byte) (num19 & 0xff);
                        byte num46 = (byte) (num45 + 1);
                        data[num46] = (byte) ((num20 >> 8) & 0xff);
                        byte num47 = (byte) (num46 + 1);
                        data[num47] = (byte) (num20 & 0xff);
                        byte num48 = (byte) (num47 + 1);
                        data[num48] = (byte) ((num21 >> 8) & 0xff);
                        byte num49 = (byte) (num48 + 1);
                        data[num49] = (byte) (num21 & 0xff);
                        byte num50 = (byte) (num49 + 1);
                        data[num50] = (byte) ((num22 >> 8) & 0xff);
                        byte num51 = (byte) (num50 + 1);
                        data[num51] = (byte) (num22 & 0xff);
                        byte num52 = (byte) (num51 + 1);
                        data[num52] = (byte) ((num23 >> 8) & 0xff);
                        byte num53 = (byte) (num52 + 1);
                        data[num53] = (byte) (num23 & 0xff);
                        byte num54 = (byte) (num53 + 1);
                        data[num54] = (byte) ((num24 >> 8) & 0xff);
                        byte num55 = (byte) (num54 + 1);
                        byte lenth = (byte) (num55 + 1);
                        data[num55] = (byte) (num24 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void button_Sleep_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 10;
            this.System_Function_OFF_Call();
        }

        private void button_Sleep_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 10;
            this.System_Function_ON_Call();
        }

        private void button_Sleep_Read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_NormalV.Text = "";
            this.textBox_NormalT.Text = "";
            this.textBox_OverDsgV.Text = "";
            this.textBox_OverDsgT.Text = "";
            this.textBox_I_ChgLimit.Text = "";
            this.textBox_I_DsgLimit.Text = "";
            this.textBox_PreChgFre.Text = "";
            this.textBox_PreChgTime.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2310;
                    this.u16Rs485RegNum = 8;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_Sleep_Set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_NormalV.Text == "") || ((this.textBox_NormalT.Text == "") || ((this.textBox_OverDsgV.Text == "") || ((this.textBox_OverDsgT.Text == "") || ((this.textBox_I_ChgLimit.Text == "") || ((this.textBox_I_DsgLimit.Text == "") || ((this.textBox_PreChgFre.Text == "") || (this.textBox_PreChgTime.Text == ""))))))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_NormalV.Text);
                float num2 = float.Parse(this.textBox_NormalT.Text);
                float num3 = float.Parse(this.textBox_OverDsgV.Text);
                float num4 = float.Parse(this.textBox_OverDsgT.Text);
                float num5 = float.Parse(this.textBox_I_ChgLimit.Text);
                float num6 = float.Parse(this.textBox_I_DsgLimit.Text);
                float num7 = float.Parse(this.textBox_PreChgFre.Text);
                float num8 = float.Parse(this.textBox_PreChgTime.Text);
                if ((num > 5000f) || ((num < 1000f) || ((num3 > 5000f) || (num3 < 1000f))))
                {
                    MessageBox.Show("进入休眠电压范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num2 > 65000f) || ((num2 < 1f) || ((num4 > 65000f) || (num4 < 1f))))
                {
                    MessageBox.Show("进入休眠时间范围为1 - 65000分钟，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num5 > 5000f) || ((num5 < 0f) || ((num6 > 5000f) || (num6 < 0f))))
                {
                    MessageBox.Show("进入休眠电流控制范围为0 - 5000A，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num7 > 50000f) || (num7 < 0f))
                {
                    MessageBox.Show("0-50000，预留，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num8 > 50000f) || (num8 < 0f))
                {
                    MessageBox.Show("0-50000，预留，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num9 = (ushort) float.Parse(this.textBox_NormalV.Text);
                    ushort num10 = (ushort) float.Parse(this.textBox_NormalT.Text);
                    ushort num11 = (ushort) float.Parse(this.textBox_OverDsgV.Text);
                    ushort num12 = (ushort) float.Parse(this.textBox_OverDsgT.Text);
                    ushort num13 = (ushort) (float.Parse(this.textBox_I_ChgLimit.Text) * 10f);
                    ushort num14 = (ushort) (float.Parse(this.textBox_I_DsgLimit.Text) * 10f);
                    ushort num15 = (ushort) float.Parse(this.textBox_PreChgFre.Text);
                    ushort num16 = (ushort) float.Parse(this.textBox_PreChgTime.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x2310;
                        this.u16Rs485RegNum = 8;
                        this.bRs485ByteNum = 0x10;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num18 = (byte) (index + 1);
                        data[num18] = this.bRs485FunCmd;
                        byte num19 = (byte) (num18 + 1);
                        data[num19] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num20 = (byte) (num19 + 1);
                        data[num20] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num21 = (byte) (num20 + 1);
                        data[num21] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num22 = (byte) (num21 + 1);
                        data[num22] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num23 = (byte) (num22 + 1);
                        data[num23] = this.bRs485ByteNum;
                        byte num24 = (byte) (num23 + 1);
                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                        byte num25 = (byte) (num24 + 1);
                        data[num25] = (byte) (num9 & 0xff);
                        byte num26 = (byte) (num25 + 1);
                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                        byte num27 = (byte) (num26 + 1);
                        data[num27] = (byte) (num10 & 0xff);
                        byte num28 = (byte) (num27 + 1);
                        data[num28] = (byte) ((num11 >> 8) & 0xff);
                        byte num29 = (byte) (num28 + 1);
                        data[num29] = (byte) (num11 & 0xff);
                        byte num30 = (byte) (num29 + 1);
                        data[num30] = (byte) ((num12 >> 8) & 0xff);
                        byte num31 = (byte) (num30 + 1);
                        data[num31] = (byte) (num12 & 0xff);
                        byte num32 = (byte) (num31 + 1);
                        data[num32] = (byte) ((num13 >> 8) & 0xff);
                        byte num33 = (byte) (num32 + 1);
                        data[num33] = (byte) (num13 & 0xff);
                        byte num34 = (byte) (num33 + 1);
                        data[num34] = (byte) ((num14 >> 8) & 0xff);
                        byte num35 = (byte) (num34 + 1);
                        data[num35] = (byte) (num14 & 0xff);
                        byte num36 = (byte) (num35 + 1);
                        data[num36] = (byte) ((num15 >> 8) & 0xff);
                        byte num37 = (byte) (num36 + 1);
                        data[num37] = (byte) (num15 & 0xff);
                        byte num38 = (byte) (num37 + 1);
                        data[num38] = (byte) ((num16 >> 8) & 0xff);
                        byte num39 = (byte) (num38 + 1);
                        byte lenth = (byte) (num39 + 1);
                        data[num39] = (byte) (num16 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void button_SocFixed_Func_Close_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 5;
            this.System_Function_OFF_Call();
        }

        private void button_SocFixed_Func_Open_Click(object sender, EventArgs e)
        {
            this.u16Rs485RegData = 5;
            this.System_Function_ON_Call();
        }

        private void button_SocTable_Read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2200;
                    this.u16Rs485RegNum = 0x2a;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_SocTable_Set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[100];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_SocTable_Volt1.Text == "") || ((this.textBox_SocTable_Volt2.Text == "") || ((this.textBox_SocTable_Volt3.Text == "") || ((this.textBox_SocTable_Volt4.Text == "") || ((this.textBox_SocTable_Volt5.Text == "") || ((this.textBox_SocTable_Volt6.Text == "") || ((this.textBox_SocTable_Volt7.Text == "") || ((this.textBox_SocTable_Volt8.Text == "") || ((this.textBox_SocTable_Volt9.Text == "") || ((this.textBox_SocTable_Volt10.Text == "") || ((this.textBox_SocTable_Volt11.Text == "") || ((this.textBox_SocTable_Volt12.Text == "") || ((this.textBox_SocTable_Volt13.Text == "") || ((this.textBox_SocTable_Volt14.Text == "") || ((this.textBox_SocTable_Volt15.Text == "") || ((this.textBox_SocTable_Volt16.Text == "") || ((this.textBox_SocTable_Volt17.Text == "") || ((this.textBox_SocTable_Volt18.Text == "") || ((this.textBox_SocTable_Volt19.Text == "") || ((this.textBox_SocTable_Volt20.Text == "") || ((this.textBox_SocTable_Volt21.Text == "") || ((this.textBox_SocTable_Value1.Text == "") || ((this.textBox_SocTable_Value2.Text == "") || ((this.textBox_SocTable_Value3.Text == "") || ((this.textBox_SocTable_Value4.Text == "") || ((this.textBox_SocTable_Value5.Text == "") || ((this.textBox_SocTable_Value6.Text == "") || ((this.textBox_SocTable_Value7.Text == "") || ((this.textBox_SocTable_Value8.Text == "") || ((this.textBox_SocTable_Value9.Text == "") || ((this.textBox_SocTable_Value10.Text == "") || ((this.textBox_SocTable_Value11.Text == "") || ((this.textBox_SocTable_Value12.Text == "") || ((this.textBox_SocTable_Value13.Text == "") || ((this.textBox_SocTable_Value14.Text == "") || ((this.textBox_SocTable_Value15.Text == "") || ((this.textBox_SocTable_Value16.Text == "") || ((this.textBox_SocTable_Value17.Text == "") || ((this.textBox_SocTable_Value18.Text == "") || ((this.textBox_SocTable_Value19.Text == "") || ((this.textBox_SocTable_Value20.Text == "") || (this.textBox_SocTable_Value21.Text == ""))))))))))))))))))))))))))))))))))))))))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_SocTable_Volt1.Text);
                float num2 = float.Parse(this.textBox_SocTable_Volt2.Text);
                float num3 = float.Parse(this.textBox_SocTable_Volt3.Text);
                float num4 = float.Parse(this.textBox_SocTable_Volt4.Text);
                float num5 = float.Parse(this.textBox_SocTable_Volt5.Text);
                float num6 = float.Parse(this.textBox_SocTable_Volt6.Text);
                float num7 = float.Parse(this.textBox_SocTable_Volt7.Text);
                float num8 = float.Parse(this.textBox_SocTable_Volt8.Text);
                float num9 = float.Parse(this.textBox_SocTable_Volt9.Text);
                float num10 = float.Parse(this.textBox_SocTable_Volt10.Text);
                float num11 = float.Parse(this.textBox_SocTable_Volt11.Text);
                float num12 = float.Parse(this.textBox_SocTable_Volt12.Text);
                float num13 = float.Parse(this.textBox_SocTable_Volt13.Text);
                float num14 = float.Parse(this.textBox_SocTable_Volt14.Text);
                float num15 = float.Parse(this.textBox_SocTable_Volt15.Text);
                float num16 = float.Parse(this.textBox_SocTable_Volt16.Text);
                float num17 = float.Parse(this.textBox_SocTable_Volt17.Text);
                float num18 = float.Parse(this.textBox_SocTable_Volt18.Text);
                float num19 = float.Parse(this.textBox_SocTable_Volt19.Text);
                float num20 = float.Parse(this.textBox_SocTable_Volt20.Text);
                float num21 = float.Parse(this.textBox_SocTable_Volt21.Text);
                float num22 = float.Parse(this.textBox_SocTable_Value1.Text);
                float num23 = float.Parse(this.textBox_SocTable_Value2.Text);
                float num24 = float.Parse(this.textBox_SocTable_Value3.Text);
                float num25 = float.Parse(this.textBox_SocTable_Value4.Text);
                float num26 = float.Parse(this.textBox_SocTable_Value5.Text);
                float num27 = float.Parse(this.textBox_SocTable_Value6.Text);
                float num28 = float.Parse(this.textBox_SocTable_Value7.Text);
                float num29 = float.Parse(this.textBox_SocTable_Value8.Text);
                float num30 = float.Parse(this.textBox_SocTable_Value9.Text);
                float num31 = float.Parse(this.textBox_SocTable_Value10.Text);
                float num32 = float.Parse(this.textBox_SocTable_Value11.Text);
                float num33 = float.Parse(this.textBox_SocTable_Value12.Text);
                float num34 = float.Parse(this.textBox_SocTable_Value13.Text);
                float num35 = float.Parse(this.textBox_SocTable_Value14.Text);
                float num36 = float.Parse(this.textBox_SocTable_Value15.Text);
                float num37 = float.Parse(this.textBox_SocTable_Value16.Text);
                float num38 = float.Parse(this.textBox_SocTable_Value17.Text);
                float num39 = float.Parse(this.textBox_SocTable_Value18.Text);
                float num40 = float.Parse(this.textBox_SocTable_Value19.Text);
                float num41 = float.Parse(this.textBox_SocTable_Value20.Text);
                float num42 = float.Parse(this.textBox_SocTable_Value21.Text);
                if ((num > 5000f) || ((num < 0f) || ((num2 > 5000f) || ((num2 < 0f) || ((num3 > 5000f) || ((num3 < 0f) || ((num4 > 5000f) || ((num4 < 0f) || ((num5 > 5000f) || ((num5 < 0f) || ((num6 > 5000f) || ((num6 < 0f) || ((num7 > 5000f) || ((num7 < 0f) || ((num8 > 5000f) || ((num8 < 0f) || ((num9 > 5000f) || ((num9 < 0f) || ((num10 > 5000f) || ((num10 < 0f) || ((num11 > 5000f) || ((num11 < 0f) || ((num12 > 5000f) || ((num12 < 0f) || ((num13 > 5000f) || ((num13 < 0f) || ((num14 > 5000f) || ((num14 < 0f) || ((num15 > 5000f) || ((num15 < 0f) || ((num16 > 5000f) || ((num16 < 0f) || ((num17 > 5000f) || ((num17 < 0f) || ((num18 > 5000f) || ((num18 < 0f) || ((num19 > 5000f) || ((num19 < 0f) || ((num20 > 5000f) || ((num20 < 0f) || ((num21 > 5000f) || (num21 < 0f))))))))))))))))))))))))))))))))))))))))))
                {
                    MessageBox.Show("Soc表格电压点取值范围为0 - 5000mf32V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num22 > 100f) || ((num22 < 0f) || ((num23 > 100f) || ((num23 < 0f) || ((num24 > 100f) || ((num24 < 0f) || ((num25 > 100f) || ((num25 < 0f) || ((num26 > 100f) || ((num26 < 0f) || ((num27 > 100f) || ((num27 < 0f) || ((num28 > 100f) || ((num28 < 0f) || ((num29 > 100f) || ((num29 < 0f) || ((num30 > 100f) || ((num30 < 0f) || ((num31 > 100f) || ((num31 < 0f) || ((num32 > 100f) || ((num32 < 0f) || ((num33 > 100f) || ((num33 < 0f) || ((num34 > 100f) || ((num34 < 0f) || ((num35 > 100f) || ((num35 < 0f) || ((num36 > 100f) || ((num36 < 0f) || ((num37 > 100f) || ((num37 < 0f) || ((num38 > 100f) || ((num38 < 0f) || ((num39 > 100f) || ((num39 < 0f) || ((num40 > 100f) || ((num40 < 0f) || ((num41 > 100f) || ((num41 < 0f) || ((num42 > 100f) || (num42 < 0f))))))))))))))))))))))))))))))))))))))))))
                {
                    MessageBox.Show("Soc表格Soc百分比取值范围为为0 - 100(%)，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num43 = (ushort) float.Parse(this.textBox_SocTable_Volt1.Text);
                    ushort num44 = (ushort) float.Parse(this.textBox_SocTable_Volt2.Text);
                    ushort num45 = (ushort) float.Parse(this.textBox_SocTable_Volt3.Text);
                    ushort num46 = (ushort) float.Parse(this.textBox_SocTable_Volt4.Text);
                    ushort num47 = (ushort) float.Parse(this.textBox_SocTable_Volt5.Text);
                    ushort num48 = (ushort) float.Parse(this.textBox_SocTable_Volt6.Text);
                    ushort num49 = (ushort) float.Parse(this.textBox_SocTable_Volt7.Text);
                    ushort num50 = (ushort) float.Parse(this.textBox_SocTable_Volt8.Text);
                    ushort num51 = (ushort) float.Parse(this.textBox_SocTable_Volt9.Text);
                    ushort num52 = (ushort) float.Parse(this.textBox_SocTable_Volt10.Text);
                    ushort num53 = (ushort) float.Parse(this.textBox_SocTable_Volt11.Text);
                    ushort num54 = (ushort) float.Parse(this.textBox_SocTable_Volt12.Text);
                    ushort num55 = (ushort) float.Parse(this.textBox_SocTable_Volt13.Text);
                    ushort num56 = (ushort) float.Parse(this.textBox_SocTable_Volt14.Text);
                    ushort num57 = (ushort) float.Parse(this.textBox_SocTable_Volt15.Text);
                    ushort num58 = (ushort) float.Parse(this.textBox_SocTable_Volt16.Text);
                    ushort num59 = (ushort) float.Parse(this.textBox_SocTable_Volt17.Text);
                    ushort num60 = (ushort) float.Parse(this.textBox_SocTable_Volt18.Text);
                    ushort num61 = (ushort) float.Parse(this.textBox_SocTable_Volt19.Text);
                    ushort num62 = (ushort) float.Parse(this.textBox_SocTable_Volt20.Text);
                    ushort num63 = (ushort) float.Parse(this.textBox_SocTable_Volt21.Text);
                    ushort num64 = (ushort) float.Parse(this.textBox_SocTable_Value1.Text);
                    ushort num65 = (ushort) float.Parse(this.textBox_SocTable_Value2.Text);
                    ushort num66 = (ushort) float.Parse(this.textBox_SocTable_Value3.Text);
                    ushort num67 = (ushort) float.Parse(this.textBox_SocTable_Value4.Text);
                    ushort num68 = (ushort) float.Parse(this.textBox_SocTable_Value5.Text);
                    ushort num69 = (ushort) float.Parse(this.textBox_SocTable_Value6.Text);
                    ushort num70 = (ushort) float.Parse(this.textBox_SocTable_Value7.Text);
                    ushort num71 = (ushort) float.Parse(this.textBox_SocTable_Value8.Text);
                    ushort num72 = (ushort) float.Parse(this.textBox_SocTable_Value9.Text);
                    ushort num73 = (ushort) float.Parse(this.textBox_SocTable_Value10.Text);
                    ushort num74 = (ushort) float.Parse(this.textBox_SocTable_Value11.Text);
                    ushort num75 = (ushort) float.Parse(this.textBox_SocTable_Value12.Text);
                    ushort num76 = (ushort) float.Parse(this.textBox_SocTable_Value13.Text);
                    ushort num77 = (ushort) float.Parse(this.textBox_SocTable_Value14.Text);
                    ushort num78 = (ushort) float.Parse(this.textBox_SocTable_Value15.Text);
                    ushort num79 = (ushort) float.Parse(this.textBox_SocTable_Value16.Text);
                    ushort num80 = (ushort) float.Parse(this.textBox_SocTable_Value17.Text);
                    ushort num81 = (ushort) float.Parse(this.textBox_SocTable_Value18.Text);
                    ushort num82 = (ushort) float.Parse(this.textBox_SocTable_Value19.Text);
                    ushort num83 = (ushort) float.Parse(this.textBox_SocTable_Value20.Text);
                    ushort num84 = (ushort) float.Parse(this.textBox_SocTable_Value21.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x2200;
                        this.u16Rs485RegNum = 0x2a;
                        this.bRs485ByteNum = 0x54;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num86 = (byte) (index + 1);
                        data[num86] = this.bRs485FunCmd;
                        byte num87 = (byte) (num86 + 1);
                        data[num87] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num88 = (byte) (num87 + 1);
                        data[num88] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num89 = (byte) (num88 + 1);
                        data[num89] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num90 = (byte) (num89 + 1);
                        data[num90] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num91 = (byte) (num90 + 1);
                        data[num91] = this.bRs485ByteNum;
                        byte num92 = (byte) (num91 + 1);
                        data[num92] = (byte) ((num43 >> 8) & 0xff);
                        byte num93 = (byte) (num92 + 1);
                        data[num93] = (byte) (num43 & 0xff);
                        byte num94 = (byte) (num93 + 1);
                        data[num94] = (byte) ((num44 >> 8) & 0xff);
                        byte num95 = (byte) (num94 + 1);
                        data[num95] = (byte) (num44 & 0xff);
                        byte num96 = (byte) (num95 + 1);
                        data[num96] = (byte) ((num45 >> 8) & 0xff);
                        byte num97 = (byte) (num96 + 1);
                        data[num97] = (byte) (num45 & 0xff);
                        byte num98 = (byte) (num97 + 1);
                        data[num98] = (byte) ((num46 >> 8) & 0xff);
                        byte num99 = (byte) (num98 + 1);
                        data[num99] = (byte) (num46 & 0xff);
                        byte num100 = (byte) (num99 + 1);
                        data[num100] = (byte) ((num47 >> 8) & 0xff);
                        byte num101 = (byte) (num100 + 1);
                        data[num101] = (byte) (num47 & 0xff);
                        byte num102 = (byte) (num101 + 1);
                        data[num102] = (byte) ((num48 >> 8) & 0xff);
                        byte num103 = (byte) (num102 + 1);
                        data[num103] = (byte) (num48 & 0xff);
                        byte num104 = (byte) (num103 + 1);
                        data[num104] = (byte) ((num49 >> 8) & 0xff);
                        byte num105 = (byte) (num104 + 1);
                        data[num105] = (byte) (num49 & 0xff);
                        byte num106 = (byte) (num105 + 1);
                        data[num106] = (byte) ((num50 >> 8) & 0xff);
                        byte num107 = (byte) (num106 + 1);
                        data[num107] = (byte) (num50 & 0xff);
                        byte num108 = (byte) (num107 + 1);
                        data[num108] = (byte) ((num51 >> 8) & 0xff);
                        byte num109 = (byte) (num108 + 1);
                        data[num109] = (byte) (num51 & 0xff);
                        byte num110 = (byte) (num109 + 1);
                        data[num110] = (byte) ((num52 >> 8) & 0xff);
                        byte num111 = (byte) (num110 + 1);
                        data[num111] = (byte) (num52 & 0xff);
                        byte num112 = (byte) (num111 + 1);
                        data[num112] = (byte) ((num53 >> 8) & 0xff);
                        byte num113 = (byte) (num112 + 1);
                        data[num113] = (byte) (num53 & 0xff);
                        byte num114 = (byte) (num113 + 1);
                        data[num114] = (byte) ((num54 >> 8) & 0xff);
                        byte num115 = (byte) (num114 + 1);
                        data[num115] = (byte) (num54 & 0xff);
                        byte num116 = (byte) (num115 + 1);
                        data[num116] = (byte) ((num55 >> 8) & 0xff);
                        byte num117 = (byte) (num116 + 1);
                        data[num117] = (byte) (num55 & 0xff);
                        byte num118 = (byte) (num117 + 1);
                        data[num118] = (byte) ((num56 >> 8) & 0xff);
                        byte num119 = (byte) (num118 + 1);
                        data[num119] = (byte) (num56 & 0xff);
                        byte num120 = (byte) (num119 + 1);
                        data[num120] = (byte) ((num57 >> 8) & 0xff);
                        byte num121 = (byte) (num120 + 1);
                        data[num121] = (byte) (num57 & 0xff);
                        byte num122 = (byte) (num121 + 1);
                        data[num122] = (byte) ((num58 >> 8) & 0xff);
                        byte num123 = (byte) (num122 + 1);
                        data[num123] = (byte) (num58 & 0xff);
                        byte num124 = (byte) (num123 + 1);
                        data[num124] = (byte) ((num59 >> 8) & 0xff);
                        byte num125 = (byte) (num124 + 1);
                        data[num125] = (byte) (num59 & 0xff);
                        byte num126 = (byte) (num125 + 1);
                        data[num126] = (byte) ((num60 >> 8) & 0xff);
                        byte num127 = (byte) (num126 + 1);
                        data[num127] = (byte) (num60 & 0xff);
                        byte num128 = (byte) (num127 + 1);
                        data[num128] = (byte) ((num61 >> 8) & 0xff);
                        byte num129 = (byte) (num128 + 1);
                        data[num129] = (byte) (num61 & 0xff);
                        byte num130 = (byte) (num129 + 1);
                        data[num130] = (byte) ((num62 >> 8) & 0xff);
                        byte num131 = (byte) (num130 + 1);
                        data[num131] = (byte) (num62 & 0xff);
                        byte num132 = (byte) (num131 + 1);
                        data[num132] = (byte) ((num63 >> 8) & 0xff);
                        byte num133 = (byte) (num132 + 1);
                        data[num133] = (byte) (num63 & 0xff);
                        byte num134 = (byte) (num133 + 1);
                        data[num134] = (byte) ((num64 >> 8) & 0xff);
                        byte num135 = (byte) (num134 + 1);
                        data[num135] = (byte) (num64 & 0xff);
                        byte num136 = (byte) (num135 + 1);
                        data[num136] = (byte) ((num65 >> 8) & 0xff);
                        byte num137 = (byte) (num136 + 1);
                        data[num137] = (byte) (num65 & 0xff);
                        byte num138 = (byte) (num137 + 1);
                        data[num138] = (byte) ((num66 >> 8) & 0xff);
                        byte num139 = (byte) (num138 + 1);
                        data[num139] = (byte) (num66 & 0xff);
                        byte num140 = (byte) (num139 + 1);
                        data[num140] = (byte) ((num67 >> 8) & 0xff);
                        byte num141 = (byte) (num140 + 1);
                        data[num141] = (byte) (num67 & 0xff);
                        byte num142 = (byte) (num141 + 1);
                        data[num142] = (byte) ((num68 >> 8) & 0xff);
                        byte num143 = (byte) (num142 + 1);
                        data[num143] = (byte) (num68 & 0xff);
                        byte num144 = (byte) (num143 + 1);
                        data[num144] = (byte) ((num69 >> 8) & 0xff);
                        byte num145 = (byte) (num144 + 1);
                        data[num145] = (byte) (num69 & 0xff);
                        byte num146 = (byte) (num145 + 1);
                        data[num146] = (byte) ((num70 >> 8) & 0xff);
                        byte num147 = (byte) (num146 + 1);
                        data[num147] = (byte) (num70 & 0xff);
                        byte num148 = (byte) (num147 + 1);
                        data[num148] = (byte) ((num71 >> 8) & 0xff);
                        byte num149 = (byte) (num148 + 1);
                        data[num149] = (byte) (num71 & 0xff);
                        byte num150 = (byte) (num149 + 1);
                        data[num150] = (byte) ((num72 >> 8) & 0xff);
                        byte num151 = (byte) (num150 + 1);
                        data[num151] = (byte) (num72 & 0xff);
                        byte num152 = (byte) (num151 + 1);
                        data[num152] = (byte) ((num73 >> 8) & 0xff);
                        byte num153 = (byte) (num152 + 1);
                        data[num153] = (byte) (num73 & 0xff);
                        byte num154 = (byte) (num153 + 1);
                        data[num154] = (byte) ((num74 >> 8) & 0xff);
                        byte num155 = (byte) (num154 + 1);
                        data[num155] = (byte) (num74 & 0xff);
                        byte num156 = (byte) (num155 + 1);
                        data[num156] = (byte) ((num75 >> 8) & 0xff);
                        byte num157 = (byte) (num156 + 1);
                        data[num157] = (byte) (num75 & 0xff);
                        byte num158 = (byte) (num157 + 1);
                        data[num158] = (byte) ((num76 >> 8) & 0xff);
                        byte num159 = (byte) (num158 + 1);
                        data[num159] = (byte) (num76 & 0xff);
                        byte num160 = (byte) (num159 + 1);
                        data[num160] = (byte) ((num77 >> 8) & 0xff);
                        byte num161 = (byte) (num160 + 1);
                        data[num161] = (byte) (num77 & 0xff);
                        byte num162 = (byte) (num161 + 1);
                        data[num162] = (byte) ((num78 >> 8) & 0xff);
                        byte num163 = (byte) (num162 + 1);
                        data[num163] = (byte) (num78 & 0xff);
                        byte num164 = (byte) (num163 + 1);
                        data[num164] = (byte) ((num79 >> 8) & 0xff);
                        byte num165 = (byte) (num164 + 1);
                        data[num165] = (byte) (num79 & 0xff);
                        byte num166 = (byte) (num165 + 1);
                        data[num166] = (byte) ((num80 >> 8) & 0xff);
                        byte num167 = (byte) (num166 + 1);
                        data[num167] = (byte) (num80 & 0xff);
                        byte num168 = (byte) (num167 + 1);
                        data[num168] = (byte) ((num81 >> 8) & 0xff);
                        byte num169 = (byte) (num168 + 1);
                        data[num169] = (byte) (num81 & 0xff);
                        byte num170 = (byte) (num169 + 1);
                        data[num170] = (byte) ((num82 >> 8) & 0xff);
                        byte num171 = (byte) (num170 + 1);
                        data[num171] = (byte) (num82 & 0xff);
                        byte num172 = (byte) (num171 + 1);
                        data[num172] = (byte) ((num83 >> 8) & 0xff);
                        byte num173 = (byte) (num172 + 1);
                        data[num173] = (byte) (num83 & 0xff);
                        byte num174 = (byte) (num173 + 1);
                        data[num174] = (byte) ((num84 >> 8) & 0xff);
                        byte num175 = (byte) (num174 + 1);
                        byte lenth = (byte) (num175 + 1);
                        data[num175] = (byte) (num84 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void button_SocUp_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_SocUp_First.Text == "") || ((this.textBox_SocUp_Second.Text == "") || ((this.textBox_SocUp_Third.Text == "") || ((this.textBox_SocUp_Rec.Text == "") || (this.textBox_SocUp_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_SocUp_First.Text);
                if ((num > 50f) || (num < 0f))
                {
                    MessageBox.Show("SOC过低保护(一级)值范围为0 - 50%，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_SocUp_Second.Text);
                    if ((num2 > 50f) || (num2 < 0f))
                    {
                        MessageBox.Show("SOC过低保护(二级)值范围为0 - 50%，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_SocUp_Third.Text);
                        if ((num3 > 50f) || (num3 < 0f))
                        {
                            MessageBox.Show("SOC过低保护(三级)值范围为0 - 50%，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_SocUp_Rec.Text);
                            if ((num4 > 50f) || (num4 < 0f))
                            {
                                MessageBox.Show("SOC过低保护恢复值范围为0 - 50%，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_SocUp_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) float.Parse(this.textBox_SocUp_First.Text);
                                    ushort num7 = (ushort) float.Parse(this.textBox_SocUp_Second.Text);
                                    ushort num8 = (ushort) float.Parse(this.textBox_SocUp_Third.Text);
                                    ushort num9 = (ushort) float.Parse(this.textBox_SocUp_Rec.Text);
                                    ushort num10 = (ushort) float.Parse(this.textBox_SocUp_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x213c;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_TchgOTP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_TchgOTP_First.Text == "") || ((this.textBox_TchgOTP_Second.Text == "") || ((this.textBox_TchgOTP_Third.Text == "") || ((this.textBox_TchgOTP_Rec.Text == "") || (this.textBox_TchgOTP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_TchgOTP_First.Text);
                if ((num > 160f) || (num < 0f))
                {
                    MessageBox.Show("充电过温保护(一级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_TchgOTP_Second.Text);
                    if ((num2 > 160f) || (num2 < 0f))
                    {
                        MessageBox.Show("充电过温保护(二级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_TchgOTP_Third.Text);
                        if ((num3 > 160f) || (num3 < 0f))
                        {
                            MessageBox.Show("充电过温保护(三级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_TchgOTP_Rec.Text);
                            if ((num4 > 160f) || (num4 < 0f))
                            {
                                MessageBox.Show("充电过温保护恢复值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_TchgOTP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) ((float.Parse(this.textBox_TchgOTP_First.Text) + 40f) * 10f);
                                    ushort num7 = (ushort) ((float.Parse(this.textBox_TchgOTP_Second.Text) + 40f) * 10f);
                                    ushort num8 = (ushort) ((float.Parse(this.textBox_TchgOTP_Third.Text) + 40f) * 10f);
                                    ushort num9 = (ushort) ((float.Parse(this.textBox_TchgOTP_Rec.Text) + 40f) * 10f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_TchgOTP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x211e;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_TchgUTP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_TchgUTP_First.Text == "") || ((this.textBox_TchgUTP_Second.Text == "") || ((this.textBox_TchgUTP_Third.Text == "") || ((this.textBox_TdsgOTP_Rec.Text == "") || (this.textBox_TchgUTP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_TchgUTP_First.Text);
                if ((num > 40f) || (num < -40f))
                {
                    MessageBox.Show("充电低温保护(一级)值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_TchgUTP_Second.Text);
                    if ((num2 > 40f) || (num2 < -40f))
                    {
                        MessageBox.Show("充电低温保护(二级)值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_TchgUTP_Third.Text);
                        if ((num3 > 40f) || (num3 < -40f))
                        {
                            MessageBox.Show("充电低温保护(三级)值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_TchgUTP_Rec.Text);
                            if ((num4 > 40f) || (num4 < -40f))
                            {
                                MessageBox.Show("充电低温保护恢复值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_TchgUTP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) ((float.Parse(this.textBox_TchgUTP_First.Text) + 40f) * 10f);
                                    ushort num7 = (ushort) ((float.Parse(this.textBox_TchgUTP_Second.Text) + 40f) * 10f);
                                    ushort num8 = (ushort) ((float.Parse(this.textBox_TchgUTP_Third.Text) + 40f) * 10f);
                                    ushort num9 = (ushort) ((float.Parse(this.textBox_TchgUTP_Rec.Text) + 40f) * 10f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_TchgUTP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2123;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_TdsgOTP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_TdsgOTP_First.Text == "") || ((this.textBox_TdsgOTP_Second.Text == "") || ((this.textBox_TdsgOTP_Third.Text == "") || ((this.textBox_TdsgOTP_Rec.Text == "") || (this.textBox_TdsgOTP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_TdsgOTP_First.Text);
                if ((num > 160f) || (num < 0f))
                {
                    MessageBox.Show("放电过温保护(一级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_TdsgOTP_Second.Text);
                    if ((num2 > 160f) || (num2 < 0f))
                    {
                        MessageBox.Show("放电过温保护(二级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_TdsgOTP_Third.Text);
                        if ((num3 > 160f) || (num3 < 0f))
                        {
                            MessageBox.Show("放电过温保护(三级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_TdsgOTP_Rec.Text);
                            if ((num4 > 160f) || (num4 < 0f))
                            {
                                MessageBox.Show("放电过温保护恢复值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_TdsgOTP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) ((float.Parse(this.textBox_TdsgOTP_First.Text) + 40f) * 10f);
                                    ushort num7 = (ushort) ((float.Parse(this.textBox_TdsgOTP_Second.Text) + 40f) * 10f);
                                    ushort num8 = (ushort) ((float.Parse(this.textBox_TdsgOTP_Third.Text) + 40f) * 10f);
                                    ushort num9 = (ushort) ((float.Parse(this.textBox_TdsgOTP_Rec.Text) + 40f) * 10f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_TdsgOTP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2128;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_TdsgUTP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_TdsgUTP_First.Text == "") || ((this.textBox_TdsgUTP_Second.Text == "") || ((this.textBox_TdsgUTP_Third.Text == "") || ((this.textBox_TdsgUTP_Rec.Text == "") || (this.textBox_TdsgUTP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_TdsgUTP_First.Text);
                if ((num > 40f) || (num < -40f))
                {
                    MessageBox.Show("放电低温保护(一级)值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_TdsgUTP_Second.Text);
                    if ((num2 > 40f) || (num2 < -40f))
                    {
                        MessageBox.Show("放电低温保护(二级)值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_TdsgUTP_Third.Text);
                        if ((num3 > 40f) || (num3 < -40f))
                        {
                            MessageBox.Show("放电低温保护(三级)值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_TdsgUTP_Rec.Text);
                            if ((num4 > 40f) || (num4 < -40f))
                            {
                                MessageBox.Show("放电低温保护恢复值范围为-40 - 40℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_TdsgUTP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) ((float.Parse(this.textBox_TdsgUTP_First.Text) + 40f) * 10f);
                                    ushort num7 = (ushort) ((float.Parse(this.textBox_TdsgUTP_Second.Text) + 40f) * 10f);
                                    ushort num8 = (ushort) ((float.Parse(this.textBox_TdsgUTP_Third.Text) + 40f) * 10f);
                                    ushort num9 = (ushort) ((float.Parse(this.textBox_TdsgUTP_Rec.Text) + 40f) * 10f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_TdsgUTP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x212d;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_temp_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_temp1_k.Text = "";
            this.textBox_temp1_b.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x204a;
                    this.u16Rs485RegNum = 20;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_temp_reset_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1000;
                    this.u16Rs485RegData = 0x55ae;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void button_TmosOTP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_TmosOTP_First.Text == "") || ((this.textBox_TmosOTP_Second.Text == "") || ((this.textBox_TmosOTP_Third.Text == "") || ((this.textBox_TmosOTP_Rec.Text == "") || (this.textBox_TmosOTP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_TmosOTP_First.Text);
                if ((num > 160f) || (num < 0f))
                {
                    MessageBox.Show("MOS过温保护(一级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_TmosOTP_Second.Text);
                    if ((num2 > 160f) || (num2 < 0f))
                    {
                        MessageBox.Show("MOS过温保护(二级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_TmosOTP_Third.Text);
                        if ((num3 > 160f) || (num3 < 0f))
                        {
                            MessageBox.Show("MOS过温保护(三级)值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_TmosOTP_Rec.Text);
                            if ((num4 > 160f) || (num4 < 0f))
                            {
                                MessageBox.Show("MOS过温保护恢复值范围为0 - 160℃，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_TmosOTP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) ((float.Parse(this.textBox_TmosOTP_First.Text) + 40f) * 10f);
                                    ushort num7 = (ushort) ((float.Parse(this.textBox_TmosOTP_Second.Text) + 40f) * 10f);
                                    ushort num8 = (ushort) ((float.Parse(this.textBox_TmosOTP_Third.Text) + 40f) * 10f);
                                    ushort num9 = (ushort) ((float.Parse(this.textBox_TmosOTP_Rec.Text) + 40f) * 10f);
                                    ushort num10 = (ushort) ((float.Parse(this.textBox_TmosOTP_DelayT.Text) + 40f) * 10f);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2132;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_TurnOnOffCom_Click(object sender, EventArgs e)
        {
            try
            {
                if (this.serialPort1.IsOpen)
                {
                    this.serialPort1.Close();
                    this.timer1.Enabled = false;
                    this.groupBox_set.Enabled = false;
                    this.groupBox_read.Enabled = false;
                    this.button_TurnOnOffCom.Text = (this.bIsEng != 0) ? "StartUp" : "打开串口";
                }
                else
                {
                    this.serialPort1.PortName = this.comboBox_ComNum.Text;
                    this.serialPort1.BaudRate = Convert.ToInt32(this.comboBox_BandRate.Text, 10);
                    this.bRdCmdErrCnt = 0;
                    this.timer1.Enabled = true;
                    this.groupBox_set.Enabled = true;
                    this.groupBox_read.Enabled = true;
                    this.serialPort1.Open();
                    this.button_TurnOnOffCom.Text = (this.bIsEng != 0) ? "ShutDown" : "关闭串口";
                }
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，请检查串口号是否正确", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial port error, Please recheck the Serial Port!", "ErrorMessage！");
                }
            }
        }

        private void button_upgrate_begin_Click(object sender, EventArgs e)
        {
            this.FlashUpgrate();
        }

        private void button_upgrate_clear_Click(object sender, EventArgs e)
        {
            this.textBox_upgrate_window.Text = "";
            this.textBox_upgrate_pack.Text = "";
            this.button_upgrate_connect.Enabled = false;
            this.button_upgrate_begin.Enabled = false;
            this.progressBar_upgrate.Value = 0;
        }

        private void button_upgrate_connect_Click(object sender, EventArgs e)
        {
            this.FlashUpgrateConnect();
            this.CountCnt = 0;
            this.length = 0;
        }

        private void Button_upgrate_find_Click(object sender, EventArgs e)
        {
            OpenFileDialog dialog = new OpenFileDialog {
                Filter = "升级包|*.bin"
            };
            dialog.ShowDialog();
            if (dialog.FileName.Length > 0)
            {
                this.textBox_upgrate_pack.Text = dialog.FileName;
                this.filename = dialog.FileName;
                this.textBox_upgrate_window.AppendText("已加载升级包！");
                this.button_upgrate_connect.Enabled = true;
            }
            this.FlashHEXcout();
        }

        private void button_VbusOVP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_VbusOVP_First.Text == "") || ((this.textBox_VbusOVP_Second.Text == "") || ((this.textBox_VbusOVP_Third.Text == "") || ((this.textBox_VbusOVP_Rec.Text == "") || (this.textBox_VbusOVP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_VbusOVP_First.Text);
                if ((num > 200f) || (num < 3f))
                {
                    MessageBox.Show("母线电压过压保护(一级)值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_VbusOVP_Second.Text);
                    if ((num2 > 200f) || (num2 < 3f))
                    {
                        MessageBox.Show("母线电压过压保护(二级)值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_VbusOVP_Third.Text);
                        if ((num3 > 200f) || (num3 < 3f))
                        {
                            MessageBox.Show("母线电压过压保护(三级)值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_VbusOVP_Rec.Text);
                            if ((num4 > 200f) || (num4 < 3f))
                            {
                                MessageBox.Show("母线电压过压保护恢复值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_VbusOVP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) (float.Parse(this.textBox_VbusOVP_First.Text) * 100f);
                                    ushort num7 = (ushort) (float.Parse(this.textBox_VbusOVP_Second.Text) * 100f);
                                    ushort num8 = (ushort) (float.Parse(this.textBox_VbusOVP_Third.Text) * 100f);
                                    ushort num9 = (ushort) (float.Parse(this.textBox_VbusOVP_Rec.Text) * 100f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_VbusOVP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x210a;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_VbusUVP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_VbusUVP_First.Text == "") || ((this.textBox_VbusUVP_Second.Text == "") || ((this.textBox_VbusUVP_Third.Text == "") || ((this.textBox_VbusUVP_Rec.Text == "") || (this.textBox_VbusUVP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_VbusUVP_First.Text);
                if ((num > 200f) || (num < 3f))
                {
                    MessageBox.Show("母线电压低压保护(一级)值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_VbusUVP_Second.Text);
                    if ((num2 > 200f) || (num2 < 3f))
                    {
                        MessageBox.Show("母线电压低压保护(二级)值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_VbusUVP_Third.Text);
                        if ((num3 > 200f) || (num3 < 3f))
                        {
                            MessageBox.Show("母线电压低压保护(三级)值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_VbusUVP_Rec.Text);
                            if ((num4 > 200f) || (num4 < 3f))
                            {
                                MessageBox.Show("母线电压低压保护恢复值范围为3 - 200V，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_VbusUVP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) (float.Parse(this.textBox_VbusUVP_First.Text) * 100f);
                                    ushort num7 = (ushort) (float.Parse(this.textBox_VbusUVP_Second.Text) * 100f);
                                    ushort num8 = (ushort) (float.Parse(this.textBox_VbusUVP_Third.Text) * 100f);
                                    ushort num9 = (ushort) (float.Parse(this.textBox_VbusUVP_Rec.Text) * 100f);
                                    ushort num10 = (ushort) float.Parse(this.textBox_VbusUVP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x210f;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_VcellOVP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_VcellOVP_First.Text == "") || ((this.textBox_VcellOVP_Second.Text == "") || ((this.textBox_VcellOVP_Third.Text == "") || ((this.textBox_VcellOVP_Rec.Text == "") || (this.textBox_VcellOVP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_VcellOVP_First.Text);
                if ((num > 5000f) || (num < 1000f))
                {
                    MessageBox.Show("单体电池过压保护(一级)值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_VcellOVP_Second.Text);
                    if ((num2 > 5000f) || (num2 < 1000f))
                    {
                        MessageBox.Show("单体电池过压保护(二级)值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_VcellOVP_Third.Text);
                        if ((num3 > 5000f) || (num3 < 1000f))
                        {
                            MessageBox.Show("单体电池过压保护(三级)值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_VcellOVP_Rec.Text);
                            if ((num4 > 5000f) || (num4 < 1000f))
                            {
                                MessageBox.Show("单体电池过压保护恢复值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_VcellOVP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) float.Parse(this.textBox_VcellOVP_First.Text);
                                    ushort num7 = (ushort) float.Parse(this.textBox_VcellOVP_Second.Text);
                                    ushort num8 = (ushort) float.Parse(this.textBox_VcellOVP_Third.Text);
                                    ushort num9 = (ushort) float.Parse(this.textBox_VcellOVP_Rec.Text);
                                    ushort num10 = (ushort) float.Parse(this.textBox_VcellOVP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2100;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_VcellUVP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_VcellUVP_First.Text == "") || ((this.textBox_VcellUVP_Second.Text == "") || ((this.textBox_VcellUVP_Third.Text == "") || ((this.textBox_VcellUVP_Rec.Text == "") || (this.textBox_VcellUVP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_VcellUVP_First.Text);
                if ((num > 5000f) || (num < 1000f))
                {
                    MessageBox.Show("单体电池低压保护(一级)值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_VcellUVP_Second.Text);
                    if ((num2 > 5000f) || (num2 < 1000f))
                    {
                        MessageBox.Show("单体电池低压保护(二级)值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_VcellUVP_Third.Text);
                        if ((num3 > 5000f) || (num3 < 1000f))
                        {
                            MessageBox.Show("单体电池低压保护(三级)值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_VcellUVP_Rec.Text);
                            if ((num4 > 5000f) || (num4 < 1000f))
                            {
                                MessageBox.Show("单体电池低压保护恢复值范围为1000 - 5000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_VcellUVP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) float.Parse(this.textBox_VcellUVP_First.Text);
                                    ushort num7 = (ushort) float.Parse(this.textBox_VcellUVP_Second.Text);
                                    ushort num8 = (ushort) float.Parse(this.textBox_VcellUVP_Third.Text);
                                    ushort num9 = (ushort) float.Parse(this.textBox_VcellUVP_Rec.Text);
                                    ushort num10 = (ushort) float.Parse(this.textBox_VcellUVP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2105;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        private void button_VdeltaOVP_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_VdeltaOVP_First.Text == "") || ((this.textBox_VdeltaOVP_Second.Text == "") || ((this.textBox_VdeltaOVP_Third.Text == "") || ((this.textBox_VdeltaOVP_Rec.Text == "") || (this.textBox_VdeltaOVP_DelayT.Text == "")))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_VdeltaOVP_First.Text);
                if ((num > 2000f) || (num < 10f))
                {
                    MessageBox.Show("压差过大保护(一级)值范围为10 - 2000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    float num2 = float.Parse(this.textBox_VdeltaOVP_Second.Text);
                    if ((num2 > 2000f) || (num2 < 10f))
                    {
                        MessageBox.Show("压差过大保护(二级)值范围为10 - 2000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        float num3 = float.Parse(this.textBox_VdeltaOVP_Third.Text);
                        if ((num3 > 2000f) || (num3 < 10f))
                        {
                            MessageBox.Show("压差过大保护(三级)值范围为10 - 2000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        }
                        else
                        {
                            float num4 = float.Parse(this.textBox_VdeltaOVP_Rec.Text);
                            if ((num4 > 2000f) || (num4 < 10f))
                            {
                                MessageBox.Show("压差过大保护恢复值范围为10 - 2000mV，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                float num5 = float.Parse(this.textBox_VdeltaOVP_DelayT.Text);
                                if ((num5 > 50000f) || (num5 < 1f))
                                {
                                    MessageBox.Show("滤波时间范围为1 - 50000(10ms)，数据越界", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                                }
                                else
                                {
                                    ushort num6 = (ushort) float.Parse(this.textBox_VdeltaOVP_First.Text);
                                    ushort num7 = (ushort) float.Parse(this.textBox_VdeltaOVP_Second.Text);
                                    ushort num8 = (ushort) float.Parse(this.textBox_VdeltaOVP_Third.Text);
                                    ushort num9 = (ushort) float.Parse(this.textBox_VdeltaOVP_Rec.Text);
                                    ushort num10 = (ushort) float.Parse(this.textBox_VdeltaOVP_DelayT.Text);
                                    try
                                    {
                                        this.bRs485FunCmd = 0x10;
                                        this.u16Rs485RegAddr = 0x2137;
                                        this.u16Rs485RegNum = 5;
                                        this.bRs485ByteNum = 10;
                                        byte index = 0;
                                        data[index] = this.bRs485Addr;
                                        byte num12 = (byte) (index + 1);
                                        data[num12] = this.bRs485FunCmd;
                                        byte num13 = (byte) (num12 + 1);
                                        data[num13] = (byte) (this.u16Rs485RegAddr / 0x100);
                                        byte num14 = (byte) (num13 + 1);
                                        data[num14] = (byte) (this.u16Rs485RegAddr % 0x100);
                                        byte num15 = (byte) (num14 + 1);
                                        data[num15] = (byte) (this.u16Rs485RegNum / 0x100);
                                        byte num16 = (byte) (num15 + 1);
                                        data[num16] = (byte) (this.u16Rs485RegNum % 0x100);
                                        byte num17 = (byte) (num16 + 1);
                                        data[num17] = this.bRs485ByteNum;
                                        byte num18 = (byte) (num17 + 1);
                                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                                        byte num19 = (byte) (num18 + 1);
                                        data[num19] = (byte) (num6 & 0xff);
                                        byte num20 = (byte) (num19 + 1);
                                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                                        byte num21 = (byte) (num20 + 1);
                                        data[num21] = (byte) (num7 & 0xff);
                                        byte num22 = (byte) (num21 + 1);
                                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                                        byte num23 = (byte) (num22 + 1);
                                        data[num23] = (byte) (num8 & 0xff);
                                        byte num24 = (byte) (num23 + 1);
                                        data[num24] = (byte) ((num9 >> 8) & 0xff);
                                        byte num25 = (byte) (num24 + 1);
                                        data[num25] = (byte) (num9 & 0xff);
                                        byte num26 = (byte) (num25 + 1);
                                        data[num26] = (byte) ((num10 >> 8) & 0xff);
                                        byte num27 = (byte) (num26 + 1);
                                        byte lenth = (byte) (num27 + 1);
                                        data[num27] = (byte) (num10 & 0xff);
                                        this.Calculate_Sum_Tx(ref data, lenth);
                                        this.serialPort1.DiscardInBuffer();
                                        this.serialPort1.DiscardOutBuffer();
                                        this.bRxByteCnt = 0;
                                        this.bTotleBytes = 0;
                                        this.bRxFrameFinishFlag = false;
                                        this.serialPort1.Write(data, 0, lenth + 2);
                                        this.serialPort1.DiscardInBuffer();
                                    }
                                    catch (Exception)
                                    {
                                        if (this.bIsEng == 0)
                                        {
                                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                                        }
                                        else
                                        {
                                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public void Calculate_CRC16_TX(ref byte[] Data, byte Lenth)
        {
            ushort num = 0xffff;
            ushort index = 0;
            while (index < Lenth)
            {
                num = (ushort) (num ^ Data[index]);
                ushort num3 = 0;
                while (true)
                {
                    if (num3 >= 8)
                    {
                        index = (ushort) (index + 1);
                        break;
                    }
                    num = (ushort) (num >> 1);
                    if ((num & 1) != 0)
                    {
                        num = (ushort) (num ^ 0xa001);
                    }
                    num3 = (ushort) (num3 + 1);
                }
            }
            Data[Lenth] = (byte) (num / 0x100);
            Data[Lenth + 1] = (byte) (num % 0x100);
        }

        public bool Calculate_Sum_Rx(ref byte[] Data, byte Lenth)
        {
            ushort num = 0xffff;
            ushort index = 0;
            while (index < Lenth)
            {
                num = (ushort) (num ^ Data[index]);
                ushort num3 = 0;
                while (true)
                {
                    if (num3 >= 8)
                    {
                        index = (ushort) (index + 1);
                        break;
                    }
                    num = ((num & 1) == 0) ? ((ushort) (num >> 1)) : ((ushort) (((ushort) (num >> 1)) ^ 0xa001));
                    num3 = (ushort) (num3 + 1);
                }
            }
            return (num == ((Data[Lenth + 1] * 0x100) + Data[Lenth]));
        }

        public void Calculate_Sum_Tx(ref byte[] Data, uint Lenth)
        {
            ushort num = 0xffff;
            ushort index = 0;
            while (index < Lenth)
            {
                num = (ushort) (num ^ Data[index]);
                ushort num3 = 0;
                while (true)
                {
                    if (num3 >= 8)
                    {
                        index = (ushort) (index + 1);
                        break;
                    }
                    num = ((num & 1) == 0) ? ((ushort) (num >> 1)) : ((ushort) (((ushort) (num >> 1)) ^ 0xa001));
                    num3 = (ushort) (num3 + 1);
                }
            }
            Data[Lenth] = (byte) (num % 0x100);
            Data[((int) Lenth) + 1] = (byte) (num / 0x100);
        }

        private void ComSelect()
        {
            byte num2 = 0;
            this.byComAvailableNum = 0;
            byte index = 0;
            while (index < 20)
            {
                try
                {
                    this.serialPort1.PortName = this.stComName[index];
                    this.serialPort1.Open();
                    byte num1 = num2;
                    num2 = (byte) (num1 + 1);
                    this.stComAvailable[num1] = this.stComName[index];
                    this.serialPort1.Close();
                }
                catch (Exception)
                {
                    this.u16ComCnt = (ushort) (this.u16ComCnt + 1);
                }
                index = (byte) (index + 1);
            }
            this.byComAvailableNum = num2;
            if (this.byComAvailableNum <= 0)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请插入USB线缆！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                }
                else
                {
                    MessageBox.Show("Please connect the USB cable！", "Prompt", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                }
            }
            else
            {
                this.serialPort1.PortName = this.stComAvailable[0];
                try
                {
                    this.comboBox_ComNum.Text = this.serialPort1.PortName;
                    this.comboBox_BandRate.Text = Convert.ToString(this.serialPort1.BaudRate);
                    index = 0;
                    while (true)
                    {
                        if (index >= this.byComAvailableNum)
                        {
                            this.serialPort1.Open();
                            this.button_TurnOnOffCom.Enabled = true;
                            this.button_TurnOnOffCom.Text = (this.bIsEng != 0) ? "ShutDown" : "关闭串口";
                            this.groupBox_set.Enabled = true;
                            this.groupBox_read.Enabled = true;
                            this.timer1.Enabled = true;
                            this.bRdCmdErrCnt = 0;
                            break;
                        }
                        this.comboBox_ComNum.Items.Add(this.stComAvailable[index]);
                        index = (byte) (index + 1);
                    }
                }
                catch (Exception)
                {
                    this.groupBox_set.Enabled = false;
                    this.groupBox_read.Enabled = false;
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口打开失败！", "错误信息！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                    else
                    {
                        MessageBox.Show("Start serial port failed！", "ErrorMessage！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    }
                }
            }
        }

        public static byte[] ConvertToBinary(string Path)
        {
            FileStream stream = new FileInfo(Path).OpenRead();
            byte[] buffer = new byte[stream.Length];
            stream.Read(buffer, 0, Convert.ToInt32(stream.Length));
            return buffer;
        }

        public static void Delay(int milliSecond)
        {
            int tickCount = Environment.TickCount;
            while (Math.Abs((int) (Environment.TickCount - tickCount)) < milliSecond)
            {
            }
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing && (this.components != null))
            {
                this.components.Dispose();
            }
            base.Dispose(disposing);
        }

        public void FlashHEXcout()
        {
            try
            {
                this.sendbuf = ConvertToBinary(this.filename);
                this.len = this.sendbuf.Length;
                this.cout = this.len / 0x400;
                this.m = this.len % 0x400;
                this.textBox_upgrate_window.AppendText("大小为:" + ((float) (this.len / 0x400)).ToString() + " K\n");
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("找不到烧写文件！", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Can not find the pack!", "ErrorMessage！");
                }
            }
        }

        public void FlashUpgrate()
        {
            byte[] destinationArray = new byte[0x44c];
            int destinationIndex = 0;
            this.bRs485FunCmd = 0x10;
            this.u16Rs485RegAddr = 0xfffe;
            this.u16Rs485RegNum = 0;
            this.bRs485ByteNum = 0;
            destinationArray[destinationIndex++] = this.bRs485Addr;
            destinationArray[destinationIndex++] = this.bRs485FunCmd;
            destinationArray[destinationIndex++] = (byte) (this.u16Rs485RegAddr / 0x100);
            destinationArray[destinationIndex++] = (byte) (this.u16Rs485RegAddr % 0x100);
            try
            {
                if ((this.CountCnt == this.cout) && (this.m != 0))
                {
                    this.u16Rs485RegNum = (ushort) this.m;
                    destinationArray[destinationIndex++] = (byte) (this.u16Rs485RegNum / 0x100);
                    destinationArray[destinationIndex++] = (byte) (this.u16Rs485RegNum % 0x100);
                    destinationArray[destinationIndex++] = this.bRs485ByteNum;
                    Array.ConstrainedCopy(this.sendbuf, this.length, destinationArray, destinationIndex, this.m);
                    destinationIndex += this.m;
                    this.Calculate_Sum_Tx(ref destinationArray, (uint) destinationIndex);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(destinationArray, 0, destinationIndex + 2);
                    this.serialPort1.DiscardInBuffer();
                    this.length += this.m;
                    this.progressBar_upgrate.Value = 100;
                }
                else
                {
                    this.u16Rs485RegNum = 0x400;
                    destinationArray[destinationIndex++] = (byte) (this.u16Rs485RegNum / 0x100);
                    destinationArray[destinationIndex++] = (byte) (this.u16Rs485RegNum % 0x100);
                    destinationArray[destinationIndex++] = this.bRs485ByteNum;
                    Array.ConstrainedCopy(this.sendbuf, this.length, destinationArray, destinationIndex, 0x400);
                    destinationIndex += 0x400;
                    this.Calculate_Sum_Tx(ref destinationArray, (uint) destinationIndex);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(destinationArray, 0, destinationIndex + 2);
                    this.serialPort1.DiscardInBuffer();
                    this.length += 0x400;
                    this.ProgressBar_n = ((float) this.length) / ((float) this.len);
                    this.ProgressBar_n *= 100f;
                    this.progressBar_upgrate.Value = (int) this.ProgressBar_n;
                }
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("传输bin文件出错！", "错误！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Transferring bin file error！", "错误！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        public void FlashUpgrateComplete()
        {
            byte[] data = new byte[50];
            this.CountCnt = 0;
            this.length = 0;
            try
            {
                this.bRs485FunCmd = 0x10;
                this.u16Rs485RegAddr = 0xffff;
                this.u16Rs485RegNum = 1;
                this.bRs485ByteNum = 2;
                byte index = 0;
                data[index] = this.bRs485Addr;
                byte num2 = (byte) (index + 1);
                data[num2] = this.bRs485FunCmd;
                byte num3 = (byte) (num2 + 1);
                data[num3] = (byte) (this.u16Rs485RegAddr / 0x100);
                byte num4 = (byte) (num3 + 1);
                data[num4] = (byte) (this.u16Rs485RegAddr % 0x100);
                byte num5 = (byte) (num4 + 1);
                data[num5] = (byte) (this.u16Rs485RegNum / 0x100);
                byte num6 = (byte) (num5 + 1);
                data[num6] = (byte) (this.u16Rs485RegNum % 0x100);
                byte num7 = (byte) (num6 + 1);
                data[num7] = this.bRs485ByteNum;
                byte num8 = (byte) (num7 + 1);
                data[num8] = 0;
                byte num9 = (byte) (num8 + 1);
                byte lenth = (byte) (num9 + 1);
                data[num9] = 0;
                this.Calculate_Sum_Tx(ref data, lenth);
                this.serialPort1.DiscardInBuffer();
                this.serialPort1.DiscardOutBuffer();
                this.bRxByteCnt = 0;
                this.bTotleBytes = 0;
                this.bRxFrameFinishFlag = false;
                this.serialPort1.Write(data, 0, lenth + 2);
                this.serialPort1.DiscardInBuffer();
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Errot，Please recheck Serial Port", "ErrorMessage！");
                }
            }
        }

        public void FlashUpgrateConnect()
        {
            byte[] data = new byte[50];
            this.textBox_upgrate_window.AppendText("正在连接设备.....\n");
            try
            {
                this.bRs485FunCmd = 0x10;
                this.u16Rs485RegAddr = 0xfffd;
                this.u16Rs485RegNum = 1;
                this.bRs485ByteNum = 2;
                byte index = 0;
                data[index] = this.bRs485Addr;
                byte num2 = (byte) (index + 1);
                data[num2] = this.bRs485FunCmd;
                byte num3 = (byte) (num2 + 1);
                data[num3] = (byte) (this.u16Rs485RegAddr / 0x100);
                byte num4 = (byte) (num3 + 1);
                data[num4] = (byte) (this.u16Rs485RegAddr % 0x100);
                byte num5 = (byte) (num4 + 1);
                data[num5] = (byte) (this.u16Rs485RegNum / 0x100);
                byte num6 = (byte) (num5 + 1);
                data[num6] = (byte) (this.u16Rs485RegNum % 0x100);
                byte num7 = (byte) (num6 + 1);
                data[num7] = this.bRs485ByteNum;
                byte num8 = (byte) (num7 + 1);
                data[num8] = 0;
                byte num9 = (byte) (num8 + 1);
                byte lenth = (byte) (num9 + 1);
                data[num9] = 0;
                this.Calculate_Sum_Tx(ref data, lenth);
                this.serialPort1.DiscardInBuffer();
                this.serialPort1.DiscardOutBuffer();
                this.bRxByteCnt = 0;
                this.bTotleBytes = 0;
                this.bRxFrameFinishFlag = false;
                this.serialPort1.Write(data, 0, lenth + 2);
                this.serialPort1.DiscardInBuffer();
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Errot，Please recheck Serial Port", "ErrorMessage！");
                }
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.Text = this.str_FormName;
            this.ComSelect();
        }

        private void InitializeComponent()
        {
            this.components = new Container();
            this.button_TurnOnOffCom = new Button();
            this.serialPort1 = new SerialPort(this.components);
            this.comboBox_ComNum = new ComboBox();
            this.comboBox_BandRate = new ComboBox();
            this.timer1 = new Timer(this.components);
            this.label_VC1 = new Label();
            this.label_VC2 = new Label();
            this.label_VC4 = new Label();
            this.label_VC3 = new Label();
            this.label_VC8 = new Label();
            this.label_VC7 = new Label();
            this.label_VC6 = new Label();
            this.label_VC5 = new Label();
            this.label_VC12 = new Label();
            this.label_VC11 = new Label();
            this.label_VC10 = new Label();
            this.label_VC9 = new Label();
            this.label_VC14 = new Label();
            this.label_VC13 = new Label();
            this.button_MosRelay_Func_Open = new Button();
            this.label_Vcell_max = new Label();
            this.label_Vcell_min = new Label();
            this.label_Vbat = new Label();
            this.label_V_delta = new Label();
            this.label_Min_pos = new Label();
            this.label_Max_pos = new Label();
            this.label_Max_pos_ref = new Label();
            this.label_V_delta_ref = new Label();
            this.label_Vcell_max_ref = new Label();
            this.label_Min_pos_ref = new Label();
            this.label_Vbat_ref = new Label();
            this.label_Vcell_min_ref = new Label();
            this.label7 = new Label();
            this.label8 = new Label();
            this.label9 = new Label();
            this.label10 = new Label();
            this.label11 = new Label();
            this.label12 = new Label();
            this.label13 = new Label();
            this.label14 = new Label();
            this.label15 = new Label();
            this.label16 = new Label();
            this.label17 = new Label();
            this.label18 = new Label();
            this.label19 = new Label();
            this.label20 = new Label();
            this.groupBox_Vcell = new GroupBox();
            this.label171 = new Label();
            this.label_VC15 = new Label();
            this.label57 = new Label();
            this.label_VC16 = new Label();
            this.groupBox_Vcell_Status = new GroupBox();
            this.label_Temp1_ref = new Label();
            this.label_Temp3_ref = new Label();
            this.label_Temp2_ref = new Label();
            this.label_Temp_env_ref = new Label();
            this.label_CHG_MOS_ref = new Label();
            this.label_heat_ref = new Label();
            this.groupBox_OtherStatus = new GroupBox();
            this.label_SysStatus_BMS_StartUp = new Label();
            this.label277 = new Label();
            this.label_SysStatus_Res3 = new Label();
            this.label_SysStatus_Res2 = new Label();
            this.label315 = new Label();
            this.label317 = new Label();
            this.label319 = new Label();
            this.label_SysStatus_Res1 = new Label();
            this.label267 = new Label();
            this.label_SysStatus_ToSleep = new Label();
            this.label270 = new Label();
            this.label_SysStatus_Balance = new Label();
            this.label458 = new Label();
            this.label_SysStatus_DSG_Relay = new Label();
            this.label462 = new Label();
            this.label_SysStatus_CHG_Relay = new Label();
            this.label260 = new Label();
            this.label_SysStatus_Main_Relay = new Label();
            this.label470 = new Label();
            this.label_SysStatus_Pre_Relay = new Label();
            this.label472 = new Label();
            this.label_SysStatus_Res7 = new Label();
            this.label476 = new Label();
            this.label_SysStatus_Res6 = new Label();
            this.label456 = new Label();
            this.label_SysStatus_Res5 = new Label();
            this.label459 = new Label();
            this.label_SysStatus_Res4 = new Label();
            this.label_SysStatus_AFE2 = new Label();
            this.label_SysStatus_AFE1 = new Label();
            this.label323 = new Label();
            this.label455 = new Label();
            this.label94 = new Label();
            this.label_SysStatus_DSG_MOS = new Label();
            this.label58 = new Label();
            this.label_SysStatus_Cool = new Label();
            this.label_SysStatus_CHG_MOS = new Label();
            this.label_SysStatus_Heat = new Label();
            this.label_DSG_MOS_ref = new Label();
            this.label_SysStatus_Pre_MOS = new Label();
            this.label_Fault_Third = new Label();
            this.label309 = new Label();
            this.label_Fault_Second = new Label();
            this.label_Fault_First = new Label();
            this.label_WarnStu_ref = new Label();
            this.label_FaultStu_ref = new Label();
            this.tabControl1 = new TabControl();
            this.tabPage1 = new TabPage();
            this.label_BaudRate = new Label();
            this.label_UART = new Label();
            this.toolStrip_Imformation = new ToolStrip();
            this.toolStripLabel_RxCnt1 = new ToolStripLabel();
            this.toolStripLabel_RTC_second = new ToolStripLabel();
            this.toolStripLabel4 = new ToolStripLabel();
            this.toolStripLabel_RTC_minute = new ToolStripLabel();
            this.toolStripLabel2 = new ToolStripLabel();
            this.toolStripLabel_RTC_hour = new ToolStripLabel();
            this.toolStripLabel11 = new ToolStripLabel();
            this.toolStripLabel_RTC_day = new ToolStripLabel();
            this.toolStripLabel7 = new ToolStripLabel();
            this.toolStripLabel_RTC_month = new ToolStripLabel();
            this.toolStripLabel9 = new ToolStripLabel();
            this.toolStripLabel_RTC_year = new ToolStripLabel();
            this.toolStripLabel10 = new ToolStripLabel();
            this.toolStripLabel_TxCnt1 = new ToolStripLabel();
            this.groupBox_read = new GroupBox();
            this.groupBox36 = new GroupBox();
            this.label_Cool_Res2 = new Label();
            this.label_Cool_Res3 = new Label();
            this.label326 = new Label();
            this.label411 = new Label();
            this.label_Cool_Res1 = new Label();
            this.label413 = new Label();
            this.label420 = new Label();
            this.label421 = new Label();
            this.label_Cool_OverT = new Label();
            this.label_Cool_Normal = new Label();
            this.label424 = new Label();
            this.label425 = new Label();
            this.label_Cool_Short = new Label();
            this.label_Cool_Open = new Label();
            this.label_Heat_Res2 = new Label();
            this.label_Heat_Res3 = new Label();
            this.label278 = new Label();
            this.label279 = new Label();
            this.label_Heat_Res1 = new Label();
            this.label_Heat_ = new Label();
            this.label282 = new Label();
            this.label_Heat_O = new Label();
            this.label_Heat_OverT = new Label();
            this.label_Heat_Normal = new Label();
            this.label299 = new Label();
            this.label304 = new Label();
            this.label_Heat_Short = new Label();
            this.label_Heat_Open = new Label();
            this.groupBox35 = new GroupBox();
            this.label_HeatCoolErr = new Label();
            this.label435 = new Label();
            this.label_CycleTimes = new Label();
            this.label_Full_mAh = new Label();
            this.label_CycleTimes_ref = new Label();
            this.label_Idsg_ref = new Label();
            this.label_Factory_mAh_ref = new Label();
            this.label_Factory_mAh = new Label();
            this.label_Residue_mAh_ref = new Label();
            this.label_Ichg_ref = new Label();
            this.label_Idsg = new Label();
            this.label_Ichg = new Label();
            this.label242 = new Label();
            this.label_Present_mAh = new Label();
            this.label_SOC = new Label();
            this.label_Present_mAh_ref = new Label();
            this.label_SOH = new Label();
            this.label250 = new Label();
            this.groupBox7 = new GroupBox();
            this.label_Res_Third = new Label();
            this.label_Vdelta_Op_Third = new Label();
            this.label_Soc_Up_Third = new Label();
            this.label283 = new Label();
            this.label284 = new Label();
            this.label_Tmos_OTP_Third = new Label();
            this.label286 = new Label();
            this.label287 = new Label();
            this.label_Celldsg_UT_Third = new Label();
            this.label_Celldsg_OT_Third = new Label();
            this.label290 = new Label();
            this.label291 = new Label();
            this.label292 = new Label();
            this.label293 = new Label();
            this.label294 = new Label();
            this.label_DSG_OC_Third = new Label();
            this.label296 = new Label();
            this.label_CHG_OC_Third = new Label();
            this.label_Cellchg_UT_Third = new Label();
            this.label_Cellchg_OT_Third = new Label();
            this.label300 = new Label();
            this.label301 = new Label();
            this.label302 = new Label();
            this.label303 = new Label();
            this.label_Vbat_UV_Third = new Label();
            this.label_Vcell_UV_Third = new Label();
            this.label_Vbat_OV_Third = new Label();
            this.label_Vcell_OV_Third = new Label();
            this.groupBox6 = new GroupBox();
            this.label_Res_Second = new Label();
            this.label_Vdelta_Op_Second = new Label();
            this.label_Soc_Up_Second = new Label();
            this.label255 = new Label();
            this.label256 = new Label();
            this.label_Tmos_OTP_Second = new Label();
            this.label258 = new Label();
            this.label259 = new Label();
            this.label_Celldsg_UT_Second = new Label();
            this.label_Celldsg_OT_Second = new Label();
            this.label262 = new Label();
            this.label263 = new Label();
            this.label264 = new Label();
            this.label265 = new Label();
            this.label266 = new Label();
            this.label_DSG_OC_Second = new Label();
            this.label268 = new Label();
            this.label_CHG_OC_Second = new Label();
            this.label_Cellchg_UT_Second = new Label();
            this.label_Cellchg_OT_Second = new Label();
            this.label272 = new Label();
            this.label273 = new Label();
            this.label274 = new Label();
            this.label275 = new Label();
            this.label_Vbat_UV_Second = new Label();
            this.label_Vcell_UV_Second = new Label();
            this.label_Vbat_OV_Second = new Label();
            this.label_Vcell_OV_Second = new Label();
            this.groupBox_Present = new GroupBox();
            this.textBox_Fault_Third1 = new TextBox();
            this.textBox_Fault_Third2 = new TextBox();
            this.textBox_Fault_Third3 = new TextBox();
            this.textBox_Fault_Third4 = new TextBox();
            this.label410 = new Label();
            this.button_ProtectPresentClear = new Button();
            this.textBox_Fault_First1 = new TextBox();
            this.textBox_Fault_First2 = new TextBox();
            this.textBox_Fault_First3 = new TextBox();
            this.textBox_Fault_First4 = new TextBox();
            this.label_Fault_Reacent = new Label();
            this.textBox_Fault_Second1 = new TextBox();
            this.textBox_Fault_Second2 = new TextBox();
            this.textBox_Fault_Second3 = new TextBox();
            this.textBox_Fault_Second4 = new TextBox();
            this.label_Warn_Reacent = new Label();
            this.groupBox5 = new GroupBox();
            this.label_Res_First = new Label();
            this.label_Vdelta_Op_First = new Label();
            this.label_Soc_Up_First = new Label();
            this.label168 = new Label();
            this.label169 = new Label();
            this.label_Tmos_OTP_First = new Label();
            this.label173 = new Label();
            this.label221 = new Label();
            this.label_Celldsg_UT_First = new Label();
            this.label_Celldsg_OT_First = new Label();
            this.label230 = new Label();
            this.label231 = new Label();
            this.label233 = new Label();
            this.label234 = new Label();
            this.label235 = new Label();
            this.label_DSG_OC_First = new Label();
            this.label237 = new Label();
            this.label_CHG_OC_First = new Label();
            this.label_Cellchg_UT_First = new Label();
            this.label_Cellchg_OT_First = new Label();
            this.label243 = new Label();
            this.label244 = new Label();
            this.label245 = new Label();
            this.label246 = new Label();
            this.label_Vbat_UV_First = new Label();
            this.label_Vcell_UV_First = new Label();
            this.label_Vbat_OV_First = new Label();
            this.label_Vcell_OV_First = new Label();
            this.groupBox4 = new GroupBox();
            this.label113 = new Label();
            this.Balanced_VC32 = new Label();
            this.label119 = new Label();
            this.Balanced_VC31 = new Label();
            this.label118 = new Label();
            this.Balanced_VC30 = new Label();
            this.Balanced_VC17 = new Label();
            this.Balanced_VC18 = new Label();
            this.label124 = new Label();
            this.Balanced_VC19 = new Label();
            this.label133 = new Label();
            this.Balanced_VC20 = new Label();
            this.label135 = new Label();
            this.label136 = new Label();
            this.label137 = new Label();
            this.label138 = new Label();
            this.label139 = new Label();
            this.label140 = new Label();
            this.label141 = new Label();
            this.label142 = new Label();
            this.label143 = new Label();
            this.label144 = new Label();
            this.label145 = new Label();
            this.Balanced_VC21 = new Label();
            this.Balanced_VC22 = new Label();
            this.Balanced_VC23 = new Label();
            this.Balanced_VC24 = new Label();
            this.Balanced_VC25 = new Label();
            this.Balanced_VC26 = new Label();
            this.Balanced_VC27 = new Label();
            this.Balanced_VC28 = new Label();
            this.Balanced_VC29 = new Label();
            this.groupBox3 = new GroupBox();
            this.label111 = new Label();
            this.label_VC31 = new Label();
            this.label47 = new Label();
            this.label114 = new Label();
            this.label_VC30 = new Label();
            this.label_VC32 = new Label();
            this.label_VC17 = new Label();
            this.label_VC18 = new Label();
            this.label69 = new Label();
            this.label_VC19 = new Label();
            this.label93 = new Label();
            this.label_VC20 = new Label();
            this.label95 = new Label();
            this.label96 = new Label();
            this.label97 = new Label();
            this.label98 = new Label();
            this.label99 = new Label();
            this.label100 = new Label();
            this.label101 = new Label();
            this.label102 = new Label();
            this.label103 = new Label();
            this.label104 = new Label();
            this.label105 = new Label();
            this.label_VC21 = new Label();
            this.label_VC22 = new Label();
            this.label_VC23 = new Label();
            this.label_VC24 = new Label();
            this.label_VC25 = new Label();
            this.label_VC26 = new Label();
            this.label_VC27 = new Label();
            this.label_VC28 = new Label();
            this.label_VC29 = new Label();
            this.groupBox_ERROR = new GroupBox();
            this.label_Err_Res6 = new Label();
            this.label154 = new Label();
            this.label_Err_App = new Label();
            this.label158 = new Label();
            this.label_Err_BlueTooth = new Label();
            this.label161 = new Label();
            this.label_Err_Res5 = new Label();
            this.label166 = new Label();
            this.label_Err_Res4 = new Label();
            this.label170 = new Label();
            this.label_Err_Res3 = new Label();
            this.label228 = new Label();
            this.label_Err_Res1 = new Label();
            this.label_Err_Res2 = new Label();
            this.label121 = new Label();
            this.label_Reserved1_ref = new Label();
            this.label_Reserved3_ref = new Label();
            this.label_Err_CBC = new Label();
            this.label_Reserved4_ref = new Label();
            this.label_Err_Screen = new Label();
            this.label_Err_Flash = new Label();
            this.label_Err_Wifi = new Label();
            this.label_Err_LSE = new Label();
            this.label247 = new Label();
            this.label311 = new Label();
            this.label248 = new Label();
            this.label_Err_Balanced = new Label();
            this.label249 = new Label();
            this.label_Err_E2P_Store = new Label();
            this.label251 = new Label();
            this.label123 = new Label();
            this.label_Err_HSE = new Label();
            this.label253 = new Label();
            this.label_Err_ADC = new Label();
            this.label_Err_Upper = new Label();
            this.label327 = new Label();
            this.label257 = new Label();
            this.label_Err_Client1 = new Label();
            this.label_Err_Can = new Label();
            this.label134 = new Label();
            this.label_Err_SPI = new Label();
            this.label325 = new Label();
            this.label_Err_E2P_COM = new Label();
            this.label_Reserved2_ref = new Label();
            this.label_AFE_ComError_ref = new Label();
            this.label229 = new Label();
            this.label_Err_AFE1 = new Label();
            this.label_CBC_ref = new Label();
            this.label_Err_AFE2 = new Label();
            this.groupBox_Balance = new GroupBox();
            this.label219 = new Label();
            this.Balanced_VC15 = new Label();
            this.label120 = new Label();
            this.Balanced_VC16 = new Label();
            this.label30 = new Label();
            this.Balanced_VC1 = new Label();
            this.Balanced_VC2 = new Label();
            this.Balanced_VC3 = new Label();
            this.label36 = new Label();
            this.Balanced_VC4 = new Label();
            this.label41 = new Label();
            this.Balanced_VC5 = new Label();
            this.label43 = new Label();
            this.label45 = new Label();
            this.label49 = new Label();
            this.label50 = new Label();
            this.label51 = new Label();
            this.label52 = new Label();
            this.label53 = new Label();
            this.label54 = new Label();
            this.label55 = new Label();
            this.label56 = new Label();
            this.label61 = new Label();
            this.Balanced_VC6 = new Label();
            this.Balanced_VC7 = new Label();
            this.Balanced_VC8 = new Label();
            this.Balanced_VC9 = new Label();
            this.Balanced_VC10 = new Label();
            this.Balanced_VC11 = new Label();
            this.Balanced_VC12 = new Label();
            this.Balanced_VC13 = new Label();
            this.Balanced_VC14 = new Label();
            this.groupBox_Temperature = new GroupBox();
            this.label157 = new Label();
            this.label_TempMos = new Label();
            this.label_TempEnv2 = new Label();
            this.label160 = new Label();
            this.label_TempEnv3 = new Label();
            this.label_TempEnv1 = new Label();
            this.label163 = new Label();
            this.label164 = new Label();
            this.label155 = new Label();
            this.label_Temp6 = new Label();
            this.label_TempMin = new Label();
            this.label_TempMin_ref = new Label();
            this.label_TempMax = new Label();
            this.label_TempMax_ref = new Label();
            this.label_Temp_mos_ref = new Label();
            this.label_Temp3 = new Label();
            this.label_Temp5 = new Label();
            this.label_Temp4 = new Label();
            this.label_Temp2 = new Label();
            this.label_Temp1 = new Label();
            this.groupBox_set = new GroupBox();
            this.label_BMS_Source_Func_Status = new Label();
            this.label_Sleep_Func_Status = new Label();
            this.label_AFE1_Func_Status = new Label();
            this.label_Balance_Func_Status = new Label();
            this.label_AFE2_Func_Status = new Label();
            this.label_Cool_Func_Status = new Label();
            this.label239 = new Label();
            this.label_Heated_Func_Status = new Label();
            this.label236 = new Label();
            this.label_Relay_Func_Status = new Label();
            this.label227 = new Label();
            this.label_MosRelay_Func_Status = new Label();
            this.label_SocFixed_Func_Status = new Label();
            this.button_AFE2_Func_Close = new Button();
            this.button_AFE2_Func_Open = new Button();
            this.button_BMS_Source_Func_Close = new Button();
            this.button_BMS_Source_Func_Open = new Button();
            this.button_Sleep_Func_Close = new Button();
            this.button_Sleep_Func_Open = new Button();
            this.label162 = new Label();
            this.label167 = new Label();
            this.button_AFE1_Func_Close = new Button();
            this.button_AFE1_Func_Open = new Button();
            this.button_Balance_Func_Close = new Button();
            this.button_Balance_Func_Open = new Button();
            this.button_Cool_Func_Close = new Button();
            this.label159 = new Label();
            this.button_Cool_Func_Open = new Button();
            this.button_Heated_Func_Close = new Button();
            this.button_SocFixed_Func_Close = new Button();
            this.label156 = new Label();
            this.button_SocFixed_Func_Open = new Button();
            this.button_Relay_Func_Close = new Button();
            this.label153 = new Label();
            this.button_Relay_Func_Open = new Button();
            this.button_MosRelay_Func_Close = new Button();
            this.label_CtrlAFEShut = new Label();
            this.label_CtrlAFEWake = new Label();
            this.label_CtrlBalance = new Label();
            this.label_CtrlHeat = new Label();
            this.button_Heated_Func_Open = new Button();
            this.label_CtrlStartup = new Label();
            this.tabPage6 = new TabPage();
            this.toolStrip_SwitchCtrl = new ToolStrip();
            this.toolStripLabel_RxCnt6 = new ToolStripLabel();
            this.toolStripLabel3 = new ToolStripLabel();
            this.toolStripLabel_TxCnt6 = new ToolStripLabel();
            this.groupBox34 = new GroupBox();
            this.button_Low_Switch30 = new Button();
            this.button_High_Switch30 = new Button();
            this.button_Low_Switch32 = new Button();
            this.button_High_Switch32 = new Button();
            this.button_Low_Switch31 = new Button();
            this.button_High_Switch31 = new Button();
            this.button_Low_Switch29 = new Button();
            this.button_High_Switch29 = new Button();
            this.button_Low_Switch28 = new Button();
            this.button_High_Switch28 = new Button();
            this.button_Low_Switch27 = new Button();
            this.button_High_Switch27 = new Button();
            this.button_Low_Switch24 = new Button();
            this.button_High_Switch24 = new Button();
            this.button_Low_Switch26 = new Button();
            this.button_High_Switch26 = new Button();
            this.button_Low_Switch25 = new Button();
            this.button_High_Switch25 = new Button();
            this.button_Low_Switch23 = new Button();
            this.button_High_Switch23 = new Button();
            this.button_Low_Switch22 = new Button();
            this.button_High_Switch22 = new Button();
            this.button_Low_Switch21 = new Button();
            this.button_High_Switch21 = new Button();
            this.button_Low_Switch20 = new Button();
            this.button_Low_Switch19 = new Button();
            this.button_High_Switch19 = new Button();
            this.button_Low_Switch18 = new Button();
            this.button_High_Switch18 = new Button();
            this.button_Low_Switch17 = new Button();
            this.button_High_Switch20 = new Button();
            this.button_High_Switch17 = new Button();
            this.label_Switch32 = new Label();
            this.label_Switch31 = new Label();
            this.label_Switch29 = new Label();
            this.label_Switch28 = new Label();
            this.label_Switch30 = new Label();
            this.label_Switch27 = new Label();
            this.label_Switch26 = new Label();
            this.label_Switch25 = new Label();
            this.label_Switch23 = new Label();
            this.label_Switch22 = new Label();
            this.label_Switch24 = new Label();
            this.label_Switch21 = new Label();
            this.label_Switch20 = new Label();
            this.label_Switch18 = new Label();
            this.label_Switch17 = new Label();
            this.label_Switch19 = new Label();
            this.label426 = new Label();
            this.label427 = new Label();
            this.label428 = new Label();
            this.label429 = new Label();
            this.label430 = new Label();
            this.label431 = new Label();
            this.label438 = new Label();
            this.label440 = new Label();
            this.label442 = new Label();
            this.label445 = new Label();
            this.label446 = new Label();
            this.label447 = new Label();
            this.label448 = new Label();
            this.label449 = new Label();
            this.label450 = new Label();
            this.label451 = new Label();
            this.label452 = new Label();
            this.label453 = new Label();
            this.label454 = new Label();
            this.label_Switch16 = new Label();
            this.label_Switch15 = new Label();
            this.label_Switch13 = new Label();
            this.label_Switch12 = new Label();
            this.label_Switch14 = new Label();
            this.label_Switch11 = new Label();
            this.button_Low_Switch14 = new Button();
            this.button_High_Switch14 = new Button();
            this.button_Low_Switch16 = new Button();
            this.button_High_Switch16 = new Button();
            this.button_Low_Switch15 = new Button();
            this.button_High_Switch15 = new Button();
            this.label414 = new Label();
            this.label415 = new Label();
            this.button_Low_Switch13 = new Button();
            this.button_High_Switch13 = new Button();
            this.button_Low_Switch12 = new Button();
            this.button_High_Switch12 = new Button();
            this.button_Low_Switch11 = new Button();
            this.label416 = new Label();
            this.button_High_Switch11 = new Button();
            this.label417 = new Label();
            this.label418 = new Label();
            this.label419 = new Label();
            this.label_Switch10 = new Label();
            this.label_Switch9 = new Label();
            this.label_Switch7 = new Label();
            this.label_Switch6 = new Label();
            this.label_Switch8 = new Label();
            this.label_Switch5 = new Label();
            this.label288 = new Label();
            this.label_Switch4 = new Label();
            this.label295 = new Label();
            this.label_Switch2 = new Label();
            this.label298 = new Label();
            this.label_Switch1 = new Label();
            this.label_Switch3 = new Label();
            this.button_Low_Switch8 = new Button();
            this.button_High_Switch8 = new Button();
            this.button_Low_Switch10 = new Button();
            this.button_High_Switch10 = new Button();
            this.button_Low_Switch9 = new Button();
            this.button_High_Switch9 = new Button();
            this.label305 = new Label();
            this.label306 = new Label();
            this.button_Low_Switch7 = new Button();
            this.button_High_Switch7 = new Button();
            this.button_Low_Switch6 = new Button();
            this.button_High_Switch6 = new Button();
            this.button_Low_Switch5 = new Button();
            this.label307 = new Label();
            this.button_High_Switch5 = new Button();
            this.button_Low_Switch4 = new Button();
            this.button_Low_Switch3 = new Button();
            this.label308 = new Label();
            this.button_High_Switch3 = new Button();
            this.button_Low_Switch2 = new Button();
            this.label310 = new Label();
            this.button_High_Switch2 = new Button();
            this.button_Low_Switch1 = new Button();
            this.label312 = new Label();
            this.label314 = new Label();
            this.label316 = new Label();
            this.label318 = new Label();
            this.button_High_Switch4 = new Button();
            this.label320 = new Label();
            this.button_High_Switch1 = new Button();
            this.tabPage2 = new TabPage();
            this.toolStrip_Calib1 = new ToolStrip();
            this.toolStripLabel_RxCnt2 = new ToolStripLabel();
            this.toolStripLabel35 = new ToolStripLabel();
            this.toolStripLabel_TxCnt2 = new ToolStripLabel();
            this.groupBox_Vcell_cal = new GroupBox();
            this.groupBox30 = new GroupBox();
            this.textBox_Vy2_32 = new TextBox();
            this.textBox_Vx2_32 = new TextBox();
            this.textBox_Vy1_32 = new TextBox();
            this.textBox_Vx1_32 = new TextBox();
            this.label48 = new Label();
            this.button_calc_cell32 = new Button();
            this.button_cali_cell32 = new Button();
            this.label59 = new Label();
            this.textBox_cail_cell32_b = new TextBox();
            this.label92 = new Label();
            this.label106 = new Label();
            this.textBox_cail_cell32_k = new TextBox();
            this.groupBox31 = new GroupBox();
            this.textBox_Vy2_31 = new TextBox();
            this.textBox_Vx2_31 = new TextBox();
            this.textBox_Vy1_31 = new TextBox();
            this.textBox_Vx1_31 = new TextBox();
            this.label107 = new Label();
            this.button_cali_cell31 = new Button();
            this.textBox_cail_cell31_b = new TextBox();
            this.label108 = new Label();
            this.label109 = new Label();
            this.button_calc_cell31 = new Button();
            this.label110 = new Label();
            this.textBox_cail_cell31_k = new TextBox();
            this.button_Reset_AFE2 = new Button();
            this.button_Reset_Vbus = new Button();
            this.button_Reset_AFE1 = new Button();
            this.button_Read_Vafe_bus = new Button();
            this.groupBox1 = new GroupBox();
            this.button_calc_Vbus = new Button();
            this.textBox_Vy2_Vbus = new TextBox();
            this.button_cali_Vbus = new Button();
            this.textBox_Vx2_Vbus = new TextBox();
            this.textBox_cail_Vbus_b = new TextBox();
            this.label4 = new Label();
            this.label5 = new Label();
            this.textBox_Vy1_Vbus = new TextBox();
            this.label6 = new Label();
            this.label21 = new Label();
            this.textBox_Vx1_Vbus = new TextBox();
            this.textBox_cail_Vbus_k = new TextBox();
            this.groupBox22 = new GroupBox();
            this.textBox_Vy2_AFE2 = new TextBox();
            this.textBox_Vx2_AFE2 = new TextBox();
            this.textBox_Vy1_AFE2 = new TextBox();
            this.textBox_Vx1_AFE2 = new TextBox();
            this.label384 = new Label();
            this.button_calc_AFE2 = new Button();
            this.button_cali_AFE2 = new Button();
            this.label385 = new Label();
            this.textBox_cail_AFE2_b = new TextBox();
            this.label386 = new Label();
            this.label387 = new Label();
            this.textBox_cail_AFE2_k = new TextBox();
            this.groupBox23 = new GroupBox();
            this.textBox_Vy2_AFE1 = new TextBox();
            this.textBox_Vx2_AFE1 = new TextBox();
            this.textBox_Vy1_AFE1 = new TextBox();
            this.textBox_Vx1_AFE1 = new TextBox();
            this.label388 = new Label();
            this.button_cali_AFE1 = new Button();
            this.textBox_cail_AFE1_b = new TextBox();
            this.label389 = new Label();
            this.label390 = new Label();
            this.button_calc_AFE1 = new Button();
            this.label391 = new Label();
            this.textBox_cail_AFE1_k = new TextBox();
            this.groupBox20 = new GroupBox();
            this.textBox_Vy2_30 = new TextBox();
            this.textBox_Vx2_30 = new TextBox();
            this.textBox_Vy1_30 = new TextBox();
            this.textBox_Vx1_30 = new TextBox();
            this.label376 = new Label();
            this.button_calc_cell30 = new Button();
            this.button_cali_cell30 = new Button();
            this.label377 = new Label();
            this.textBox_cail_cell30_b = new TextBox();
            this.label378 = new Label();
            this.label379 = new Label();
            this.textBox_cail_cell30_k = new TextBox();
            this.groupBox13 = new GroupBox();
            this.textBox_Vy2_28 = new TextBox();
            this.textBox_Vx2_28 = new TextBox();
            this.textBox_Vy1_28 = new TextBox();
            this.textBox_Vx1_28 = new TextBox();
            this.label348 = new Label();
            this.button_calc_cell28 = new Button();
            this.button_cali_cell28 = new Button();
            this.label349 = new Label();
            this.textBox_cail_cell28_b = new TextBox();
            this.label350 = new Label();
            this.label351 = new Label();
            this.textBox_cail_cell28_k = new TextBox();
            this.groupBox21 = new GroupBox();
            this.textBox_Vy2_29 = new TextBox();
            this.textBox_Vx2_29 = new TextBox();
            this.textBox_Vy1_29 = new TextBox();
            this.textBox_Vx1_29 = new TextBox();
            this.label380 = new Label();
            this.button_cali_cell29 = new Button();
            this.textBox_cail_cell29_b = new TextBox();
            this.label381 = new Label();
            this.label382 = new Label();
            this.button_calc_cell29 = new Button();
            this.label383 = new Label();
            this.textBox_cail_cell29_k = new TextBox();
            this.groupBox8 = new GroupBox();
            this.textBox_Vy2_21 = new TextBox();
            this.textBox_Vx2_21 = new TextBox();
            this.textBox_Vy1_21 = new TextBox();
            this.textBox_Vx1_21 = new TextBox();
            this.label328 = new Label();
            this.button_calc_cell21 = new Button();
            this.button_cali_cell21 = new Button();
            this.label329 = new Label();
            this.textBox_cail_cell21_b = new TextBox();
            this.label330 = new Label();
            this.label331 = new Label();
            this.textBox_cail_cell21_k = new TextBox();
            this.groupBox14 = new GroupBox();
            this.textBox_Vy2_23 = new TextBox();
            this.textBox_Vx2_23 = new TextBox();
            this.textBox_Vy1_23 = new TextBox();
            this.textBox_Vx1_23 = new TextBox();
            this.label352 = new Label();
            this.button_calc_cell23 = new Button();
            this.button_cali_cell23 = new Button();
            this.label353 = new Label();
            this.textBox_cail_cell23_b = new TextBox();
            this.label354 = new Label();
            this.label355 = new Label();
            this.textBox_cail_cell23_k = new TextBox();
            this.groupBox_Vcell16 = new GroupBox();
            this.textBox_Vy2_16 = new TextBox();
            this.textBox_Vx2_16 = new TextBox();
            this.textBox_Vy1_16 = new TextBox();
            this.textBox_Vx1_16 = new TextBox();
            this.label172 = new Label();
            this.button_calc_cell16 = new Button();
            this.button_cali_cell16 = new Button();
            this.label218 = new Label();
            this.textBox_cail_cell16_b = new TextBox();
            this.label220 = new Label();
            this.label222 = new Label();
            this.textBox_cail_cell16_k = new TextBox();
            this.groupBox15 = new GroupBox();
            this.textBox_Vy2_27 = new TextBox();
            this.textBox_Vx2_27 = new TextBox();
            this.textBox_Vy1_27 = new TextBox();
            this.textBox_Vx1_27 = new TextBox();
            this.label356 = new Label();
            this.button_cali_cell27 = new Button();
            this.textBox_cail_cell27_b = new TextBox();
            this.label357 = new Label();
            this.label358 = new Label();
            this.button_calc_cell27 = new Button();
            this.label359 = new Label();
            this.textBox_cail_cell27_k = new TextBox();
            this.groupBox9 = new GroupBox();
            this.textBox_Vy2_20 = new TextBox();
            this.textBox_Vx2_20 = new TextBox();
            this.textBox_Vy1_20 = new TextBox();
            this.textBox_Vx1_20 = new TextBox();
            this.label332 = new Label();
            this.button_cali_cell20 = new Button();
            this.textBox_cail_cell20_b = new TextBox();
            this.label333 = new Label();
            this.label334 = new Label();
            this.button_calc_cell20 = new Button();
            this.label335 = new Label();
            this.textBox_cail_cell20_k = new TextBox();
            this.groupBox16 = new GroupBox();
            this.textBox_Vy2_26 = new TextBox();
            this.textBox_Vx2_26 = new TextBox();
            this.textBox_Vy1_26 = new TextBox();
            this.textBox_Vx1_26 = new TextBox();
            this.label360 = new Label();
            this.button_calc_cell26 = new Button();
            this.button_cali_cell26 = new Button();
            this.label361 = new Label();
            this.textBox_cail_cell26_b = new TextBox();
            this.label362 = new Label();
            this.label363 = new Label();
            this.textBox_cail_cell26_k = new TextBox();
            this.groupBox_Vcell14 = new GroupBox();
            this.textBox_Vy2_14 = new TextBox();
            this.textBox_Vx2_14 = new TextBox();
            this.textBox_Vy1_14 = new TextBox();
            this.textBox_Vx1_14 = new TextBox();
            this.label192 = new Label();
            this.button_calc_cell14 = new Button();
            this.button_cali_cell14 = new Button();
            this.label193 = new Label();
            this.textBox_cail_cell14_b = new TextBox();
            this.label88 = new Label();
            this.label89 = new Label();
            this.textBox_cail_cell14_k = new TextBox();
            this.groupBox17 = new GroupBox();
            this.textBox_Vy2_22 = new TextBox();
            this.textBox_Vx2_22 = new TextBox();
            this.textBox_Vy1_22 = new TextBox();
            this.textBox_Vx1_22 = new TextBox();
            this.label364 = new Label();
            this.button_cali_cell22 = new Button();
            this.textBox_cail_cell22_b = new TextBox();
            this.label365 = new Label();
            this.label366 = new Label();
            this.button_calc_cell22 = new Button();
            this.label367 = new Label();
            this.textBox_cail_cell22_k = new TextBox();
            this.groupBox18 = new GroupBox();
            this.textBox_Vy2_25 = new TextBox();
            this.textBox_Vx2_25 = new TextBox();
            this.textBox_Vy1_25 = new TextBox();
            this.textBox_Vx1_25 = new TextBox();
            this.label368 = new Label();
            this.button_calc_cell25 = new Button();
            this.button_cali_cell25 = new Button();
            this.label369 = new Label();
            this.textBox_cail_cell25_b = new TextBox();
            this.label370 = new Label();
            this.label371 = new Label();
            this.textBox_cail_cell25_k = new TextBox();
            this.groupBox10 = new GroupBox();
            this.textBox_Vy2_19 = new TextBox();
            this.textBox_Vx2_19 = new TextBox();
            this.textBox_Vy1_19 = new TextBox();
            this.textBox_Vx1_19 = new TextBox();
            this.label336 = new Label();
            this.button_calc_cell19 = new Button();
            this.button_cali_cell19 = new Button();
            this.label337 = new Label();
            this.textBox_cail_cell19_b = new TextBox();
            this.label338 = new Label();
            this.label339 = new Label();
            this.textBox_cail_cell19_k = new TextBox();
            this.groupBox19 = new GroupBox();
            this.textBox_Vy2_24 = new TextBox();
            this.textBox_Vx2_24 = new TextBox();
            this.textBox_Vy1_24 = new TextBox();
            this.textBox_Vx1_24 = new TextBox();
            this.button_calc_cell24 = new Button();
            this.label372 = new Label();
            this.button_cali_cell24 = new Button();
            this.textBox_cail_cell24_b = new TextBox();
            this.label373 = new Label();
            this.label374 = new Label();
            this.label375 = new Label();
            this.textBox_cail_cell24_k = new TextBox();
            this.groupBox_Vcell15 = new GroupBox();
            this.textBox_Vy2_15 = new TextBox();
            this.textBox_Vx2_15 = new TextBox();
            this.textBox_Vy1_15 = new TextBox();
            this.textBox_Vx1_15 = new TextBox();
            this.label223 = new Label();
            this.button_cali_cell15 = new Button();
            this.textBox_cail_cell15_b = new TextBox();
            this.label224 = new Label();
            this.label225 = new Label();
            this.button_calc_cell15 = new Button();
            this.label226 = new Label();
            this.textBox_cail_cell15_k = new TextBox();
            this.groupBox11 = new GroupBox();
            this.textBox_Vy2_18 = new TextBox();
            this.textBox_Vx2_18 = new TextBox();
            this.textBox_Vy1_18 = new TextBox();
            this.textBox_Vx1_18 = new TextBox();
            this.label340 = new Label();
            this.button_calc_cell18 = new Button();
            this.button_cali_cell18 = new Button();
            this.label341 = new Label();
            this.textBox_cail_cell18_b = new TextBox();
            this.label342 = new Label();
            this.label343 = new Label();
            this.textBox_cail_cell18_k = new TextBox();
            this.groupBox12 = new GroupBox();
            this.textBox_Vy2_17 = new TextBox();
            this.textBox_Vx2_17 = new TextBox();
            this.textBox_Vy1_17 = new TextBox();
            this.textBox_Vx1_17 = new TextBox();
            this.button_calc_cell17 = new Button();
            this.label344 = new Label();
            this.button_cali_cell17 = new Button();
            this.textBox_cail_cell17_b = new TextBox();
            this.label345 = new Label();
            this.label346 = new Label();
            this.label347 = new Label();
            this.textBox_cail_cell17_k = new TextBox();
            this.groupBox_Vcell13 = new GroupBox();
            this.textBox_Vy2_13 = new TextBox();
            this.textBox_Vx2_13 = new TextBox();
            this.textBox_Vy1_13 = new TextBox();
            this.textBox_Vx1_13 = new TextBox();
            this.label182 = new Label();
            this.button_cali_cell13 = new Button();
            this.textBox_cail_cell13_b = new TextBox();
            this.label183 = new Label();
            this.label90 = new Label();
            this.button_calc_cell13 = new Button();
            this.label91 = new Label();
            this.textBox_cail_cell13_k = new TextBox();
            this.groupBox_Vcell12 = new GroupBox();
            this.textBox_Vy2_12 = new TextBox();
            this.textBox_Vx2_12 = new TextBox();
            this.textBox_Vy1_12 = new TextBox();
            this.textBox_Vx1_12 = new TextBox();
            this.label200 = new Label();
            this.button_calc_cell12 = new Button();
            this.button_cali_cell12 = new Button();
            this.label201 = new Label();
            this.textBox_cail_cell12_b = new TextBox();
            this.label76 = new Label();
            this.label77 = new Label();
            this.textBox_cail_cell12_k = new TextBox();
            this.groupBox_Vcell6 = new GroupBox();
            this.textBox_Vy2_6 = new TextBox();
            this.textBox_Vx2_6 = new TextBox();
            this.textBox_Vy1_6 = new TextBox();
            this.textBox_Vx1_6 = new TextBox();
            this.label196 = new Label();
            this.button_calc_cell6 = new Button();
            this.button_cali_cell6 = new Button();
            this.label197 = new Label();
            this.textBox_cail_cell6_b = new TextBox();
            this.label74 = new Label();
            this.label75 = new Label();
            this.textBox_cail_cell6_k = new TextBox();
            this.groupBox_Vcell11 = new GroupBox();
            this.textBox_Vy2_11 = new TextBox();
            this.textBox_Vx2_11 = new TextBox();
            this.textBox_Vy1_11 = new TextBox();
            this.textBox_Vx1_11 = new TextBox();
            this.label190 = new Label();
            this.button_calc_cell11 = new Button();
            this.button_cali_cell11 = new Button();
            this.label191 = new Label();
            this.textBox_cail_cell11_b = new TextBox();
            this.label78 = new Label();
            this.label79 = new Label();
            this.textBox_cail_cell11_k = new TextBox();
            this.groupBox_Vcell5 = new GroupBox();
            this.textBox_Vy2_5 = new TextBox();
            this.textBox_Vx2_5 = new TextBox();
            this.textBox_Vy1_5 = new TextBox();
            this.textBox_Vx1_5 = new TextBox();
            this.label186 = new Label();
            this.button_calc_cell5 = new Button();
            this.button_cali_cell5 = new Button();
            this.label187 = new Label();
            this.textBox_cail_cell5_b = new TextBox();
            this.label72 = new Label();
            this.label73 = new Label();
            this.textBox_cail_cell5_k = new TextBox();
            this.groupBox_Vcell1 = new GroupBox();
            this.textBox_Vy2_1 = new TextBox();
            this.button_calc_cell1 = new Button();
            this.textBox_Vx2_1 = new TextBox();
            this.label174 = new Label();
            this.textBox_Vy1_1 = new TextBox();
            this.button_cali_cell1 = new Button();
            this.textBox_Vx1_1 = new TextBox();
            this.textBox_cail_cell1_b = new TextBox();
            this.label175 = new Label();
            this.label32 = new Label();
            this.label31 = new Label();
            this.textBox_cail_cell1_k = new TextBox();
            this.groupBox_Vcell10 = new GroupBox();
            this.textBox_Vy2_10 = new TextBox();
            this.textBox_Vx2_10 = new TextBox();
            this.textBox_Vy1_10 = new TextBox();
            this.textBox_Vx1_10 = new TextBox();
            this.button_calc_cell10 = new Button();
            this.label180 = new Label();
            this.button_cali_cell10 = new Button();
            this.textBox_cail_cell10_b = new TextBox();
            this.label181 = new Label();
            this.label80 = new Label();
            this.label81 = new Label();
            this.textBox_cail_cell10_k = new TextBox();
            this.groupBox_Vcell4 = new GroupBox();
            this.textBox_Vy2_4 = new TextBox();
            this.textBox_Vx2_4 = new TextBox();
            this.textBox_Vy1_4 = new TextBox();
            this.textBox_Vx1_4 = new TextBox();
            this.button_calc_cell4 = new Button();
            this.label176 = new Label();
            this.button_cali_cell4 = new Button();
            this.textBox_cail_cell4_b = new TextBox();
            this.label177 = new Label();
            this.label70 = new Label();
            this.label71 = new Label();
            this.textBox_cail_cell4_k = new TextBox();
            this.groupBox_Vcell8 = new GroupBox();
            this.textBox_Vy2_8 = new TextBox();
            this.textBox_Vx2_8 = new TextBox();
            this.textBox_Vy1_8 = new TextBox();
            this.textBox_Vx1_8 = new TextBox();
            this.label188 = new Label();
            this.button_calc_cell8 = new Button();
            this.button_cali_cell8 = new Button();
            this.label189 = new Label();
            this.textBox_cail_cell8_b = new TextBox();
            this.label82 = new Label();
            this.label83 = new Label();
            this.textBox_cail_cell8_k = new TextBox();
            this.button_Reset_Vcell = new Button();
            this.groupBox_Vcell7 = new GroupBox();
            this.textBox_Vy2_7 = new TextBox();
            this.textBox_Vx2_7 = new TextBox();
            this.textBox_Vy1_7 = new TextBox();
            this.textBox_Vx1_7 = new TextBox();
            this.button_calc_cell7 = new Button();
            this.label178 = new Label();
            this.button_cali_cell7 = new Button();
            this.textBox_cail_cell7_b = new TextBox();
            this.label179 = new Label();
            this.label84 = new Label();
            this.label85 = new Label();
            this.textBox_cail_cell7_k = new TextBox();
            this.groupBox_Vcell9 = new GroupBox();
            this.textBox_Vy2_9 = new TextBox();
            this.textBox_Vx2_9 = new TextBox();
            this.textBox_Vy1_9 = new TextBox();
            this.textBox_Vx1_9 = new TextBox();
            this.label198 = new Label();
            this.button_calc_cell9 = new Button();
            this.button_cali_cell9 = new Button();
            this.label199 = new Label();
            this.textBox_cail_cell9_b = new TextBox();
            this.label86 = new Label();
            this.label87 = new Label();
            this.textBox_cail_cell9_k = new TextBox();
            this.groupBox_Vcell3 = new GroupBox();
            this.textBox_Vy2_3 = new TextBox();
            this.label194 = new Label();
            this.textBox_Vx2_3 = new TextBox();
            this.button_calc_cell3 = new Button();
            this.textBox_Vy1_3 = new TextBox();
            this.button_cali_cell3 = new Button();
            this.textBox_Vx1_3 = new TextBox();
            this.label195 = new Label();
            this.textBox_cail_cell3_b = new TextBox();
            this.label42 = new Label();
            this.label62 = new Label();
            this.textBox_cail_cell3_k = new TextBox();
            this.groupBox_Vcell2 = new GroupBox();
            this.textBox_Vy2_2 = new TextBox();
            this.textBox_Vx2_2 = new TextBox();
            this.textBox_Vy1_2 = new TextBox();
            this.textBox_Vx1_2 = new TextBox();
            this.label184 = new Label();
            this.button_calc_cell2 = new Button();
            this.button_cali_cell2 = new Button();
            this.label185 = new Label();
            this.textBox_cail_cell2_b = new TextBox();
            this.label35 = new Label();
            this.label37 = new Label();
            this.textBox_cail_cell2_k = new TextBox();
            this.button_Read_Vcell = new Button();
            this.tabPage5 = new TabPage();
            this.toolStrip_Protect = new ToolStrip();
            this.toolStripLabel_RxCnt4 = new ToolStripLabel();
            this.toolStripLabel19 = new ToolStripLabel();
            this.toolStripLabel_TxCnt4 = new ToolStripLabel();
            this.groupBox_Vall_I = new GroupBox();
            this.button_Ichg_reset = new Button();
            this.button_Idsg_reset = new Button();
            this.button_Current_read = new Button();
            this.groupBox_Idsg = new GroupBox();
            this.button_calc_Idsg = new Button();
            this.textBox_Vy2_Idsg = new TextBox();
            this.button_cali_Idsg = new Button();
            this.textBox_Vx2_Idsg = new TextBox();
            this.textBox_cail_Idsg_b = new TextBox();
            this.label206 = new Label();
            this.label67 = new Label();
            this.textBox_Vy1_Idsg = new TextBox();
            this.label68 = new Label();
            this.label207 = new Label();
            this.textBox_Vx1_Idsg = new TextBox();
            this.textBox_cail_Idsg_k = new TextBox();
            this.groupBox_Ichg = new GroupBox();
            this.button_calc_Ichg = new Button();
            this.textBox_Vy2_Ichg = new TextBox();
            this.button_cali_Ichg = new Button();
            this.textBox_Vx2_Ichg = new TextBox();
            this.textBox_cail_Ichg_b = new TextBox();
            this.label204 = new Label();
            this.label65 = new Label();
            this.textBox_Vy1_Ichg = new TextBox();
            this.label66 = new Label();
            this.label205 = new Label();
            this.textBox_Vx1_Ichg = new TextBox();
            this.textBox_cail_Ichg_k = new TextBox();
            this.groupBox_temp_cal = new GroupBox();
            this.groupBox28 = new GroupBox();
            this.textBox_Vy2_tempEnv3 = new TextBox();
            this.button_calc_tempEnv3 = new Button();
            this.textBox_Vx2_tempEnv3 = new TextBox();
            this.button_cali_tempEnv3 = new Button();
            this.label402 = new Label();
            this.textBox_tempEnv3_b = new TextBox();
            this.textBox_Vy1_tempEnv3 = new TextBox();
            this.label403 = new Label();
            this.label404 = new Label();
            this.textBox_Vx1_tempEnv3 = new TextBox();
            this.label405 = new Label();
            this.textBox_tempEnv3_k = new TextBox();
            this.groupBox25 = new GroupBox();
            this.textBox_Vy2_temp6 = new TextBox();
            this.button_calc_temp6 = new Button();
            this.textBox_Vx2_temp6 = new TextBox();
            this.button_cali_temp6 = new Button();
            this.label63 = new Label();
            this.textBox_temp6_b = new TextBox();
            this.textBox_Vy1_temp6 = new TextBox();
            this.label64 = new Label();
            this.label202 = new Label();
            this.textBox_Vx1_temp6 = new TextBox();
            this.label203 = new Label();
            this.textBox_temp6_k = new TextBox();
            this.groupBox29 = new GroupBox();
            this.textBox_Vy2_tempEnv2 = new TextBox();
            this.button_calc_tempEnv2 = new Button();
            this.textBox_Vx2_tempEnv2 = new TextBox();
            this.button_cali_tempEnv2 = new Button();
            this.label406 = new Label();
            this.textBox_tempEnv2_b = new TextBox();
            this.textBox_Vy1_tempEnv2 = new TextBox();
            this.label407 = new Label();
            this.label408 = new Label();
            this.textBox_Vx1_tempEnv2 = new TextBox();
            this.label409 = new Label();
            this.textBox_tempEnv2_k = new TextBox();
            this.button_temp_reset = new Button();
            this.groupBox26 = new GroupBox();
            this.textBox_Vy2_temp4 = new TextBox();
            this.button_calc_temp4 = new Button();
            this.textBox_Vx2_temp4 = new TextBox();
            this.button_cali_temp4 = new Button();
            this.label392 = new Label();
            this.textBox_temp4_b = new TextBox();
            this.textBox_Vy1_temp4 = new TextBox();
            this.label393 = new Label();
            this.label396 = new Label();
            this.textBox_Vx1_temp4 = new TextBox();
            this.label397 = new Label();
            this.textBox_temp4_k = new TextBox();
            this.button_temp_read = new Button();
            this.groupBox27 = new GroupBox();
            this.textBox_Vy2_temp5 = new TextBox();
            this.button_calc_temp5 = new Button();
            this.textBox_Vx2_temp5 = new TextBox();
            this.button_cali_temp5 = new Button();
            this.label398 = new Label();
            this.textBox_temp5_b = new TextBox();
            this.textBox_Vy1_temp5 = new TextBox();
            this.label399 = new Label();
            this.label400 = new Label();
            this.textBox_Vx1_temp5 = new TextBox();
            this.label401 = new Label();
            this.textBox_temp5_k = new TextBox();
            this.groupBox_temp_mos = new GroupBox();
            this.textBox_Vy2_tempMos = new TextBox();
            this.button_calc_tempmos = new Button();
            this.textBox_Vx2_tempMos = new TextBox();
            this.button_cali_temp_mos = new Button();
            this.label212 = new Label();
            this.textBox_temp_mos_b = new TextBox();
            this.textBox_Vy1_tempMos = new TextBox();
            this.label130 = new Label();
            this.label213 = new Label();
            this.textBox_Vx1_tempMos = new TextBox();
            this.label131 = new Label();
            this.textBox_temp_mos_k = new TextBox();
            this.groupBox_temp3 = new GroupBox();
            this.textBox_Vy2_temp3 = new TextBox();
            this.button_calc_temp3 = new Button();
            this.textBox_Vx2_temp3 = new TextBox();
            this.button_cali_temp3 = new Button();
            this.label210 = new Label();
            this.textBox_temp3_b = new TextBox();
            this.textBox_Vy1_temp3 = new TextBox();
            this.label126 = new Label();
            this.label211 = new Label();
            this.textBox_Vx1_temp3 = new TextBox();
            this.label127 = new Label();
            this.textBox_temp3_k = new TextBox();
            this.groupBox_temp_env = new GroupBox();
            this.button_calc_tempEnv1 = new Button();
            this.textBox_Vy2_tempEnv1 = new TextBox();
            this.button_cali_tempEnv1 = new Button();
            this.textBox_Vx2_tempEnv1 = new TextBox();
            this.textBox_tempEnv1_b = new TextBox();
            this.label216 = new Label();
            this.label128 = new Label();
            this.textBox_Vy1_tempEnv1 = new TextBox();
            this.label129 = new Label();
            this.label217 = new Label();
            this.textBox_Vx1_tempEnv1 = new TextBox();
            this.textBox_tempEnv1_k = new TextBox();
            this.groupBox_temp1 = new GroupBox();
            this.textBox_Vy2_temp1 = new TextBox();
            this.button_calc_temp1 = new Button();
            this.textBox_Vx2_temp1 = new TextBox();
            this.button_cali_temp1 = new Button();
            this.label208 = new Label();
            this.textBox_temp1_b = new TextBox();
            this.textBox_Vy1_temp1 = new TextBox();
            this.label112 = new Label();
            this.label209 = new Label();
            this.textBox_Vx1_temp1 = new TextBox();
            this.label115 = new Label();
            this.textBox_temp1_k = new TextBox();
            this.groupBox_temp2 = new GroupBox();
            this.textBox_Vy2_temp2 = new TextBox();
            this.button_calc_temp2 = new Button();
            this.textBox_Vx2_temp2 = new TextBox();
            this.button_cali_temp2 = new Button();
            this.label214 = new Label();
            this.textBox_temp2_b = new TextBox();
            this.textBox_Vy1_temp2 = new TextBox();
            this.label116 = new Label();
            this.label215 = new Label();
            this.textBox_Vx1_temp2 = new TextBox();
            this.label125 = new Label();
            this.textBox_temp2_k = new TextBox();
            this.tabPage3 = new TabPage();
            this.groupBox37 = new GroupBox();
            this.button_HeatCool_Reset = new Button();
            this.button_HeatCool_Set = new Button();
            this.button_HeatCool_Read = new Button();
            this.textBox_Cool_Res2 = new TextBox();
            this.textBox_Cool_Res3 = new TextBox();
            this.textBox_Cool_Res4 = new TextBox();
            this.label463 = new Label();
            this.label465 = new Label();
            this.label471 = new Label();
            this.label473 = new Label();
            this.textBox_Cool_Res1 = new TextBox();
            this.label464 = new Label();
            this.textBox_Heat_Res2 = new TextBox();
            this.label466 = new Label();
            this.textBox_Heat_Res3 = new TextBox();
            this.textBox_Heat_Res4 = new TextBox();
            this.textBox_Heat_Res6 = new TextBox();
            this.label467 = new Label();
            this.textBox_Heat_Res5 = new TextBox();
            this.label468 = new Label();
            this.label469 = new Label();
            this.label437 = new Label();
            this.label439 = new Label();
            this.textBox_CoolDSG_High = new TextBox();
            this.label441 = new Label();
            this.textBox_CoolDSG_Low = new TextBox();
            this.label443 = new Label();
            this.textBox_CoolCHG_High = new TextBox();
            this.textBox_CoolCHG_Low = new TextBox();
            this.textBox_CoolTime_Max = new TextBox();
            this.label4441 = new Label();
            this.textBox_CoolCur_Min = new TextBox();
            this.label457 = new Label();
            this.textBox_CoolCur_Max = new TextBox();
            this.label460 = new Label();
            this.label461 = new Label();
            this.label281 = new Label();
            this.label434 = new Label();
            this.label285 = new Label();
            this.textBox_HeatDSG_High = new TextBox();
            this.label289 = new Label();
            this.textBox_HeatDSG_Low = new TextBox();
            this.label313 = new Label();
            this.textBox_HeatCHG_High = new TextBox();
            this.textBox_Heat_Res1 = new TextBox();
            this.textBox_HeatCHG_Low = new TextBox();
            this.textBox_HeatTime_Max = new TextBox();
            this.label433 = new Label();
            this.textBox_HeatCur_Min = new TextBox();
            this.label432 = new Label();
            this.textBox_HeatCur_Max = new TextBox();
            this.label422 = new Label();
            this.label321 = new Label();
            this.groupBox33 = new GroupBox();
            this.button_Protect_Reset = new Button();
            this.label40 = new Label();
            this.label44 = new Label();
            this.label39 = new Label();
            this.label24 = new Label();
            this.button_SocUp_set = new Button();
            this.textBox_SocUp_DelayT = new TextBox();
            this.textBox_SocUp_Rec = new TextBox();
            this.textBox_SocUp_Second = new TextBox();
            this.textBox_SocUp_Third = new TextBox();
            this.textBox_SocUp_First = new TextBox();
            this.button_VdeltaOVP_set = new Button();
            this.textBox_VdeltaOVP_DelayT = new TextBox();
            this.textBox_VdeltaOVP_Rec = new TextBox();
            this.textBox_VdeltaOVP_Second = new TextBox();
            this.textBox_VdeltaOVP_Third = new TextBox();
            this.textBox_VdeltaOVP_First = new TextBox();
            this.button_TmosOTP_set = new Button();
            this.textBox_TmosOTP_DelayT = new TextBox();
            this.textBox_TmosOTP_Rec = new TextBox();
            this.textBox_TmosOTP_Second = new TextBox();
            this.textBox_TmosOTP_Third = new TextBox();
            this.textBox_TmosOTP_First = new TextBox();
            this.button_TdsgUTP_set = new Button();
            this.textBox_TdsgUTP_DelayT = new TextBox();
            this.textBox_TdsgUTP_Rec = new TextBox();
            this.textBox_TdsgUTP_Second = new TextBox();
            this.textBox_TdsgUTP_Third = new TextBox();
            this.textBox_TdsgUTP_First = new TextBox();
            this.button_TdsgOTP_set = new Button();
            this.textBox_TdsgOTP_DelayT = new TextBox();
            this.textBox_TdsgOTP_Rec = new TextBox();
            this.textBox_TdsgOTP_Second = new TextBox();
            this.textBox_TdsgOTP_Third = new TextBox();
            this.textBox_TdsgOTP_First = new TextBox();
            this.button_TchgUTP_set = new Button();
            this.textBox_TchgUTP_DelayT = new TextBox();
            this.textBox_TchgUTP_Rec = new TextBox();
            this.textBox_TchgUTP_Second = new TextBox();
            this.textBox_TchgUTP_Third = new TextBox();
            this.textBox_TchgUTP_First = new TextBox();
            this.button_TchgOTP_set = new Button();
            this.textBox_TchgOTP_DelayT = new TextBox();
            this.textBox_TchgOTP_Rec = new TextBox();
            this.textBox_TchgOTP_Second = new TextBox();
            this.textBox_TchgOTP_Third = new TextBox();
            this.textBox_TchgOTP_First = new TextBox();
            this.button_IdsgOCP_set = new Button();
            this.textBox_IdsgOCP_DelayT = new TextBox();
            this.textBox_IdsgOCP_Rec = new TextBox();
            this.textBox_IdsgOCP_Second = new TextBox();
            this.textBox_IdsgOCP_Third = new TextBox();
            this.textBox_IdsgOCP_First = new TextBox();
            this.button_IchgOCP_set = new Button();
            this.textBox_IchgOCP_DelayT = new TextBox();
            this.textBox_IchgOCP_Rec = new TextBox();
            this.textBox_IchgOCP_Second = new TextBox();
            this.textBox_IchgOCP_Third = new TextBox();
            this.textBox_IchgOCP_First = new TextBox();
            this.button_VbusUVP_set = new Button();
            this.textBox_VbusUVP_DelayT = new TextBox();
            this.textBox_VbusUVP_Rec = new TextBox();
            this.textBox_VbusUVP_Second = new TextBox();
            this.textBox_VbusUVP_Third = new TextBox();
            this.textBox_VbusUVP_First = new TextBox();
            this.button_VbusOVP_set = new Button();
            this.textBox_VbusOVP_DelayT = new TextBox();
            this.textBox_VbusOVP_Rec = new TextBox();
            this.textBox_VbusOVP_Second = new TextBox();
            this.textBox_VbusOVP_Third = new TextBox();
            this.textBox_VbusOVP_First = new TextBox();
            this.button_VcellUVP_set = new Button();
            this.textBox_VcellUVP_DelayT = new TextBox();
            this.textBox_VcellUVP_Rec = new TextBox();
            this.textBox_VcellUVP_Second = new TextBox();
            this.textBox_VcellUVP_Third = new TextBox();
            this.textBox_VcellUVP_First = new TextBox();
            this.label22 = new Label();
            this.label23 = new Label();
            this.label_Tmos_OTP = new Label();
            this.label_Tcell_DsgUTP = new Label();
            this.label_Tcell_DsgOTP = new Label();
            this.label_Tcell_ChgUTP = new Label();
            this.label_Tcell_ChgOTP = new Label();
            this.label_Idsg_OCP = new Label();
            this.label_Ichg_OCP = new Label();
            this.button_VcellOVP_set = new Button();
            this.button_Protect_read = new Button();
            this.label_Vcell_DT = new Label();
            this.label_Vbus_UVP = new Label();
            this.textBox_VcellOVP_DelayT = new TextBox();
            this.label_Vbus_OVP = new Label();
            this.label_Vcell_UVP = new Label();
            this.textBox_VcellOVP_Rec = new TextBox();
            this.textBox_VcellOVP_Second = new TextBox();
            this.textBox_VcellOVP_Third = new TextBox();
            this.textBox_VcellOVP_First = new TextBox();
            this.lable_VcellOVP = new Label();
            this.groupBox32 = new GroupBox();
            this.label165 = new Label();
            this.label252 = new Label();
            this.label261 = new Label();
            this.label269 = new Label();
            this.textBox_Cool_CHGlow = new TextBox();
            this.textBox_Cool_CHGhigh = new TextBox();
            this.textBox_Cool_DSGlow = new TextBox();
            this.textBox_Cool_DSGhigh = new TextBox();
            this.label60 = new Label();
            this.label240 = new Label();
            this.textBox_OpenT_Res = new TextBox();
            this.textBox_OpenT_Mos = new TextBox();
            this.label241 = new Label();
            this.textBox_OpenT_Even = new TextBox();
            this.textBox_OpenT_Odd = new TextBox();
            this.label254 = new Label();
            this.button_CanAdd_Reset = new Button();
            this.label152 = new Label();
            this.label151 = new Label();
            this.label147 = new Label();
            this.textBox_Soc_CycleTime = new TextBox();
            this.label148 = new Label();
            this.textBox_Soc_Res2 = new TextBox();
            this.label149 = new Label();
            this.textBox_Soc_TabelSelect = new TextBox();
            this.textBox_Soc_set = new Button();
            this.textBox_Soc_read = new Button();
            this.label150 = new Label();
            this.textBox_Soc_Ah = new TextBox();
            this.label117 = new Label();
            this.label122 = new Label();
            this.label132 = new Label();
            this.label146 = new Label();
            this.textBox_PreChgTime = new TextBox();
            this.textBox_PreChgFre = new TextBox();
            this.textBox_I_DsgLimit = new TextBox();
            this.textBox_I_ChgLimit = new TextBox();
            this.label_OverDsgT = new Label();
            this.label_OverDsgV = new Label();
            this.label_NormalT = new Label();
            this.label_SleepElement = new Label();
            this.label_NormalV = new Label();
            this.button_Sleep_Set = new Button();
            this.button_Sleep_Read = new Button();
            this.textBox_OverDsgT = new TextBox();
            this.textBox_OverDsgV = new TextBox();
            this.textBox_NormalT = new TextBox();
            this.textBox_NormalV = new TextBox();
            this.label46 = new Label();
            this.textBox_Sys_CSRes_Num = new TextBox();
            this.label232 = new Label();
            this.textBox_Sys_PreChg_Time = new TextBox();
            this.label238 = new Label();
            this.textBox_Sys_SeriesNum = new TextBox();
            this.textBox_Sys_set = new Button();
            this.textBox_Sys_read = new Button();
            this.label_CS_Res = new Label();
            this.textBox_Sys_CSRes = new TextBox();
            this.label_CHG_low = new Label();
            this.label_DSG_low = new Label();
            this.label_CHG_high = new Label();
            this.label_DSG_high = new Label();
            this.label_Close_W2 = new Label();
            this.label_Open_W = new Label();
            this.button_Heat_set = new Button();
            this.button_Balance_set = new Button();
            this.button_Heat_read = new Button();
            this.button_Balance_read = new Button();
            this.textBox_Heat_CHGlow = new TextBox();
            this.textBox_Heat_CHGhigh = new TextBox();
            this.textBox_closeW2 = new TextBox();
            this.textBox_closeW1 = new TextBox();
            this.label_Close_W1 = new Label();
            this.label_Heat_set = new Label();
            this.labe_balance = new Label();
            this.textBox_Heat_DSGlow = new TextBox();
            this.textBox_Heat_DSGhigh = new TextBox();
            this.textBox_openW = new TextBox();
            this.textBox_openV = new TextBox();
            this.label_Open_V = new Label();
            this.toolStrip_Calib2 = new ToolStrip();
            this.toolStripLabel_RxCnt3 = new ToolStripLabel();
            this.toolStripLabel36 = new ToolStripLabel();
            this.toolStripLabel_TxCnt3 = new ToolStripLabel();
            this.tabPage4 = new TabPage();
            this.label3 = new Label();
            this.comboBox1 = new ComboBox();
            this.groupBox45 = new GroupBox();
            this.button_Chinese = new Button();
            this.button_English = new Button();
            this.toolStrip_OtherEle = new ToolStrip();
            this.toolStripLabel_RxCnt5 = new ToolStripLabel();
            this.toolStripLabel33 = new ToolStripLabel();
            this.toolStripLabel_TxCnt5 = new ToolStripLabel();
            this.groupBox_CopperLoss = new GroupBox();
            this.textBox_CellNum16 = new TextBox();
            this.textBox_CopperLoss16 = new TextBox();
            this.textBox_CellNum15 = new TextBox();
            this.textBox_CopperLoss15 = new TextBox();
            this.textBox_CellNum14 = new TextBox();
            this.textBox_CopperLoss14 = new TextBox();
            this.textBox_CellNum13 = new TextBox();
            this.textBox_CopperLoss13 = new TextBox();
            this.textBox_CellNum12 = new TextBox();
            this.textBox_CellNum11 = new TextBox();
            this.textBox_CellNum10 = new TextBox();
            this.textBox_CellNum9 = new TextBox();
            this.textBox_CopperLoss12 = new TextBox();
            this.textBox_CopperLoss11 = new TextBox();
            this.textBox_CopperLoss10 = new TextBox();
            this.textBox_CopperLoss9 = new TextBox();
            this.label_CellNumNotice = new Label();
            this.label_CellNum = new Label();
            this.textBox_CellNum8 = new TextBox();
            this.textBox_CopperLoss8 = new TextBox();
            this.textBox_CellNum7 = new TextBox();
            this.textBox_CopperLoss7 = new TextBox();
            this.textBox_CellNum6 = new TextBox();
            this.textBox_CopperLoss6 = new TextBox();
            this.textBox_CellNum5 = new TextBox();
            this.textBox_CopperLoss5 = new TextBox();
            this.textBox_CellNum4 = new TextBox();
            this.textBox_CellNum3 = new TextBox();
            this.textBox_CellNum2 = new TextBox();
            this.textBox_CellNum1 = new TextBox();
            this.textBox_CopperLoss4 = new TextBox();
            this.button_CopperLoss_set = new Button();
            this.button_CopperLoss_read = new Button();
            this.textBox_CopperLoss3 = new TextBox();
            this.label_CopperLoss = new Label();
            this.textBox_CopperLoss2 = new TextBox();
            this.textBox_CopperLoss1 = new TextBox();
            this.groupBox24 = new GroupBox();
            this.textBox_SocTable_Value21 = new TextBox();
            this.textBox_SocTable_Volt21 = new TextBox();
            this.textBox_SocTable_Value20 = new TextBox();
            this.textBox_SocTable_Value19 = new TextBox();
            this.textBox_SocTable_Value18 = new TextBox();
            this.textBox_SocTable_Value17 = new TextBox();
            this.textBox_SocTable_Volt20 = new TextBox();
            this.textBox_SocTable_Volt19 = new TextBox();
            this.textBox_SocTable_Volt18 = new TextBox();
            this.textBox_SocTable_Volt17 = new TextBox();
            this.textBox_SocTable_Value16 = new TextBox();
            this.textBox_SocTable_Value15 = new TextBox();
            this.textBox_SocTable_Value14 = new TextBox();
            this.textBox_SocTable_Value13 = new TextBox();
            this.textBox_SocTable_Value12 = new TextBox();
            this.textBox_SocTable_Volt16 = new TextBox();
            this.textBox_SocTable_Volt15 = new TextBox();
            this.textBox_SocTable_Volt14 = new TextBox();
            this.textBox_SocTable_Volt13 = new TextBox();
            this.textBox_SocTable_Volt12 = new TextBox();
            this.textBox_SocTable_Value11 = new TextBox();
            this.textBox_SocTable_Volt11 = new TextBox();
            this.textBox_SocTable_Value10 = new TextBox();
            this.textBox_SocTable_Value9 = new TextBox();
            this.textBox_SocTable_Value8 = new TextBox();
            this.textBox_SocTable_Value7 = new TextBox();
            this.textBox_SocTable_Volt10 = new TextBox();
            this.textBox_SocTable_Volt9 = new TextBox();
            this.textBox_SocTable_Volt8 = new TextBox();
            this.textBox_SocTable_Volt7 = new TextBox();
            this.textBox_SocTable_Value6 = new TextBox();
            this.textBox_SocTable_Value5 = new TextBox();
            this.textBox_SocTable_Value4 = new TextBox();
            this.textBox_SocTable_Value3 = new TextBox();
            this.textBox_SocTable_Value2 = new TextBox();
            this.label394 = new Label();
            this.button_SocTable_Set = new Button();
            this.textBox_SocTable_Value1 = new TextBox();
            this.textBox_SocTable_Volt6 = new TextBox();
            this.textBox_SocTable_Volt5 = new TextBox();
            this.textBox_SocTable_Volt4 = new TextBox();
            this.textBox_SocTable_Volt3 = new TextBox();
            this.textBox_SocTable_Volt2 = new TextBox();
            this.label395 = new Label();
            this.button_SocTable_Read = new Button();
            this.textBox_SocTable_Volt1 = new TextBox();
            this.groupBox_Daily = new GroupBox();
            this.textBox_LogTimer = new TextBox();
            this.textBox_LogFileName = new TextBox();
            this.label_LogTimer = new Label();
            this.label_LogFileName = new Label();
            this.button_LogTimerStart = new Button();
            this.button_LogTimerStop = new Button();
            this.groupBox_upgrate = new GroupBox();
            this.button_upgrate_clear = new Button();
            this.label2 = new Label();
            this.button_upgrate_begin = new Button();
            this.progressBar_upgrate = new ProgressBar();
            this.button_upgrate_connect = new Button();
            this.label1 = new Label();
            this.Button_upgrate_find = new Button();
            this.textBox_upgrate_window = new TextBox();
            this.textBox_upgrate_pack = new TextBox();
            this.groupBox_History = new GroupBox();
            this.label_Time_Fault_Record10 = new Label();
            this.label_Time_Fault_Record9 = new Label();
            this.label_Time_Fault_Record8 = new Label();
            this.label_Time_Fault_Record7 = new Label();
            this.label_Time_Fault_Record6 = new Label();
            this.label_Time_Fault_Record5 = new Label();
            this.label_Time_Fault_Record4 = new Label();
            this.label_Time_Fault_Record3 = new Label();
            this.label_Time_Fault_Record2 = new Label();
            this.label_Time_Fault_Record1 = new Label();
            this.Button_Fault_Record_Read = new Button();
            this.Button_Fault_Record_Clear = new Button();
            this.textBox_Fault_Record10 = new TextBox();
            this.textBox_Fault_Record4 = new TextBox();
            this.textBox_Fault_Record3 = new TextBox();
            this.textBox_Fault_Record6 = new TextBox();
            this.textBox_Fault_Record5 = new TextBox();
            this.textBox_Fault_Record2 = new TextBox();
            this.textBox_Fault_Record1 = new TextBox();
            this.textBox_Fault_Record7 = new TextBox();
            this.textBox_Fault_Record8 = new TextBox();
            this.textBox_Fault_Record9 = new TextBox();
            this.groupBox2 = new GroupBox();
            this.label33 = new Label();
            this.label34 = new Label();
            this.label38 = new Label();
            this.label29 = new Label();
            this.label28 = new Label();
            this.label27 = new Label();
            this.textBox_RTC_Alarm_Second = new TextBox();
            this.textBox_RTC_Alarm_Minute = new TextBox();
            this.textBox_RTC_Alarm_Hour = new TextBox();
            this.textBox_RTC_Alarm_Day = new TextBox();
            this.textBox_RTC_Alarm_Month = new TextBox();
            this.label26 = new Label();
            this.button_RTC_Set = new Button();
            this.textBox_RTC_Alarm_Year = new TextBox();
            this.textBox_RTC_Time_Second = new TextBox();
            this.textBox_RTC_Time_Minute = new TextBox();
            this.textBox_RTC_Time_Hour = new TextBox();
            this.textBox_RTC_Time_Day = new TextBox();
            this.textBox_RTC_Time_Month = new TextBox();
            this.label25 = new Label();
            this.button_RTC_Read = new Button();
            this.textBox_RTC_Time_Year = new TextBox();
            this.eventLog1 = new EventLog();
            this.timer2 = new Timer(this.components);
            this.timer_Log = new Timer(this.components);
            this.groupBox_Vcell.SuspendLayout();
            this.groupBox_Vcell_Status.SuspendLayout();
            this.groupBox_OtherStatus.SuspendLayout();
            this.tabControl1.SuspendLayout();
            this.tabPage1.SuspendLayout();
            this.toolStrip_Imformation.SuspendLayout();
            this.groupBox_read.SuspendLayout();
            this.groupBox36.SuspendLayout();
            this.groupBox35.SuspendLayout();
            this.groupBox7.SuspendLayout();
            this.groupBox6.SuspendLayout();
            this.groupBox_Present.SuspendLayout();
            this.groupBox5.SuspendLayout();
            this.groupBox4.SuspendLayout();
            this.groupBox3.SuspendLayout();
            this.groupBox_ERROR.SuspendLayout();
            this.groupBox_Balance.SuspendLayout();
            this.groupBox_Temperature.SuspendLayout();
            this.groupBox_set.SuspendLayout();
            this.tabPage6.SuspendLayout();
            this.toolStrip_SwitchCtrl.SuspendLayout();
            this.groupBox34.SuspendLayout();
            this.tabPage2.SuspendLayout();
            this.toolStrip_Calib1.SuspendLayout();
            this.groupBox_Vcell_cal.SuspendLayout();
            this.groupBox30.SuspendLayout();
            this.groupBox31.SuspendLayout();
            this.groupBox1.SuspendLayout();
            this.groupBox22.SuspendLayout();
            this.groupBox23.SuspendLayout();
            this.groupBox20.SuspendLayout();
            this.groupBox13.SuspendLayout();
            this.groupBox21.SuspendLayout();
            this.groupBox8.SuspendLayout();
            this.groupBox14.SuspendLayout();
            this.groupBox_Vcell16.SuspendLayout();
            this.groupBox15.SuspendLayout();
            this.groupBox9.SuspendLayout();
            this.groupBox16.SuspendLayout();
            this.groupBox_Vcell14.SuspendLayout();
            this.groupBox17.SuspendLayout();
            this.groupBox18.SuspendLayout();
            this.groupBox10.SuspendLayout();
            this.groupBox19.SuspendLayout();
            this.groupBox_Vcell15.SuspendLayout();
            this.groupBox11.SuspendLayout();
            this.groupBox12.SuspendLayout();
            this.groupBox_Vcell13.SuspendLayout();
            this.groupBox_Vcell12.SuspendLayout();
            this.groupBox_Vcell6.SuspendLayout();
            this.groupBox_Vcell11.SuspendLayout();
            this.groupBox_Vcell5.SuspendLayout();
            this.groupBox_Vcell1.SuspendLayout();
            this.groupBox_Vcell10.SuspendLayout();
            this.groupBox_Vcell4.SuspendLayout();
            this.groupBox_Vcell8.SuspendLayout();
            this.groupBox_Vcell7.SuspendLayout();
            this.groupBox_Vcell9.SuspendLayout();
            this.groupBox_Vcell3.SuspendLayout();
            this.groupBox_Vcell2.SuspendLayout();
            this.tabPage5.SuspendLayout();
            this.toolStrip_Protect.SuspendLayout();
            this.groupBox_Vall_I.SuspendLayout();
            this.groupBox_Idsg.SuspendLayout();
            this.groupBox_Ichg.SuspendLayout();
            this.groupBox_temp_cal.SuspendLayout();
            this.groupBox28.SuspendLayout();
            this.groupBox25.SuspendLayout();
            this.groupBox29.SuspendLayout();
            this.groupBox26.SuspendLayout();
            this.groupBox27.SuspendLayout();
            this.groupBox_temp_mos.SuspendLayout();
            this.groupBox_temp3.SuspendLayout();
            this.groupBox_temp_env.SuspendLayout();
            this.groupBox_temp1.SuspendLayout();
            this.groupBox_temp2.SuspendLayout();
            this.tabPage3.SuspendLayout();
            this.groupBox37.SuspendLayout();
            this.groupBox33.SuspendLayout();
            this.groupBox32.SuspendLayout();
            this.toolStrip_Calib2.SuspendLayout();
            this.tabPage4.SuspendLayout();
            this.groupBox45.SuspendLayout();
            this.toolStrip_OtherEle.SuspendLayout();
            this.groupBox_CopperLoss.SuspendLayout();
            this.groupBox24.SuspendLayout();
            this.groupBox_Daily.SuspendLayout();
            this.groupBox_upgrate.SuspendLayout();
            this.groupBox_History.SuspendLayout();
            this.groupBox2.SuspendLayout();
            this.eventLog1.BeginInit();
            base.SuspendLayout();
            this.button_TurnOnOffCom.Location = new Point(0xa3, 11);
            this.button_TurnOnOffCom.Name = "button_TurnOnOffCom";
            this.button_TurnOnOffCom.Size = new Size(0x43, 0x17);
            this.button_TurnOnOffCom.TabIndex = 0;
            this.button_TurnOnOffCom.Text = "打开串口";
            this.button_TurnOnOffCom.UseVisualStyleBackColor = true;
            this.button_TurnOnOffCom.Click += new EventHandler(this.button_TurnOnOffCom_Click);
            this.serialPort1.BaudRate = 0x4b00;
            this.serialPort1.ReadBufferSize = 200;
            this.serialPort1.DataReceived += new SerialDataReceivedEventHandler(this.serialPort1_DataReceived);
            this.comboBox_ComNum.FormattingEnabled = true;
            this.comboBox_ComNum.Location = new Point(0x48, 13);
            this.comboBox_ComNum.Name = "comboBox_ComNum";
            this.comboBox_ComNum.Size = new Size(0x54, 20);
            this.comboBox_ComNum.TabIndex = 7;
            this.comboBox_BandRate.FormattingEnabled = true;
            object[] items = new object[] { "600", "1200", "2400", "4800", "9600", "14400", "19200", "115200" };
            this.comboBox_BandRate.Items.AddRange(items);
            this.comboBox_BandRate.Location = new Point(0x48, 0x2c);
            this.comboBox_BandRate.Name = "comboBox_BandRate";
            this.comboBox_BandRate.Size = new Size(0x54, 20);
            this.comboBox_BandRate.TabIndex = 8;
            this.timer1.Interval = 200;
            this.timer1.Tick += new EventHandler(this.timer1_Tick);
            this.label_VC1.AutoSize = true;
            this.label_VC1.Location = new Point(0x45, 0x17);
            this.label_VC1.Name = "label_VC1";
            this.label_VC1.Size = new Size(11, 12);
            this.label_VC1.TabIndex = 0x2c;
            this.label_VC1.Text = "0";
            this.label_VC2.AutoSize = true;
            this.label_VC2.Location = new Point(0x45, 50);
            this.label_VC2.Name = "label_VC2";
            this.label_VC2.Size = new Size(11, 12);
            this.label_VC2.TabIndex = 0x2d;
            this.label_VC2.Text = "0";
            this.label_VC4.AutoSize = true;
            this.label_VC4.Location = new Point(0x45, 0x69);
            this.label_VC4.Name = "label_VC4";
            this.label_VC4.Size = new Size(11, 12);
            this.label_VC4.TabIndex = 0x2f;
            this.label_VC4.Text = "0";
            this.label_VC3.AutoSize = true;
            this.label_VC3.Location = new Point(0x45, 0x4f);
            this.label_VC3.Name = "label_VC3";
            this.label_VC3.Size = new Size(11, 12);
            this.label_VC3.TabIndex = 0x2e;
            this.label_VC3.Text = "0";
            this.label_VC8.AutoSize = true;
            this.label_VC8.Location = new Point(0x45, 0xd4);
            this.label_VC8.Name = "label_VC8";
            this.label_VC8.Size = new Size(11, 12);
            this.label_VC8.TabIndex = 0x33;
            this.label_VC8.Text = "0";
            this.label_VC7.AutoSize = true;
            this.label_VC7.Location = new Point(0x45, 0xb8);
            this.label_VC7.Name = "label_VC7";
            this.label_VC7.Size = new Size(11, 12);
            this.label_VC7.TabIndex = 50;
            this.label_VC7.Text = "0";
            this.label_VC6.AutoSize = true;
            this.label_VC6.Location = new Point(0x45, 0x9e);
            this.label_VC6.Name = "label_VC6";
            this.label_VC6.Size = new Size(11, 12);
            this.label_VC6.TabIndex = 0x31;
            this.label_VC6.Text = "0";
            this.label_VC5.AutoSize = true;
            this.label_VC5.Location = new Point(0x45, 0x84);
            this.label_VC5.Name = "label_VC5";
            this.label_VC5.Size = new Size(11, 12);
            this.label_VC5.TabIndex = 0x30;
            this.label_VC5.Text = "0";
            this.label_VC12.AutoSize = true;
            this.label_VC12.Location = new Point(0x45, 320);
            this.label_VC12.Name = "label_VC12";
            this.label_VC12.Size = new Size(11, 12);
            this.label_VC12.TabIndex = 0x37;
            this.label_VC12.Text = "0";
            this.label_VC11.AutoSize = true;
            this.label_VC11.Location = new Point(0x45, 0x124);
            this.label_VC11.Name = "label_VC11";
            this.label_VC11.Size = new Size(11, 12);
            this.label_VC11.TabIndex = 0x36;
            this.label_VC11.Text = "0";
            this.label_VC10.AutoSize = true;
            this.label_VC10.Location = new Point(0x45, 0x109);
            this.label_VC10.Name = "label_VC10";
            this.label_VC10.Size = new Size(11, 12);
            this.label_VC10.TabIndex = 0x35;
            this.label_VC10.Text = "0";
            this.label_VC9.AutoSize = true;
            this.label_VC9.Location = new Point(0x45, 0xee);
            this.label_VC9.Name = "label_VC9";
            this.label_VC9.Size = new Size(11, 12);
            this.label_VC9.TabIndex = 0x34;
            this.label_VC9.Text = "0";
            this.label_VC14.AutoSize = true;
            this.label_VC14.Location = new Point(0x45, 370);
            this.label_VC14.Name = "label_VC14";
            this.label_VC14.Size = new Size(11, 12);
            this.label_VC14.TabIndex = 0x39;
            this.label_VC14.Text = "0";
            this.label_VC13.AutoSize = true;
            this.label_VC13.Location = new Point(0x45, 0x15a);
            this.label_VC13.Name = "label_VC13";
            this.label_VC13.Size = new Size(11, 12);
            this.label_VC13.TabIndex = 0x38;
            this.label_VC13.Text = "0";
            this.button_MosRelay_Func_Open.Location = new Point(0x4a, 0x37);
            this.button_MosRelay_Func_Open.Name = "button_MosRelay_Func_Open";
            this.button_MosRelay_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_MosRelay_Func_Open.TabIndex = 1;
            this.button_MosRelay_Func_Open.Text = "Open";
            this.button_MosRelay_Func_Open.UseVisualStyleBackColor = true;
            this.button_MosRelay_Func_Open.Click += new EventHandler(this.button_MosRelay_Func_Open_Click);
            this.label_Vcell_max.AutoSize = true;
            this.label_Vcell_max.Location = new Point(0x53, 0x19);
            this.label_Vcell_max.Name = "label_Vcell_max";
            this.label_Vcell_max.Size = new Size(11, 12);
            this.label_Vcell_max.TabIndex = 0x3a;
            this.label_Vcell_max.Text = "0";
            this.label_Vcell_min.AutoSize = true;
            this.label_Vcell_min.Location = new Point(0xc6, 0x18);
            this.label_Vcell_min.Name = "label_Vcell_min";
            this.label_Vcell_min.Size = new Size(11, 12);
            this.label_Vcell_min.TabIndex = 0x3b;
            this.label_Vcell_min.Text = "0";
            this.label_Vbat.AutoSize = true;
            this.label_Vbat.Location = new Point(0xc6, 0x4f);
            this.label_Vbat.Name = "label_Vbat";
            this.label_Vbat.Size = new Size(11, 12);
            this.label_Vbat.TabIndex = 60;
            this.label_Vbat.Text = "0";
            this.label_V_delta.AutoSize = true;
            this.label_V_delta.Location = new Point(0x53, 80);
            this.label_V_delta.Name = "label_V_delta";
            this.label_V_delta.Size = new Size(11, 12);
            this.label_V_delta.TabIndex = 0x3d;
            this.label_V_delta.Text = "0";
            this.label_Min_pos.AutoSize = true;
            this.label_Min_pos.Location = new Point(0xc6, 50);
            this.label_Min_pos.Name = "label_Min_pos";
            this.label_Min_pos.Size = new Size(11, 12);
            this.label_Min_pos.TabIndex = 0x3f;
            this.label_Min_pos.Text = "0";
            this.label_Max_pos.AutoSize = true;
            this.label_Max_pos.Location = new Point(0x53, 0x33);
            this.label_Max_pos.Name = "label_Max_pos";
            this.label_Max_pos.Size = new Size(11, 12);
            this.label_Max_pos.TabIndex = 0x3e;
            this.label_Max_pos.Text = "0";
            this.label_Max_pos_ref.AutoSize = true;
            this.label_Max_pos_ref.Location = new Point(12, 0x33);
            this.label_Max_pos_ref.Name = "label_Max_pos_ref";
            this.label_Max_pos_ref.Size = new Size(0x35, 12);
            this.label_Max_pos_ref.TabIndex = 0x42;
            this.label_Max_pos_ref.Text = "Max_pos:";
            this.label_V_delta_ref.AutoSize = true;
            this.label_V_delta_ref.Location = new Point(12, 80);
            this.label_V_delta_ref.Name = "label_V_delta_ref";
            this.label_V_delta_ref.Size = new Size(0x47, 12);
            this.label_V_delta_ref.TabIndex = 0x41;
            this.label_V_delta_ref.Text = "Vdelta(mV):";
            this.label_Vcell_max_ref.AutoSize = true;
            this.label_Vcell_max_ref.Location = new Point(12, 0x19);
            this.label_Vcell_max_ref.Name = "label_Vcell_max_ref";
            this.label_Vcell_max_ref.Size = new Size(0x41, 12);
            this.label_Vcell_max_ref.TabIndex = 0x40;
            this.label_Vcell_max_ref.Text = "Vcell_max:";
            this.label_Min_pos_ref.AutoSize = true;
            this.label_Min_pos_ref.Location = new Point(0x7f, 0x33);
            this.label_Min_pos_ref.Name = "label_Min_pos_ref";
            this.label_Min_pos_ref.Size = new Size(0x35, 12);
            this.label_Min_pos_ref.TabIndex = 0x45;
            this.label_Min_pos_ref.Text = "Min_pos:";
            this.label_Vbat_ref.AutoSize = true;
            this.label_Vbat_ref.Location = new Point(0x7f, 80);
            this.label_Vbat_ref.Name = "label_Vbat_ref";
            this.label_Vbat_ref.Size = new Size(0x35, 12);
            this.label_Vbat_ref.TabIndex = 0x44;
            this.label_Vbat_ref.Text = "Vbat(V):";
            this.label_Vcell_min_ref.AutoSize = true;
            this.label_Vcell_min_ref.Location = new Point(0x7f, 0x19);
            this.label_Vcell_min_ref.Name = "label_Vcell_min_ref";
            this.label_Vcell_min_ref.Size = new Size(0x41, 12);
            this.label_Vcell_min_ref.TabIndex = 0x43;
            this.label_Vcell_min_ref.Text = "Vcell_min:";
            this.label7.AutoSize = true;
            this.label7.Location = new Point(0x16, 370);
            this.label7.Name = "label7";
            this.label7.Size = new Size(0x23, 12);
            this.label7.TabIndex = 0x53;
            this.label7.Text = "VC14:";
            this.label8.AutoSize = true;
            this.label8.Location = new Point(0x16, 0x15a);
            this.label8.Name = "label8";
            this.label8.Size = new Size(0x23, 12);
            this.label8.TabIndex = 0x52;
            this.label8.Text = "VC13:";
            this.label9.AutoSize = true;
            this.label9.Location = new Point(0x16, 320);
            this.label9.Name = "label9";
            this.label9.Size = new Size(0x23, 12);
            this.label9.TabIndex = 0x51;
            this.label9.Text = "VC12:";
            this.label10.AutoSize = true;
            this.label10.Location = new Point(0x16, 0x124);
            this.label10.Name = "label10";
            this.label10.Size = new Size(0x23, 12);
            this.label10.TabIndex = 80;
            this.label10.Text = "VC11:";
            this.label11.AutoSize = true;
            this.label11.Location = new Point(0x16, 0x109);
            this.label11.Name = "label11";
            this.label11.Size = new Size(0x23, 12);
            this.label11.TabIndex = 0x4f;
            this.label11.Text = "VC10:";
            this.label12.AutoSize = true;
            this.label12.Location = new Point(0x16, 0xee);
            this.label12.Name = "label12";
            this.label12.Size = new Size(0x1d, 12);
            this.label12.TabIndex = 0x4e;
            this.label12.Text = "VC9:";
            this.label13.AutoSize = true;
            this.label13.Location = new Point(0x16, 0xd4);
            this.label13.Name = "label13";
            this.label13.Size = new Size(0x1d, 12);
            this.label13.TabIndex = 0x4d;
            this.label13.Text = "VC8:";
            this.label14.AutoSize = true;
            this.label14.Location = new Point(0x16, 0xb8);
            this.label14.Name = "label14";
            this.label14.Size = new Size(0x1d, 12);
            this.label14.TabIndex = 0x4c;
            this.label14.Text = "VC7:";
            this.label15.AutoSize = true;
            this.label15.Location = new Point(0x16, 0x9e);
            this.label15.Name = "label15";
            this.label15.Size = new Size(0x1d, 12);
            this.label15.TabIndex = 0x4b;
            this.label15.Text = "VC6:";
            this.label16.AutoSize = true;
            this.label16.Location = new Point(0x16, 0x84);
            this.label16.Name = "label16";
            this.label16.Size = new Size(0x1d, 12);
            this.label16.TabIndex = 0x4a;
            this.label16.Text = "VC5:";
            this.label17.AutoSize = true;
            this.label17.Location = new Point(0x16, 0x69);
            this.label17.Name = "label17";
            this.label17.Size = new Size(0x1d, 12);
            this.label17.TabIndex = 0x49;
            this.label17.Text = "VC4:";
            this.label18.AutoSize = true;
            this.label18.Location = new Point(0x16, 0x4f);
            this.label18.Name = "label18";
            this.label18.Size = new Size(0x1d, 12);
            this.label18.TabIndex = 0x48;
            this.label18.Text = "VC3:";
            this.label19.AutoSize = true;
            this.label19.Location = new Point(0x16, 50);
            this.label19.Name = "label19";
            this.label19.Size = new Size(0x1d, 12);
            this.label19.TabIndex = 0x47;
            this.label19.Text = "VC2:";
            this.label20.AutoSize = true;
            this.label20.Location = new Point(0x16, 0x17);
            this.label20.Name = "label20";
            this.label20.Size = new Size(0x1d, 12);
            this.label20.TabIndex = 70;
            this.label20.Text = "VC1:";
            this.groupBox_Vcell.Controls.Add(this.label171);
            this.groupBox_Vcell.Controls.Add(this.label_VC15);
            this.groupBox_Vcell.Controls.Add(this.label57);
            this.groupBox_Vcell.Controls.Add(this.label_VC16);
            this.groupBox_Vcell.Controls.Add(this.label20);
            this.groupBox_Vcell.Controls.Add(this.label_VC1);
            this.groupBox_Vcell.Controls.Add(this.label_VC2);
            this.groupBox_Vcell.Controls.Add(this.label_VC3);
            this.groupBox_Vcell.Controls.Add(this.label7);
            this.groupBox_Vcell.Controls.Add(this.label_VC4);
            this.groupBox_Vcell.Controls.Add(this.label8);
            this.groupBox_Vcell.Controls.Add(this.label_VC5);
            this.groupBox_Vcell.Controls.Add(this.label9);
            this.groupBox_Vcell.Controls.Add(this.label19);
            this.groupBox_Vcell.Controls.Add(this.label10);
            this.groupBox_Vcell.Controls.Add(this.label18);
            this.groupBox_Vcell.Controls.Add(this.label11);
            this.groupBox_Vcell.Controls.Add(this.label17);
            this.groupBox_Vcell.Controls.Add(this.label12);
            this.groupBox_Vcell.Controls.Add(this.label16);
            this.groupBox_Vcell.Controls.Add(this.label13);
            this.groupBox_Vcell.Controls.Add(this.label15);
            this.groupBox_Vcell.Controls.Add(this.label14);
            this.groupBox_Vcell.Controls.Add(this.label_VC6);
            this.groupBox_Vcell.Controls.Add(this.label_VC7);
            this.groupBox_Vcell.Controls.Add(this.label_VC8);
            this.groupBox_Vcell.Controls.Add(this.label_VC9);
            this.groupBox_Vcell.Controls.Add(this.label_VC10);
            this.groupBox_Vcell.Controls.Add(this.label_VC11);
            this.groupBox_Vcell.Controls.Add(this.label_VC12);
            this.groupBox_Vcell.Controls.Add(this.label_VC13);
            this.groupBox_Vcell.Controls.Add(this.label_VC14);
            this.groupBox_Vcell.Location = new Point(340, 15);
            this.groupBox_Vcell.Name = "groupBox_Vcell";
            this.groupBox_Vcell.Size = new Size(0x7d, 0x1c7);
            this.groupBox_Vcell.TabIndex = 0x54;
            this.groupBox_Vcell.TabStop = false;
            this.groupBox_Vcell.Text = "Vcell_AFE1(mV)";
            this.label171.AutoSize = true;
            this.label171.Location = new Point(0x16, 0x18b);
            this.label171.Name = "label171";
            this.label171.Size = new Size(0x23, 12);
            this.label171.TabIndex = 0x55;
            this.label171.Text = "VC15:";
            this.label_VC15.AutoSize = true;
            this.label_VC15.Location = new Point(0x45, 0x18b);
            this.label_VC15.Name = "label_VC15";
            this.label_VC15.Size = new Size(11, 12);
            this.label_VC15.TabIndex = 0x54;
            this.label_VC15.Text = "0";
            this.label57.AutoSize = true;
            this.label57.Location = new Point(0x16, 420);
            this.label57.Name = "label57";
            this.label57.Size = new Size(0x23, 12);
            this.label57.TabIndex = 70;
            this.label57.Text = "VC16:";
            this.label_VC16.AutoSize = true;
            this.label_VC16.Location = new Point(0x45, 420);
            this.label_VC16.Name = "label_VC16";
            this.label_VC16.Size = new Size(11, 12);
            this.label_VC16.TabIndex = 0x2c;
            this.label_VC16.Text = "0";
            this.groupBox_Vcell_Status.Controls.Add(this.label_Min_pos_ref);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Vcell_max_ref);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Vbat_ref);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Vcell_max);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Vcell_min_ref);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Vcell_min);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Max_pos_ref);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Vbat);
            this.groupBox_Vcell_Status.Controls.Add(this.label_V_delta_ref);
            this.groupBox_Vcell_Status.Controls.Add(this.label_V_delta);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Max_pos);
            this.groupBox_Vcell_Status.Controls.Add(this.label_Min_pos);
            this.groupBox_Vcell_Status.Location = new Point(0x32b, 15);
            this.groupBox_Vcell_Status.Name = "groupBox_Vcell_Status";
            this.groupBox_Vcell_Status.Size = new Size(240, 100);
            this.groupBox_Vcell_Status.TabIndex = 0x55;
            this.groupBox_Vcell_Status.TabStop = false;
            this.groupBox_Vcell_Status.Text = "Vcell_Status";
            this.label_Temp1_ref.AutoSize = true;
            this.label_Temp1_ref.Location = new Point(12, 0x1b);
            this.label_Temp1_ref.Name = "label_Temp1_ref";
            this.label_Temp1_ref.Size = new Size(0x29, 12);
            this.label_Temp1_ref.TabIndex = 0x56;
            this.label_Temp1_ref.Text = "Temp1:";
            this.label_Temp3_ref.AutoSize = true;
            this.label_Temp3_ref.Location = new Point(12, 0x35);
            this.label_Temp3_ref.Name = "label_Temp3_ref";
            this.label_Temp3_ref.Size = new Size(0x29, 12);
            this.label_Temp3_ref.TabIndex = 0x57;
            this.label_Temp3_ref.Text = "Temp2:";
            this.label_Temp2_ref.AutoSize = true;
            this.label_Temp2_ref.Location = new Point(0x7f, 0x1b);
            this.label_Temp2_ref.Name = "label_Temp2_ref";
            this.label_Temp2_ref.Size = new Size(0x29, 12);
            this.label_Temp2_ref.TabIndex = 0x58;
            this.label_Temp2_ref.Text = "Temp4:";
            this.label_Temp_env_ref.AutoSize = true;
            this.label_Temp_env_ref.Location = new Point(0x7f, 0x35);
            this.label_Temp_env_ref.Name = "label_Temp_env_ref";
            this.label_Temp_env_ref.Size = new Size(0x29, 12);
            this.label_Temp_env_ref.TabIndex = 0x59;
            this.label_Temp_env_ref.Text = "Temp5:";
            this.label_CHG_MOS_ref.AutoSize = true;
            this.label_CHG_MOS_ref.Location = new Point(10, 0x19);
            this.label_CHG_MOS_ref.Name = "label_CHG_MOS_ref";
            this.label_CHG_MOS_ref.Size = new Size(0x35, 12);
            this.label_CHG_MOS_ref.TabIndex = 0x5e;
            this.label_CHG_MOS_ref.Text = "Pre_MOS:";
            this.label_heat_ref.AutoSize = true;
            this.label_heat_ref.Location = new Point(10, 150);
            this.label_heat_ref.Name = "label_heat_ref";
            this.label_heat_ref.Size = new Size(0x23, 12);
            this.label_heat_ref.TabIndex = 0x5c;
            this.label_heat_ref.Text = "Heat:";
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_BMS_StartUp);
            this.groupBox_OtherStatus.Controls.Add(this.label277);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Res3);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Res2);
            this.groupBox_OtherStatus.Controls.Add(this.label315);
            this.groupBox_OtherStatus.Controls.Add(this.label317);
            this.groupBox_OtherStatus.Controls.Add(this.label319);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Res1);
            this.groupBox_OtherStatus.Controls.Add(this.label267);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_ToSleep);
            this.groupBox_OtherStatus.Controls.Add(this.label270);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Balance);
            this.groupBox_OtherStatus.Controls.Add(this.label458);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_DSG_Relay);
            this.groupBox_OtherStatus.Controls.Add(this.label462);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_CHG_Relay);
            this.groupBox_OtherStatus.Controls.Add(this.label260);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Main_Relay);
            this.groupBox_OtherStatus.Controls.Add(this.label470);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Pre_Relay);
            this.groupBox_OtherStatus.Controls.Add(this.label472);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Res7);
            this.groupBox_OtherStatus.Controls.Add(this.label476);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Res6);
            this.groupBox_OtherStatus.Controls.Add(this.label456);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Res5);
            this.groupBox_OtherStatus.Controls.Add(this.label459);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Res4);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_AFE2);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_AFE1);
            this.groupBox_OtherStatus.Controls.Add(this.label323);
            this.groupBox_OtherStatus.Controls.Add(this.label455);
            this.groupBox_OtherStatus.Controls.Add(this.label94);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_DSG_MOS);
            this.groupBox_OtherStatus.Controls.Add(this.label58);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Cool);
            this.groupBox_OtherStatus.Controls.Add(this.label_CHG_MOS_ref);
            this.groupBox_OtherStatus.Controls.Add(this.label_heat_ref);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_CHG_MOS);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Heat);
            this.groupBox_OtherStatus.Controls.Add(this.label_DSG_MOS_ref);
            this.groupBox_OtherStatus.Controls.Add(this.label_SysStatus_Pre_MOS);
            this.groupBox_OtherStatus.Location = new Point(0x305, 480);
            this.groupBox_OtherStatus.Name = "groupBox_OtherStatus";
            this.groupBox_OtherStatus.Size = new Size(0x119, 0xc3);
            this.groupBox_OtherStatus.TabIndex = 0x5f;
            this.groupBox_OtherStatus.TabStop = false;
            this.groupBox_OtherStatus.Text = "System_Status";
            this.label_SysStatus_BMS_StartUp.AutoSize = true;
            this.label_SysStatus_BMS_StartUp.Location = new Point(0x107, 0x19);
            this.label_SysStatus_BMS_StartUp.Name = "label_SysStatus_BMS_StartUp";
            this.label_SysStatus_BMS_StartUp.Size = new Size(11, 12);
            this.label_SysStatus_BMS_StartUp.TabIndex = 0x9f;
            this.label_SysStatus_BMS_StartUp.Text = "0";
            this.label277.AutoSize = true;
            this.label277.Location = new Point(0xb8, 0x19);
            this.label277.Name = "label277";
            this.label277.Size = new Size(0x4d, 12);
            this.label277.TabIndex = 0x9e;
            this.label277.Text = "BMS_StartUp:";
            this.label_SysStatus_Res3.AutoSize = true;
            this.label_SysStatus_Res3.Location = new Point(0xa1, 0xaf);
            this.label_SysStatus_Res3.Name = "label_SysStatus_Res3";
            this.label_SysStatus_Res3.Size = new Size(11, 12);
            this.label_SysStatus_Res3.TabIndex = 0x9a;
            this.label_SysStatus_Res3.Text = "0";
            this.label_SysStatus_Res2.AutoSize = true;
            this.label_SysStatus_Res2.Location = new Point(0xa1, 150);
            this.label_SysStatus_Res2.Name = "label_SysStatus_Res2";
            this.label_SysStatus_Res2.Size = new Size(11, 12);
            this.label_SysStatus_Res2.TabIndex = 0x9d;
            this.label_SysStatus_Res2.Text = "0";
            this.label315.AutoSize = true;
            this.label315.Location = new Point(0x56, 150);
            this.label315.Name = "label315";
            this.label315.Size = new Size(0x23, 12);
            this.label315.TabIndex = 0x9b;
            this.label315.Text = "Res2:";
            this.label317.AutoSize = true;
            this.label317.Location = new Point(0x56, 0xaf);
            this.label317.Name = "label317";
            this.label317.Size = new Size(0x23, 12);
            this.label317.TabIndex = 0x9c;
            this.label317.Text = "Res3:";
            this.label319.AutoSize = true;
            this.label319.Location = new Point(0x55, 0x7d);
            this.label319.Name = "label319";
            this.label319.Size = new Size(0x23, 12);
            this.label319.TabIndex = 0x99;
            this.label319.Text = "Res1:";
            this.label_SysStatus_Res1.AutoSize = true;
            this.label_SysStatus_Res1.Location = new Point(0xa1, 0x7d);
            this.label_SysStatus_Res1.Name = "label_SysStatus_Res1";
            this.label_SysStatus_Res1.Size = new Size(11, 12);
            this.label_SysStatus_Res1.TabIndex = 0x98;
            this.label_SysStatus_Res1.Text = "0";
            this.label267.AutoSize = true;
            this.label267.Location = new Point(0xb8, 50);
            this.label267.Name = "label267";
            this.label267.Size = new Size(0x35, 12);
            this.label267.TabIndex = 0x93;
            this.label267.Text = "Balance:";
            this.label_SysStatus_ToSleep.AutoSize = true;
            this.label_SysStatus_ToSleep.Location = new Point(0x107, 0x4b);
            this.label_SysStatus_ToSleep.Name = "label_SysStatus_ToSleep";
            this.label_SysStatus_ToSleep.Size = new Size(11, 12);
            this.label_SysStatus_ToSleep.TabIndex = 0x95;
            this.label_SysStatus_ToSleep.Text = "0";
            this.label270.AutoSize = true;
            this.label270.Location = new Point(0xb8, 0x4b);
            this.label270.Name = "label270";
            this.label270.Size = new Size(0x35, 12);
            this.label270.TabIndex = 0x94;
            this.label270.Text = "ToSleep:";
            this.label_SysStatus_Balance.AutoSize = true;
            this.label_SysStatus_Balance.Location = new Point(0x107, 50);
            this.label_SysStatus_Balance.Name = "label_SysStatus_Balance";
            this.label_SysStatus_Balance.Size = new Size(11, 12);
            this.label_SysStatus_Balance.TabIndex = 0x92;
            this.label_SysStatus_Balance.Text = "0";
            this.label458.AutoSize = true;
            this.label458.Location = new Point(0x56, 0x4b);
            this.label458.Name = "label458";
            this.label458.Size = new Size(0x41, 12);
            this.label458.TabIndex = 0x8f;
            this.label458.Text = "CHG_Relay:";
            this.label_SysStatus_DSG_Relay.AutoSize = true;
            this.label_SysStatus_DSG_Relay.Location = new Point(0xa1, 100);
            this.label_SysStatus_DSG_Relay.Name = "label_SysStatus_DSG_Relay";
            this.label_SysStatus_DSG_Relay.Size = new Size(11, 12);
            this.label_SysStatus_DSG_Relay.TabIndex = 0x91;
            this.label_SysStatus_DSG_Relay.Text = "0";
            this.label462.AutoSize = true;
            this.label462.Location = new Point(0x56, 100);
            this.label462.Name = "label462";
            this.label462.Size = new Size(0x41, 12);
            this.label462.TabIndex = 0x90;
            this.label462.Text = "DSG_Relay:";
            this.label_SysStatus_CHG_Relay.AutoSize = true;
            this.label_SysStatus_CHG_Relay.Location = new Point(0xa1, 0x4b);
            this.label_SysStatus_CHG_Relay.Name = "label_SysStatus_CHG_Relay";
            this.label_SysStatus_CHG_Relay.Size = new Size(11, 12);
            this.label_SysStatus_CHG_Relay.TabIndex = 0x8e;
            this.label_SysStatus_CHG_Relay.Text = "0";
            this.label260.AutoSize = true;
            this.label260.Location = new Point(0x56, 50);
            this.label260.Name = "label260";
            this.label260.Size = new Size(0x47, 12);
            this.label260.TabIndex = 0x8d;
            this.label260.Text = "Main_Relay:";
            this.label_SysStatus_Main_Relay.AutoSize = true;
            this.label_SysStatus_Main_Relay.Location = new Point(0xa1, 50);
            this.label_SysStatus_Main_Relay.Name = "label_SysStatus_Main_Relay";
            this.label_SysStatus_Main_Relay.Size = new Size(11, 12);
            this.label_SysStatus_Main_Relay.TabIndex = 140;
            this.label_SysStatus_Main_Relay.Text = "0";
            this.label470.AutoSize = true;
            this.label470.Location = new Point(0x56, 0x19);
            this.label470.Name = "label470";
            this.label470.Size = new Size(0x41, 12);
            this.label470.TabIndex = 0x85;
            this.label470.Text = "Pre_Relay:";
            this.label_SysStatus_Pre_Relay.AutoSize = true;
            this.label_SysStatus_Pre_Relay.Location = new Point(0xa1, 0x19);
            this.label_SysStatus_Pre_Relay.Name = "label_SysStatus_Pre_Relay";
            this.label_SysStatus_Pre_Relay.Size = new Size(11, 12);
            this.label_SysStatus_Pre_Relay.TabIndex = 0x84;
            this.label_SysStatus_Pre_Relay.Text = "0";
            this.label472.AutoSize = true;
            this.label472.Location = new Point(0xb8, 150);
            this.label472.Name = "label472";
            this.label472.Size = new Size(0x23, 12);
            this.label472.TabIndex = 0x81;
            this.label472.Text = "Res6:";
            this.label_SysStatus_Res7.AutoSize = true;
            this.label_SysStatus_Res7.Location = new Point(0x107, 0xaf);
            this.label_SysStatus_Res7.Name = "label_SysStatus_Res7";
            this.label_SysStatus_Res7.Size = new Size(11, 12);
            this.label_SysStatus_Res7.TabIndex = 0x83;
            this.label_SysStatus_Res7.Text = "0";
            this.label476.AutoSize = true;
            this.label476.Location = new Point(0xb8, 0xaf);
            this.label476.Name = "label476";
            this.label476.Size = new Size(0x23, 12);
            this.label476.TabIndex = 130;
            this.label476.Text = "Res7:";
            this.label_SysStatus_Res6.AutoSize = true;
            this.label_SysStatus_Res6.Location = new Point(0x107, 150);
            this.label_SysStatus_Res6.Name = "label_SysStatus_Res6";
            this.label_SysStatus_Res6.Size = new Size(11, 12);
            this.label_SysStatus_Res6.TabIndex = 0x7f;
            this.label_SysStatus_Res6.Text = "0";
            this.label456.AutoSize = true;
            this.label456.Location = new Point(0xb8, 0x7d);
            this.label456.Name = "label456";
            this.label456.Size = new Size(0x23, 12);
            this.label456.TabIndex = 0x77;
            this.label456.Text = "Res5:";
            this.label_SysStatus_Res5.AutoSize = true;
            this.label_SysStatus_Res5.Location = new Point(0x107, 0x7d);
            this.label_SysStatus_Res5.Name = "label_SysStatus_Res5";
            this.label_SysStatus_Res5.Size = new Size(11, 12);
            this.label_SysStatus_Res5.TabIndex = 0x76;
            this.label_SysStatus_Res5.Text = "0";
            this.label459.AutoSize = true;
            this.label459.Location = new Point(0xb8, 100);
            this.label459.Name = "label459";
            this.label459.Size = new Size(0x23, 12);
            this.label459.TabIndex = 0x72;
            this.label459.Text = "Res4:";
            this.label_SysStatus_Res4.AutoSize = true;
            this.label_SysStatus_Res4.Location = new Point(0x107, 100);
            this.label_SysStatus_Res4.Name = "label_SysStatus_Res4";
            this.label_SysStatus_Res4.Size = new Size(11, 12);
            this.label_SysStatus_Res4.TabIndex = 0x70;
            this.label_SysStatus_Res4.Text = "0";
            this.label_SysStatus_AFE2.AutoSize = true;
            this.label_SysStatus_AFE2.Location = new Point(0x41, 0x7d);
            this.label_SysStatus_AFE2.Name = "label_SysStatus_AFE2";
            this.label_SysStatus_AFE2.Size = new Size(11, 12);
            this.label_SysStatus_AFE2.TabIndex = 0x6c;
            this.label_SysStatus_AFE2.Text = "0";
            this.label_SysStatus_AFE1.AutoSize = true;
            this.label_SysStatus_AFE1.Location = new Point(0x41, 100);
            this.label_SysStatus_AFE1.Name = "label_SysStatus_AFE1";
            this.label_SysStatus_AFE1.Size = new Size(11, 12);
            this.label_SysStatus_AFE1.TabIndex = 0x6f;
            this.label_SysStatus_AFE1.Text = "0";
            this.label323.AutoSize = true;
            this.label323.Location = new Point(10, 100);
            this.label323.Name = "label323";
            this.label323.Size = new Size(0x23, 12);
            this.label323.TabIndex = 0x6d;
            this.label323.Text = "AFE1:";
            this.label455.AutoSize = true;
            this.label455.Location = new Point(10, 0x7d);
            this.label455.Name = "label455";
            this.label455.Size = new Size(0x23, 12);
            this.label455.TabIndex = 110;
            this.label455.Text = "AFE2:";
            this.label94.AutoSize = true;
            this.label94.Location = new Point(10, 0x4b);
            this.label94.Name = "label94";
            this.label94.Size = new Size(0x35, 12);
            this.label94.TabIndex = 0x6b;
            this.label94.Text = "DSG_MOS:";
            this.label_SysStatus_DSG_MOS.AutoSize = true;
            this.label_SysStatus_DSG_MOS.Location = new Point(0x41, 0x4b);
            this.label_SysStatus_DSG_MOS.Name = "label_SysStatus_DSG_MOS";
            this.label_SysStatus_DSG_MOS.Size = new Size(11, 12);
            this.label_SysStatus_DSG_MOS.TabIndex = 0x6a;
            this.label_SysStatus_DSG_MOS.Text = "0";
            this.label58.AutoSize = true;
            this.label58.Location = new Point(10, 0xaf);
            this.label58.Name = "label58";
            this.label58.Size = new Size(0x23, 12);
            this.label58.TabIndex = 0x69;
            this.label58.Text = "Cool:";
            this.label_SysStatus_Cool.AutoSize = true;
            this.label_SysStatus_Cool.Location = new Point(0x41, 0xaf);
            this.label_SysStatus_Cool.Name = "label_SysStatus_Cool";
            this.label_SysStatus_Cool.Size = new Size(11, 12);
            this.label_SysStatus_Cool.TabIndex = 0x68;
            this.label_SysStatus_Cool.Text = "0";
            this.label_SysStatus_CHG_MOS.AutoSize = true;
            this.label_SysStatus_CHG_MOS.Location = new Point(0x41, 50);
            this.label_SysStatus_CHG_MOS.Name = "label_SysStatus_CHG_MOS";
            this.label_SysStatus_CHG_MOS.Size = new Size(11, 12);
            this.label_SysStatus_CHG_MOS.TabIndex = 0x65;
            this.label_SysStatus_CHG_MOS.Text = "0";
            this.label_SysStatus_Heat.AutoSize = true;
            this.label_SysStatus_Heat.Location = new Point(0x41, 150);
            this.label_SysStatus_Heat.Name = "label_SysStatus_Heat";
            this.label_SysStatus_Heat.Size = new Size(11, 12);
            this.label_SysStatus_Heat.TabIndex = 0x5b;
            this.label_SysStatus_Heat.Text = "0";
            this.label_DSG_MOS_ref.AutoSize = true;
            this.label_DSG_MOS_ref.Location = new Point(10, 50);
            this.label_DSG_MOS_ref.Name = "label_DSG_MOS_ref";
            this.label_DSG_MOS_ref.Size = new Size(0x35, 12);
            this.label_DSG_MOS_ref.TabIndex = 0x60;
            this.label_DSG_MOS_ref.Text = "CHG_MOS:";
            this.label_SysStatus_Pre_MOS.AutoSize = true;
            this.label_SysStatus_Pre_MOS.Location = new Point(0x41, 0x19);
            this.label_SysStatus_Pre_MOS.Name = "label_SysStatus_Pre_MOS";
            this.label_SysStatus_Pre_MOS.Size = new Size(11, 12);
            this.label_SysStatus_Pre_MOS.TabIndex = 0x5b;
            this.label_SysStatus_Pre_MOS.Text = "0";
            this.label_Fault_Third.AutoSize = true;
            this.label_Fault_Third.Location = new Point(0x53, 0x7b);
            this.label_Fault_Third.Name = "label_Fault_Third";
            this.label_Fault_Third.Size = new Size(11, 12);
            this.label_Fault_Third.TabIndex = 0x67;
            this.label_Fault_Third.Text = "0";
            this.label309.AutoSize = true;
            this.label309.Location = new Point(12, 0x7b);
            this.label309.Name = "label309";
            this.label309.Size = new Size(0x47, 12);
            this.label309.TabIndex = 0x66;
            this.label309.Text = "FaultThird:";
            this.label_Fault_Second.AutoSize = true;
            this.label_Fault_Second.Location = new Point(0x53, 0x62);
            this.label_Fault_Second.Name = "label_Fault_Second";
            this.label_Fault_Second.Size = new Size(11, 12);
            this.label_Fault_Second.TabIndex = 0x60;
            this.label_Fault_Second.Text = "0";
            this.label_Fault_First.AutoSize = true;
            this.label_Fault_First.Location = new Point(0x53, 0x49);
            this.label_Fault_First.Name = "label_Fault_First";
            this.label_Fault_First.Size = new Size(11, 12);
            this.label_Fault_First.TabIndex = 100;
            this.label_Fault_First.Text = "0";
            this.label_WarnStu_ref.AutoSize = true;
            this.label_WarnStu_ref.Location = new Point(12, 0x49);
            this.label_WarnStu_ref.Name = "label_WarnStu_ref";
            this.label_WarnStu_ref.Size = new Size(0x47, 12);
            this.label_WarnStu_ref.TabIndex = 0x61;
            this.label_WarnStu_ref.Text = "FaultFirst:";
            this.label_FaultStu_ref.AutoSize = true;
            this.label_FaultStu_ref.Location = new Point(12, 0x62);
            this.label_FaultStu_ref.Name = "label_FaultStu_ref";
            this.label_FaultStu_ref.Size = new Size(0x3b, 12);
            this.label_FaultStu_ref.TabIndex = 0x63;
            this.label_FaultStu_ref.Text = "FaultSec:";
            this.tabControl1.AllowDrop = true;
            this.tabControl1.Controls.Add(this.tabPage1);
            this.tabControl1.Controls.Add(this.tabPage6);
            this.tabControl1.Controls.Add(this.tabPage2);
            this.tabControl1.Controls.Add(this.tabPage5);
            this.tabControl1.Controls.Add(this.tabPage3);
            this.tabControl1.Controls.Add(this.tabPage4);
            this.tabControl1.Dock = DockStyle.Fill;
            this.tabControl1.Location = new Point(0, 0);
            this.tabControl1.Name = "tabControl1";
            this.tabControl1.SelectedIndex = 0;
            this.tabControl1.Size = new Size(0x529, 0x2f9);
            this.tabControl1.TabIndex = 0;
            this.tabControl1.SelectedIndexChanged += new EventHandler(this.tabControl1_SelectedIndexChanged);
            this.tabPage1.Controls.Add(this.label_BaudRate);
            this.tabPage1.Controls.Add(this.label_UART);
            this.tabPage1.Controls.Add(this.toolStrip_Imformation);
            this.tabPage1.Controls.Add(this.comboBox_BandRate);
            this.tabPage1.Controls.Add(this.comboBox_ComNum);
            this.tabPage1.Controls.Add(this.button_TurnOnOffCom);
            this.tabPage1.Controls.Add(this.groupBox_read);
            this.tabPage1.Controls.Add(this.groupBox_set);
            this.tabPage1.Location = new Point(4, 0x16);
            this.tabPage1.Name = "tabPage1";
            this.tabPage1.Padding = new Padding(3);
            this.tabPage1.Size = new Size(0x521, 0x2df);
            this.tabPage1.TabIndex = 0;
            this.tabPage1.Text = "Imformation";
            this.tabPage1.UseVisualStyleBackColor = true;
            this.label_BaudRate.AutoSize = true;
            this.label_BaudRate.Font = new Font("SimSun", 10.5f, FontStyle.Regular, GraphicsUnit.Point, 0x86);
            this.label_BaudRate.Location = new Point(14, 0x2e);
            this.label_BaudRate.Name = "label_BaudRate";
            this.label_BaudRate.Size = new Size(0x38, 14);
            this.label_BaudRate.TabIndex = 0x6c;
            this.label_BaudRate.Text = "波特率:";
            this.label_UART.AutoSize = true;
            this.label_UART.Font = new Font("SimSun", 10.5f, FontStyle.Regular, GraphicsUnit.Point, 0x86);
            this.label_UART.Location = new Point(0x10, 13);
            this.label_UART.Name = "label_UART";
            this.label_UART.Size = new Size(0x2a, 14);
            this.label_UART.TabIndex = 0x6b;
            this.label_UART.Text = "端口:";
            this.toolStrip_Imformation.BackColor = Color.Gainsboro;
            this.toolStrip_Imformation.Dock = DockStyle.Bottom;
            this.toolStrip_Imformation.ImageScalingSize = new Size(20, 20);
            ToolStripItem[] toolStripItems = new ToolStripItem[14];
            toolStripItems[0] = this.toolStripLabel_RxCnt1;
            toolStripItems[1] = this.toolStripLabel_RTC_second;
            toolStripItems[2] = this.toolStripLabel4;
            toolStripItems[3] = this.toolStripLabel_RTC_minute;
            toolStripItems[4] = this.toolStripLabel2;
            toolStripItems[5] = this.toolStripLabel_RTC_hour;
            toolStripItems[6] = this.toolStripLabel11;
            toolStripItems[7] = this.toolStripLabel_RTC_day;
            toolStripItems[8] = this.toolStripLabel7;
            toolStripItems[9] = this.toolStripLabel_RTC_month;
            toolStripItems[10] = this.toolStripLabel9;
            toolStripItems[11] = this.toolStripLabel_RTC_year;
            toolStripItems[12] = this.toolStripLabel10;
            toolStripItems[13] = this.toolStripLabel_TxCnt1;
            this.toolStrip_Imformation.Items.AddRange(toolStripItems);
            this.toolStrip_Imformation.LayoutStyle = ToolStripLayoutStyle.HorizontalStackWithOverflow;
            this.toolStrip_Imformation.Location = new Point(3, 0x2c3);
            this.toolStrip_Imformation.Name = "toolStrip_Imformation";
            this.toolStrip_Imformation.Size = new Size(0x51b, 0x19);
            this.toolStrip_Imformation.TabIndex = 0x66;
            this.toolStrip_Imformation.Text = "aaaaa";
            this.toolStripLabel_RxCnt1.Name = "toolStripLabel_RxCnt1";
            this.toolStripLabel_RxCnt1.Overflow = ToolStripItemOverflow.Never;
            this.toolStripLabel_RxCnt1.Size = new Size(15, 0x16);
            this.toolStripLabel_RxCnt1.Text = "0";
            this.toolStripLabel_RTC_second.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel_RTC_second.Name = "toolStripLabel_RTC_second";
            this.toolStripLabel_RTC_second.Size = new Size(0x16, 0x16);
            this.toolStripLabel_RTC_second.Text = "58";
            this.toolStripLabel4.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel4.Name = "toolStripLabel4";
            this.toolStripLabel4.Size = new Size(11, 0x16);
            this.toolStripLabel4.Text = ":";
            this.toolStripLabel_RTC_minute.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel_RTC_minute.Name = "toolStripLabel_RTC_minute";
            this.toolStripLabel_RTC_minute.Size = new Size(0x16, 0x16);
            this.toolStripLabel_RTC_minute.Text = "58";
            this.toolStripLabel2.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel2.Name = "toolStripLabel2";
            this.toolStripLabel2.Size = new Size(11, 0x16);
            this.toolStripLabel2.Text = ":";
            this.toolStripLabel_RTC_hour.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel_RTC_hour.Name = "toolStripLabel_RTC_hour";
            this.toolStripLabel_RTC_hour.Size = new Size(0x16, 0x16);
            this.toolStripLabel_RTC_hour.Text = "23";
            this.toolStripLabel11.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel11.Name = "toolStripLabel11";
            this.toolStripLabel11.Size = new Size(0x12, 0x16);
            this.toolStripLabel11.Text = "__";
            this.toolStripLabel_RTC_day.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel_RTC_day.Name = "toolStripLabel_RTC_day";
            this.toolStripLabel_RTC_day.Size = new Size(0x16, 0x16);
            this.toolStripLabel_RTC_day.Text = "31";
            this.toolStripLabel7.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel7.Name = "toolStripLabel7";
            this.toolStripLabel7.Size = new Size(13, 0x16);
            this.toolStripLabel7.Text = "/";
            this.toolStripLabel_RTC_month.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel_RTC_month.Name = "toolStripLabel_RTC_month";
            this.toolStripLabel_RTC_month.Size = new Size(0x16, 0x16);
            this.toolStripLabel_RTC_month.Text = "12";
            this.toolStripLabel9.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel9.Name = "toolStripLabel9";
            this.toolStripLabel9.Size = new Size(13, 0x16);
            this.toolStripLabel9.Text = "/";
            this.toolStripLabel_RTC_year.Alignment = ToolStripItemAlignment.Right;
            this.toolStripLabel_RTC_year.Name = "toolStripLabel_RTC_year";
            this.toolStripLabel_RTC_year.Size = new Size(0x24, 0x16);
            this.toolStripLabel_RTC_year.Text = "2018";
            this.toolStripLabel10.Name = "toolStripLabel10";
            this.toolStripLabel10.Size = new Size(0x30, 0x16);
            this.toolStripLabel10.Text = "          ";
            this.toolStripLabel_TxCnt1.Name = "toolStripLabel_TxCnt1";
            this.toolStripLabel_TxCnt1.Size = new Size(15, 0x16);
            this.toolStripLabel_TxCnt1.Text = "0";
            this.groupBox_read.Controls.Add(this.groupBox36);
            this.groupBox_read.Controls.Add(this.groupBox35);
            this.groupBox_read.Controls.Add(this.groupBox7);
            this.groupBox_read.Controls.Add(this.groupBox6);
            this.groupBox_read.Controls.Add(this.groupBox_Present);
            this.groupBox_read.Controls.Add(this.groupBox5);
            this.groupBox_read.Controls.Add(this.groupBox4);
            this.groupBox_read.Controls.Add(this.groupBox3);
            this.groupBox_read.Controls.Add(this.groupBox_ERROR);
            this.groupBox_read.Controls.Add(this.groupBox_Balance);
            this.groupBox_read.Controls.Add(this.groupBox_Vcell);
            this.groupBox_read.Controls.Add(this.groupBox_Vcell_Status);
            this.groupBox_read.Controls.Add(this.groupBox_Temperature);
            this.groupBox_read.Controls.Add(this.groupBox_OtherStatus);
            this.groupBox_read.Location = new Point(0xf7, 3);
            this.groupBox_read.Name = "groupBox_read";
            this.groupBox_read.Size = new Size(0x424, 690);
            this.groupBox_read.TabIndex = 0x65;
            this.groupBox_read.TabStop = false;
            this.groupBox_read.Text = "Read_imformation";
            this.groupBox36.Controls.Add(this.label_Cool_Res2);
            this.groupBox36.Controls.Add(this.label_Cool_Res3);
            this.groupBox36.Controls.Add(this.label326);
            this.groupBox36.Controls.Add(this.label411);
            this.groupBox36.Controls.Add(this.label_Cool_Res1);
            this.groupBox36.Controls.Add(this.label413);
            this.groupBox36.Controls.Add(this.label420);
            this.groupBox36.Controls.Add(this.label421);
            this.groupBox36.Controls.Add(this.label_Cool_OverT);
            this.groupBox36.Controls.Add(this.label_Cool_Normal);
            this.groupBox36.Controls.Add(this.label424);
            this.groupBox36.Controls.Add(this.label425);
            this.groupBox36.Controls.Add(this.label_Cool_Short);
            this.groupBox36.Controls.Add(this.label_Cool_Open);
            this.groupBox36.Controls.Add(this.label_Heat_Res2);
            this.groupBox36.Controls.Add(this.label_Heat_Res3);
            this.groupBox36.Controls.Add(this.label278);
            this.groupBox36.Controls.Add(this.label279);
            this.groupBox36.Controls.Add(this.label_Heat_Res1);
            this.groupBox36.Controls.Add(this.label_Heat_);
            this.groupBox36.Controls.Add(this.label282);
            this.groupBox36.Controls.Add(this.label_Heat_O);
            this.groupBox36.Controls.Add(this.label_Heat_OverT);
            this.groupBox36.Controls.Add(this.label_Heat_Normal);
            this.groupBox36.Controls.Add(this.label299);
            this.groupBox36.Controls.Add(this.label304);
            this.groupBox36.Controls.Add(this.label_Heat_Short);
            this.groupBox36.Controls.Add(this.label_Heat_Open);
            this.groupBox36.Location = new Point(5, 480);
            this.groupBox36.Name = "groupBox36";
            this.groupBox36.Size = new Size(0xbf, 0xc3);
            this.groupBox36.TabIndex = 0x86;
            this.groupBox36.TabStop = false;
            this.groupBox36.Text = "Heat_Cool_Fault";
            this.label_Cool_Res2.AutoSize = true;
            this.label_Cool_Res2.Location = new Point(0xb0, 150);
            this.label_Cool_Res2.Name = "label_Cool_Res2";
            this.label_Cool_Res2.Size = new Size(11, 12);
            this.label_Cool_Res2.TabIndex = 0x91;
            this.label_Cool_Res2.Text = "0";
            this.label_Cool_Res3.AutoSize = true;
            this.label_Cool_Res3.Location = new Point(0xb0, 0xaf);
            this.label_Cool_Res3.Name = "label_Cool_Res3";
            this.label_Cool_Res3.Size = new Size(11, 12);
            this.label_Cool_Res3.TabIndex = 0x8f;
            this.label_Cool_Res3.Text = "0";
            this.label326.AutoSize = true;
            this.label326.Location = new Point(0x67, 0xaf);
            this.label326.Name = "label326";
            this.label326.Size = new Size(0x23, 12);
            this.label326.TabIndex = 0x90;
            this.label326.Text = "Res3:";
            this.label411.AutoSize = true;
            this.label411.Location = new Point(0x67, 150);
            this.label411.Name = "label411";
            this.label411.Size = new Size(0x23, 12);
            this.label411.TabIndex = 0x8d;
            this.label411.Text = "Res2:";
            this.label_Cool_Res1.AutoSize = true;
            this.label_Cool_Res1.Location = new Point(0xb0, 0x7d);
            this.label_Cool_Res1.Name = "label_Cool_Res1";
            this.label_Cool_Res1.Size = new Size(11, 12);
            this.label_Cool_Res1.TabIndex = 0x8e;
            this.label_Cool_Res1.Text = "0";
            this.label413.AutoSize = true;
            this.label413.Location = new Point(0x67, 0x4b);
            this.label413.Name = "label413";
            this.label413.Size = new Size(0x47, 12);
            this.label413.TabIndex = 0x8b;
            this.label413.Text = "Cool_Short:";
            this.label420.AutoSize = true;
            this.label420.Location = new Point(0x67, 0x7d);
            this.label420.Name = "label420";
            this.label420.Size = new Size(0x23, 12);
            this.label420.TabIndex = 140;
            this.label420.Text = "Res1:";
            this.label421.AutoSize = true;
            this.label421.Location = new Point(0x67, 50);
            this.label421.Name = "label421";
            this.label421.Size = new Size(0x41, 12);
            this.label421.TabIndex = 0x89;
            this.label421.Text = "Cool_Open:";
            this.label_Cool_OverT.AutoSize = true;
            this.label_Cool_OverT.Location = new Point(0xb0, 100);
            this.label_Cool_OverT.Name = "label_Cool_OverT";
            this.label_Cool_OverT.Size = new Size(11, 12);
            this.label_Cool_OverT.TabIndex = 0x88;
            this.label_Cool_OverT.Text = "0";
            this.label_Cool_Normal.AutoSize = true;
            this.label_Cool_Normal.Location = new Point(0xb0, 0x19);
            this.label_Cool_Normal.Name = "label_Cool_Normal";
            this.label_Cool_Normal.Size = new Size(11, 12);
            this.label_Cool_Normal.TabIndex = 0x8a;
            this.label_Cool_Normal.Text = "0";
            this.label424.AutoSize = true;
            this.label424.Location = new Point(0x67, 100);
            this.label424.Name = "label424";
            this.label424.Size = new Size(0x47, 12);
            this.label424.TabIndex = 0x87;
            this.label424.Text = "Cool_OverT:";
            this.label425.AutoSize = true;
            this.label425.Location = new Point(0x67, 0x19);
            this.label425.Name = "label425";
            this.label425.Size = new Size(0x4d, 12);
            this.label425.TabIndex = 0x86;
            this.label425.Text = "Cool_Normal:";
            this.label_Cool_Short.AutoSize = true;
            this.label_Cool_Short.Location = new Point(0xb0, 0x4b);
            this.label_Cool_Short.Name = "label_Cool_Short";
            this.label_Cool_Short.Size = new Size(11, 12);
            this.label_Cool_Short.TabIndex = 0x84;
            this.label_Cool_Short.Text = "0";
            this.label_Cool_Open.AutoSize = true;
            this.label_Cool_Open.Location = new Point(0xb0, 50);
            this.label_Cool_Open.Name = "label_Cool_Open";
            this.label_Cool_Open.Size = new Size(11, 12);
            this.label_Cool_Open.TabIndex = 0x85;
            this.label_Cool_Open.Text = "0";
            this.label_Heat_Res2.AutoSize = true;
            this.label_Heat_Res2.Location = new Point(0x51, 150);
            this.label_Heat_Res2.Name = "label_Heat_Res2";
            this.label_Heat_Res2.Size = new Size(11, 12);
            this.label_Heat_Res2.TabIndex = 0x83;
            this.label_Heat_Res2.Text = "0";
            this.label_Heat_Res3.AutoSize = true;
            this.label_Heat_Res3.Location = new Point(0x51, 0xaf);
            this.label_Heat_Res3.Name = "label_Heat_Res3";
            this.label_Heat_Res3.Size = new Size(11, 12);
            this.label_Heat_Res3.TabIndex = 0x81;
            this.label_Heat_Res3.Text = "0";
            this.label278.AutoSize = true;
            this.label278.Location = new Point(8, 0xaf);
            this.label278.Name = "label278";
            this.label278.Size = new Size(0x23, 12);
            this.label278.TabIndex = 130;
            this.label278.Text = "Res3:";
            this.label279.AutoSize = true;
            this.label279.Location = new Point(8, 150);
            this.label279.Name = "label279";
            this.label279.Size = new Size(0x23, 12);
            this.label279.TabIndex = 0x7f;
            this.label279.Text = "Res2:";
            this.label_Heat_Res1.AutoSize = true;
            this.label_Heat_Res1.Location = new Point(0x51, 0x7d);
            this.label_Heat_Res1.Name = "label_Heat_Res1";
            this.label_Heat_Res1.Size = new Size(11, 12);
            this.label_Heat_Res1.TabIndex = 0x80;
            this.label_Heat_Res1.Text = "0";
            this.label_Heat_.AutoSize = true;
            this.label_Heat_.Location = new Point(9, 0x4b);
            this.label_Heat_.Name = "label_Heat_";
            this.label_Heat_.Size = new Size(0x47, 12);
            this.label_Heat_.TabIndex = 0x7d;
            this.label_Heat_.Text = "Heat_Short:";
            this.label282.AutoSize = true;
            this.label282.Location = new Point(8, 0x7d);
            this.label282.Name = "label282";
            this.label282.Size = new Size(0x23, 12);
            this.label282.TabIndex = 0x7e;
            this.label282.Text = "Res1:";
            this.label_Heat_O.AutoSize = true;
            this.label_Heat_O.Location = new Point(9, 50);
            this.label_Heat_O.Name = "label_Heat_O";
            this.label_Heat_O.Size = new Size(0x41, 12);
            this.label_Heat_O.TabIndex = 0x7b;
            this.label_Heat_O.Text = "Heat_Open:";
            this.label_Heat_OverT.AutoSize = true;
            this.label_Heat_OverT.Location = new Point(0x51, 100);
            this.label_Heat_OverT.Name = "label_Heat_OverT";
            this.label_Heat_OverT.Size = new Size(11, 12);
            this.label_Heat_OverT.TabIndex = 0x7a;
            this.label_Heat_OverT.Text = "0";
            this.label_Heat_Normal.AutoSize = true;
            this.label_Heat_Normal.Location = new Point(0x52, 0x19);
            this.label_Heat_Normal.Name = "label_Heat_Normal";
            this.label_Heat_Normal.Size = new Size(11, 12);
            this.label_Heat_Normal.TabIndex = 0x7c;
            this.label_Heat_Normal.Text = "0";
            this.label299.AutoSize = true;
            this.label299.Location = new Point(8, 100);
            this.label299.Name = "label299";
            this.label299.Size = new Size(0x47, 12);
            this.label299.TabIndex = 0x79;
            this.label299.Text = "Heat_OverT:";
            this.label304.AutoSize = true;
            this.label304.Location = new Point(9, 0x19);
            this.label304.Name = "label304";
            this.label304.Size = new Size(0x4d, 12);
            this.label304.TabIndex = 120;
            this.label304.Text = "Heat_Normal:";
            this.label_Heat_Short.AutoSize = true;
            this.label_Heat_Short.Location = new Point(0x52, 0x4b);
            this.label_Heat_Short.Name = "label_Heat_Short";
            this.label_Heat_Short.Size = new Size(11, 12);
            this.label_Heat_Short.TabIndex = 0x76;
            this.label_Heat_Short.Text = "0";
            this.label_Heat_Open.AutoSize = true;
            this.label_Heat_Open.Location = new Point(0x52, 50);
            this.label_Heat_Open.Name = "label_Heat_Open";
            this.label_Heat_Open.Size = new Size(11, 12);
            this.label_Heat_Open.TabIndex = 0x77;
            this.label_Heat_Open.Text = "0";
            this.groupBox35.Controls.Add(this.label_HeatCoolErr);
            this.groupBox35.Controls.Add(this.label435);
            this.groupBox35.Controls.Add(this.label_CycleTimes);
            this.groupBox35.Controls.Add(this.label_Full_mAh);
            this.groupBox35.Controls.Add(this.label_CycleTimes_ref);
            this.groupBox35.Controls.Add(this.label_Idsg_ref);
            this.groupBox35.Controls.Add(this.label_Factory_mAh_ref);
            this.groupBox35.Controls.Add(this.label_Factory_mAh);
            this.groupBox35.Controls.Add(this.label_Residue_mAh_ref);
            this.groupBox35.Controls.Add(this.label_Ichg_ref);
            this.groupBox35.Controls.Add(this.label_Fault_Third);
            this.groupBox35.Controls.Add(this.label_Idsg);
            this.groupBox35.Controls.Add(this.label309);
            this.groupBox35.Controls.Add(this.label_Ichg);
            this.groupBox35.Controls.Add(this.label242);
            this.groupBox35.Controls.Add(this.label_Fault_Second);
            this.groupBox35.Controls.Add(this.label_Present_mAh);
            this.groupBox35.Controls.Add(this.label_Fault_First);
            this.groupBox35.Controls.Add(this.label_SOC);
            this.groupBox35.Controls.Add(this.label_Present_mAh_ref);
            this.groupBox35.Controls.Add(this.label_SOH);
            this.groupBox35.Controls.Add(this.label_WarnStu_ref);
            this.groupBox35.Controls.Add(this.label250);
            this.groupBox35.Controls.Add(this.label_FaultStu_ref);
            this.groupBox35.Location = new Point(0x32b, 300);
            this.groupBox35.Name = "groupBox35";
            this.groupBox35.Size = new Size(240, 170);
            this.groupBox35.TabIndex = 0x70;
            this.groupBox35.TabStop = false;
            this.groupBox35.Text = "Current_SOC_HeatCool_FaultFlag";
            this.label_HeatCoolErr.AutoSize = true;
            this.label_HeatCoolErr.Location = new Point(0x53, 0x94);
            this.label_HeatCoolErr.Name = "label_HeatCoolErr";
            this.label_HeatCoolErr.Size = new Size(11, 12);
            this.label_HeatCoolErr.TabIndex = 0x6c;
            this.label_HeatCoolErr.Text = "0";
            this.label435.AutoSize = true;
            this.label435.Location = new Point(12, 0x94);
            this.label435.Name = "label435";
            this.label435.Size = new Size(0x47, 12);
            this.label435.TabIndex = 0x6b;
            this.label435.Text = "HeatCoolEr:";
            this.label_CycleTimes.AutoSize = true;
            this.label_CycleTimes.Location = new Point(0xba, 0x94);
            this.label_CycleTimes.Name = "label_CycleTimes";
            this.label_CycleTimes.Size = new Size(11, 12);
            this.label_CycleTimes.TabIndex = 0x68;
            this.label_CycleTimes.Text = "0";
            this.label_Full_mAh.AutoSize = true;
            this.label_Full_mAh.Location = new Point(0xba, 0x62);
            this.label_Full_mAh.Name = "label_Full_mAh";
            this.label_Full_mAh.Size = new Size(11, 12);
            this.label_Full_mAh.TabIndex = 0x6a;
            this.label_Full_mAh.Text = "0";
            this.label_CycleTimes_ref.AutoSize = true;
            this.label_CycleTimes_ref.Location = new Point(0x7f, 0x94);
            this.label_CycleTimes_ref.Name = "label_CycleTimes_ref";
            this.label_CycleTimes_ref.Size = new Size(0x35, 12);
            this.label_CycleTimes_ref.TabIndex = 0x67;
            this.label_CycleTimes_ref.Text = "CycTime:";
            this.label_Idsg_ref.AutoSize = true;
            this.label_Idsg_ref.Location = new Point(12, 50);
            this.label_Idsg_ref.Name = "label_Idsg_ref";
            this.label_Idsg_ref.Size = new Size(0x35, 12);
            this.label_Idsg_ref.TabIndex = 0x61;
            this.label_Idsg_ref.Text = "Idsg(A):";
            this.label_Factory_mAh_ref.AutoSize = true;
            this.label_Factory_mAh_ref.Location = new Point(0x7f, 0x7b);
            this.label_Factory_mAh_ref.Name = "label_Factory_mAh_ref";
            this.label_Factory_mAh_ref.Size = new Size(0x35, 12);
            this.label_Factory_mAh_ref.TabIndex = 0x5e;
            this.label_Factory_mAh_ref.Text = "Fac_mAh:";
            this.label_Factory_mAh.AutoSize = true;
            this.label_Factory_mAh.Location = new Point(0xba, 0x7b);
            this.label_Factory_mAh.Name = "label_Factory_mAh";
            this.label_Factory_mAh.Size = new Size(11, 12);
            this.label_Factory_mAh.TabIndex = 0x5b;
            this.label_Factory_mAh.Text = "0";
            this.label_Residue_mAh_ref.AutoSize = true;
            this.label_Residue_mAh_ref.Location = new Point(0x7f, 0x62);
            this.label_Residue_mAh_ref.Name = "label_Residue_mAh_ref";
            this.label_Residue_mAh_ref.Size = new Size(0x3b, 12);
            this.label_Residue_mAh_ref.TabIndex = 0x69;
            this.label_Residue_mAh_ref.Text = "Full_mAh:";
            this.label_Ichg_ref.AutoSize = true;
            this.label_Ichg_ref.Location = new Point(12, 0x19);
            this.label_Ichg_ref.Name = "label_Ichg_ref";
            this.label_Ichg_ref.Size = new Size(0x35, 12);
            this.label_Ichg_ref.TabIndex = 0x5e;
            this.label_Ichg_ref.Text = "Ichg(A):";
            this.label_Idsg.AutoSize = true;
            this.label_Idsg.Location = new Point(0x53, 50);
            this.label_Idsg.Name = "label_Idsg";
            this.label_Idsg.Size = new Size(11, 12);
            this.label_Idsg.TabIndex = 0x5f;
            this.label_Idsg.Text = "0";
            this.label_Ichg.AutoSize = true;
            this.label_Ichg.Location = new Point(0x53, 0x19);
            this.label_Ichg.Name = "label_Ichg";
            this.label_Ichg.Size = new Size(11, 12);
            this.label_Ichg.TabIndex = 0x60;
            this.label_Ichg.Text = "0";
            this.label242.AutoSize = true;
            this.label242.Location = new Point(0x7f, 0x19);
            this.label242.Name = "label242";
            this.label242.Size = new Size(0x2f, 12);
            this.label242.TabIndex = 0x66;
            this.label242.Text = "SOC(%):";
            this.label_Present_mAh.AutoSize = true;
            this.label_Present_mAh.Location = new Point(0xba, 0x49);
            this.label_Present_mAh.Name = "label_Present_mAh";
            this.label_Present_mAh.Size = new Size(11, 12);
            this.label_Present_mAh.TabIndex = 0x65;
            this.label_Present_mAh.Text = "0";
            this.label_SOC.AutoSize = true;
            this.label_SOC.Location = new Point(0xba, 0x19);
            this.label_SOC.Name = "label_SOC";
            this.label_SOC.Size = new Size(11, 12);
            this.label_SOC.TabIndex = 0x5b;
            this.label_SOC.Text = "0";
            this.label_Present_mAh_ref.AutoSize = true;
            this.label_Present_mAh_ref.Location = new Point(0x7f, 0x49);
            this.label_Present_mAh_ref.Name = "label_Present_mAh_ref";
            this.label_Present_mAh_ref.Size = new Size(0x35, 12);
            this.label_Present_mAh_ref.TabIndex = 0x60;
            this.label_Present_mAh_ref.Text = "Res_mAh:";
            this.label_SOH.AutoSize = true;
            this.label_SOH.Location = new Point(0xba, 50);
            this.label_SOH.Name = "label_SOH";
            this.label_SOH.Size = new Size(11, 12);
            this.label_SOH.TabIndex = 100;
            this.label_SOH.Text = "0";
            this.label250.AutoSize = true;
            this.label250.Location = new Point(0x7f, 50);
            this.label250.Name = "label250";
            this.label250.Size = new Size(0x2f, 12);
            this.label250.TabIndex = 0x61;
            this.label250.Text = "SOH(%):";
            this.groupBox7.Controls.Add(this.label_Res_Third);
            this.groupBox7.Controls.Add(this.label_Vdelta_Op_Third);
            this.groupBox7.Controls.Add(this.label_Soc_Up_Third);
            this.groupBox7.Controls.Add(this.label283);
            this.groupBox7.Controls.Add(this.label284);
            this.groupBox7.Controls.Add(this.label_Tmos_OTP_Third);
            this.groupBox7.Controls.Add(this.label286);
            this.groupBox7.Controls.Add(this.label287);
            this.groupBox7.Controls.Add(this.label_Celldsg_UT_Third);
            this.groupBox7.Controls.Add(this.label_Celldsg_OT_Third);
            this.groupBox7.Controls.Add(this.label290);
            this.groupBox7.Controls.Add(this.label291);
            this.groupBox7.Controls.Add(this.label292);
            this.groupBox7.Controls.Add(this.label293);
            this.groupBox7.Controls.Add(this.label294);
            this.groupBox7.Controls.Add(this.label_DSG_OC_Third);
            this.groupBox7.Controls.Add(this.label296);
            this.groupBox7.Controls.Add(this.label_CHG_OC_Third);
            this.groupBox7.Controls.Add(this.label_Cellchg_UT_Third);
            this.groupBox7.Controls.Add(this.label_Cellchg_OT_Third);
            this.groupBox7.Controls.Add(this.label300);
            this.groupBox7.Controls.Add(this.label301);
            this.groupBox7.Controls.Add(this.label302);
            this.groupBox7.Controls.Add(this.label303);
            this.groupBox7.Controls.Add(this.label_Vbat_UV_Third);
            this.groupBox7.Controls.Add(this.label_Vcell_UV_Third);
            this.groupBox7.Controls.Add(this.label_Vbat_OV_Third);
            this.groupBox7.Controls.Add(this.label_Vcell_OV_Third);
            this.groupBox7.Location = new Point(0x247, 480);
            this.groupBox7.Name = "groupBox7";
            this.groupBox7.Size = new Size(0xb8, 0xc3);
            this.groupBox7.TabIndex = 0x77;
            this.groupBox7.TabStop = false;
            this.groupBox7.Text = "SafetyStatus_Third";
            this.label_Res_Third.AutoSize = true;
            this.label_Res_Third.Location = new Point(0xa5, 150);
            this.label_Res_Third.Name = "label_Res_Third";
            this.label_Res_Third.Size = new Size(11, 12);
            this.label_Res_Third.TabIndex = 0x76;
            this.label_Res_Third.Text = "0";
            this.label_Vdelta_Op_Third.AutoSize = true;
            this.label_Vdelta_Op_Third.Location = new Point(0x49, 150);
            this.label_Vdelta_Op_Third.Name = "label_Vdelta_Op_Third";
            this.label_Vdelta_Op_Third.Size = new Size(11, 12);
            this.label_Vdelta_Op_Third.TabIndex = 0x75;
            this.label_Vdelta_Op_Third.Text = "0";
            this.label_Soc_Up_Third.AutoSize = true;
            this.label_Soc_Up_Third.Location = new Point(0xa5, 0xaf);
            this.label_Soc_Up_Third.Name = "label_Soc_Up_Third";
            this.label_Soc_Up_Third.Size = new Size(11, 12);
            this.label_Soc_Up_Third.TabIndex = 0x6d;
            this.label_Soc_Up_Third.Text = "0";
            this.label283.AutoSize = true;
            this.label283.Location = new Point(0x5e, 0xaf);
            this.label283.Name = "label283";
            this.label283.Size = new Size(0x41, 12);
            this.label283.TabIndex = 0x74;
            this.label283.Text = "SOC_low_P:";
            this.label284.AutoSize = true;
            this.label284.Location = new Point(0x5e, 150);
            this.label284.Name = "label284";
            this.label284.Size = new Size(0x1d, 12);
            this.label284.TabIndex = 0x6c;
            this.label284.Text = "Res:";
            this.label_Tmos_OTP_Third.AutoSize = true;
            this.label_Tmos_OTP_Third.Location = new Point(0x49, 0xaf);
            this.label_Tmos_OTP_Third.Name = "label_Tmos_OTP_Third";
            this.label_Tmos_OTP_Third.Size = new Size(11, 12);
            this.label_Tmos_OTP_Third.TabIndex = 0x6b;
            this.label_Tmos_OTP_Third.Text = "0";
            this.label286.AutoSize = true;
            this.label286.Location = new Point(2, 0xaf);
            this.label286.Name = "label286";
            this.label286.Size = new Size(0x3b, 12);
            this.label286.TabIndex = 0x72;
            this.label286.Text = "Tmos_OTP:";
            this.label287.AutoSize = true;
            this.label287.Location = new Point(2, 150);
            this.label287.Name = "label287";
            this.label287.Size = new Size(0x41, 12);
            this.label287.TabIndex = 0x69;
            this.label287.Text = "Vdelta_Op:";
            this.label_Celldsg_UT_Third.AutoSize = true;
            this.label_Celldsg_UT_Third.Location = new Point(0xa5, 0x7d);
            this.label_Celldsg_UT_Third.Name = "label_Celldsg_UT_Third";
            this.label_Celldsg_UT_Third.Size = new Size(11, 12);
            this.label_Celldsg_UT_Third.TabIndex = 0x6a;
            this.label_Celldsg_UT_Third.Text = "0";
            this.label_Celldsg_OT_Third.AutoSize = true;
            this.label_Celldsg_OT_Third.Location = new Point(0x49, 0x7d);
            this.label_Celldsg_OT_Third.Name = "label_Celldsg_OT_Third";
            this.label_Celldsg_OT_Third.Size = new Size(11, 12);
            this.label_Celldsg_OT_Third.TabIndex = 0x69;
            this.label_Celldsg_OT_Third.Text = "0";
            this.label290.AutoSize = true;
            this.label290.Location = new Point(0x5e, 50);
            this.label290.Name = "label290";
            this.label290.Size = new Size(0x35, 12);
            this.label290.TabIndex = 0x66;
            this.label290.Text = "Vbat_UV:";
            this.label291.AutoSize = true;
            this.label291.Location = new Point(2, 50);
            this.label291.Name = "label291";
            this.label291.Size = new Size(0x35, 12);
            this.label291.TabIndex = 0x66;
            this.label291.Text = "Vbat_OV:";
            this.label292.AutoSize = true;
            this.label292.Location = new Point(0x5e, 0x7d);
            this.label292.Name = "label292";
            this.label292.Size = new Size(0x47, 12);
            this.label292.TabIndex = 0x68;
            this.label292.Text = "Celldsg_UT:";
            this.label293.AutoSize = true;
            this.label293.Location = new Point(0x5e, 0x19);
            this.label293.Name = "label293";
            this.label293.Size = new Size(0x3b, 12);
            this.label293.TabIndex = 0x65;
            this.label293.Text = "Vcell_UV:";
            this.label294.AutoSize = true;
            this.label294.Location = new Point(2, 0x7d);
            this.label294.Name = "label294";
            this.label294.Size = new Size(0x47, 12);
            this.label294.TabIndex = 0x67;
            this.label294.Text = "Celldsg_OT:";
            this.label_DSG_OC_Third.AutoSize = true;
            this.label_DSG_OC_Third.Location = new Point(0xa5, 0x4b);
            this.label_DSG_OC_Third.Name = "label_DSG_OC_Third";
            this.label_DSG_OC_Third.Size = new Size(11, 12);
            this.label_DSG_OC_Third.TabIndex = 0x60;
            this.label_DSG_OC_Third.Text = "0";
            this.label296.AutoSize = true;
            this.label296.Location = new Point(2, 0x19);
            this.label296.Name = "label296";
            this.label296.Size = new Size(0x3b, 12);
            this.label296.TabIndex = 0x65;
            this.label296.Text = "Vcell_OV:";
            this.label_CHG_OC_Third.AutoSize = true;
            this.label_CHG_OC_Third.Location = new Point(0x49, 0x4b);
            this.label_CHG_OC_Third.Name = "label_CHG_OC_Third";
            this.label_CHG_OC_Third.Size = new Size(11, 12);
            this.label_CHG_OC_Third.TabIndex = 100;
            this.label_CHG_OC_Third.Text = "0";
            this.label_Cellchg_UT_Third.AutoSize = true;
            this.label_Cellchg_UT_Third.Location = new Point(0xa5, 100);
            this.label_Cellchg_UT_Third.Name = "label_Cellchg_UT_Third";
            this.label_Cellchg_UT_Third.Size = new Size(11, 12);
            this.label_Cellchg_UT_Third.TabIndex = 0x61;
            this.label_Cellchg_UT_Third.Text = "0";
            this.label_Cellchg_OT_Third.AutoSize = true;
            this.label_Cellchg_OT_Third.Location = new Point(0x49, 100);
            this.label_Cellchg_OT_Third.Name = "label_Cellchg_OT_Third";
            this.label_Cellchg_OT_Third.Size = new Size(11, 12);
            this.label_Cellchg_OT_Third.TabIndex = 0x65;
            this.label_Cellchg_OT_Third.Text = "0";
            this.label300.AutoSize = true;
            this.label300.Location = new Point(2, 0x4b);
            this.label300.Name = "label300";
            this.label300.Size = new Size(0x2f, 12);
            this.label300.TabIndex = 0x61;
            this.label300.Text = "CHG_OC:";
            this.label301.AutoSize = true;
            this.label301.Location = new Point(2, 100);
            this.label301.Name = "label301";
            this.label301.Size = new Size(0x47, 12);
            this.label301.TabIndex = 0x60;
            this.label301.Text = "Cellchg_OT:";
            this.label302.AutoSize = true;
            this.label302.Location = new Point(0x5e, 0x4b);
            this.label302.Name = "label302";
            this.label302.Size = new Size(0x2f, 12);
            this.label302.TabIndex = 0x63;
            this.label302.Text = "DSG_OC:";
            this.label303.AutoSize = true;
            this.label303.Location = new Point(0x5e, 100);
            this.label303.Name = "label303";
            this.label303.Size = new Size(0x47, 12);
            this.label303.TabIndex = 0x62;
            this.label303.Text = "Cellchg_UT:";
            this.label_Vbat_UV_Third.AutoSize = true;
            this.label_Vbat_UV_Third.Location = new Point(0xa5, 50);
            this.label_Vbat_UV_Third.Name = "label_Vbat_UV_Third";
            this.label_Vbat_UV_Third.Size = new Size(11, 12);
            this.label_Vbat_UV_Third.TabIndex = 0x5b;
            this.label_Vbat_UV_Third.Text = "0";
            this.label_Vcell_UV_Third.AutoSize = true;
            this.label_Vcell_UV_Third.Location = new Point(0xa5, 0x19);
            this.label_Vcell_UV_Third.Name = "label_Vcell_UV_Third";
            this.label_Vcell_UV_Third.Size = new Size(11, 12);
            this.label_Vcell_UV_Third.TabIndex = 0x5b;
            this.label_Vcell_UV_Third.Text = "0";
            this.label_Vbat_OV_Third.AutoSize = true;
            this.label_Vbat_OV_Third.Location = new Point(0x49, 50);
            this.label_Vbat_OV_Third.Name = "label_Vbat_OV_Third";
            this.label_Vbat_OV_Third.Size = new Size(11, 12);
            this.label_Vbat_OV_Third.TabIndex = 0x5b;
            this.label_Vbat_OV_Third.Text = "0";
            this.label_Vcell_OV_Third.AutoSize = true;
            this.label_Vcell_OV_Third.Location = new Point(0x49, 0x19);
            this.label_Vcell_OV_Third.Name = "label_Vcell_OV_Third";
            this.label_Vcell_OV_Third.Size = new Size(11, 12);
            this.label_Vcell_OV_Third.TabIndex = 0x5b;
            this.label_Vcell_OV_Third.Text = "0";
            this.groupBox6.Controls.Add(this.label_Res_Second);
            this.groupBox6.Controls.Add(this.label_Vdelta_Op_Second);
            this.groupBox6.Controls.Add(this.label_Soc_Up_Second);
            this.groupBox6.Controls.Add(this.label255);
            this.groupBox6.Controls.Add(this.label256);
            this.groupBox6.Controls.Add(this.label_Tmos_OTP_Second);
            this.groupBox6.Controls.Add(this.label258);
            this.groupBox6.Controls.Add(this.label259);
            this.groupBox6.Controls.Add(this.label_Celldsg_UT_Second);
            this.groupBox6.Controls.Add(this.label_Celldsg_OT_Second);
            this.groupBox6.Controls.Add(this.label262);
            this.groupBox6.Controls.Add(this.label263);
            this.groupBox6.Controls.Add(this.label264);
            this.groupBox6.Controls.Add(this.label265);
            this.groupBox6.Controls.Add(this.label266);
            this.groupBox6.Controls.Add(this.label_DSG_OC_Second);
            this.groupBox6.Controls.Add(this.label268);
            this.groupBox6.Controls.Add(this.label_CHG_OC_Second);
            this.groupBox6.Controls.Add(this.label_Cellchg_UT_Second);
            this.groupBox6.Controls.Add(this.label_Cellchg_OT_Second);
            this.groupBox6.Controls.Add(this.label272);
            this.groupBox6.Controls.Add(this.label273);
            this.groupBox6.Controls.Add(this.label274);
            this.groupBox6.Controls.Add(this.label275);
            this.groupBox6.Controls.Add(this.label_Vbat_UV_Second);
            this.groupBox6.Controls.Add(this.label_Vcell_UV_Second);
            this.groupBox6.Controls.Add(this.label_Vbat_OV_Second);
            this.groupBox6.Controls.Add(this.label_Vcell_OV_Second);
            this.groupBox6.Location = new Point(0x18a, 480);
            this.groupBox6.Name = "groupBox6";
            this.groupBox6.Size = new Size(0xb7, 0xc3);
            this.groupBox6.TabIndex = 0x68;
            this.groupBox6.TabStop = false;
            this.groupBox6.Text = "SafetyStatus_Second";
            this.label_Res_Second.AutoSize = true;
            this.label_Res_Second.Location = new Point(0xa7, 150);
            this.label_Res_Second.Name = "label_Res_Second";
            this.label_Res_Second.Size = new Size(11, 12);
            this.label_Res_Second.TabIndex = 0x76;
            this.label_Res_Second.Text = "0";
            this.label_Vdelta_Op_Second.AutoSize = true;
            this.label_Vdelta_Op_Second.Location = new Point(0x4c, 150);
            this.label_Vdelta_Op_Second.Name = "label_Vdelta_Op_Second";
            this.label_Vdelta_Op_Second.Size = new Size(11, 12);
            this.label_Vdelta_Op_Second.TabIndex = 0x75;
            this.label_Vdelta_Op_Second.Text = "0";
            this.label_Soc_Up_Second.AutoSize = true;
            this.label_Soc_Up_Second.Location = new Point(0xa7, 0xaf);
            this.label_Soc_Up_Second.Name = "label_Soc_Up_Second";
            this.label_Soc_Up_Second.Size = new Size(11, 12);
            this.label_Soc_Up_Second.TabIndex = 0x6d;
            this.label_Soc_Up_Second.Text = "0";
            this.label255.AutoSize = true;
            this.label255.Location = new Point(0x60, 0xaf);
            this.label255.Name = "label255";
            this.label255.Size = new Size(0x41, 12);
            this.label255.TabIndex = 0x74;
            this.label255.Text = "SOC_low_P:";
            this.label256.AutoSize = true;
            this.label256.Location = new Point(0x60, 150);
            this.label256.Name = "label256";
            this.label256.Size = new Size(0x1d, 12);
            this.label256.TabIndex = 0x6c;
            this.label256.Text = "Res:";
            this.label_Tmos_OTP_Second.AutoSize = true;
            this.label_Tmos_OTP_Second.Location = new Point(0x4c, 0xaf);
            this.label_Tmos_OTP_Second.Name = "label_Tmos_OTP_Second";
            this.label_Tmos_OTP_Second.Size = new Size(11, 12);
            this.label_Tmos_OTP_Second.TabIndex = 0x6b;
            this.label_Tmos_OTP_Second.Text = "0";
            this.label258.AutoSize = true;
            this.label258.Location = new Point(6, 0xaf);
            this.label258.Name = "label258";
            this.label258.Size = new Size(0x3b, 12);
            this.label258.TabIndex = 0x72;
            this.label258.Text = "Tmos_OTP:";
            this.label259.AutoSize = true;
            this.label259.Location = new Point(6, 150);
            this.label259.Name = "label259";
            this.label259.Size = new Size(0x41, 12);
            this.label259.TabIndex = 0x69;
            this.label259.Text = "Vdelta_Op:";
            this.label_Celldsg_UT_Second.AutoSize = true;
            this.label_Celldsg_UT_Second.Location = new Point(0xa7, 0x7d);
            this.label_Celldsg_UT_Second.Name = "label_Celldsg_UT_Second";
            this.label_Celldsg_UT_Second.Size = new Size(11, 12);
            this.label_Celldsg_UT_Second.TabIndex = 0x6a;
            this.label_Celldsg_UT_Second.Text = "0";
            this.label_Celldsg_OT_Second.AutoSize = true;
            this.label_Celldsg_OT_Second.Location = new Point(0x4c, 0x7d);
            this.label_Celldsg_OT_Second.Name = "label_Celldsg_OT_Second";
            this.label_Celldsg_OT_Second.Size = new Size(11, 12);
            this.label_Celldsg_OT_Second.TabIndex = 0x69;
            this.label_Celldsg_OT_Second.Text = "0";
            this.label262.AutoSize = true;
            this.label262.Location = new Point(0x60, 50);
            this.label262.Name = "label262";
            this.label262.Size = new Size(0x35, 12);
            this.label262.TabIndex = 0x66;
            this.label262.Text = "Vbat_UV:";
            this.label263.AutoSize = true;
            this.label263.Location = new Point(6, 50);
            this.label263.Name = "label263";
            this.label263.Size = new Size(0x35, 12);
            this.label263.TabIndex = 0x66;
            this.label263.Text = "Vbat_OV:";
            this.label264.AutoSize = true;
            this.label264.Location = new Point(0x60, 0x7d);
            this.label264.Name = "label264";
            this.label264.Size = new Size(0x47, 12);
            this.label264.TabIndex = 0x68;
            this.label264.Text = "Celldsg_UT:";
            this.label265.AutoSize = true;
            this.label265.Location = new Point(0x60, 0x19);
            this.label265.Name = "label265";
            this.label265.Size = new Size(0x3b, 12);
            this.label265.TabIndex = 0x65;
            this.label265.Text = "Vcell_UV:";
            this.label266.AutoSize = true;
            this.label266.Location = new Point(6, 0x7d);
            this.label266.Name = "label266";
            this.label266.Size = new Size(0x47, 12);
            this.label266.TabIndex = 0x67;
            this.label266.Text = "Celldsg_OT:";
            this.label_DSG_OC_Second.AutoSize = true;
            this.label_DSG_OC_Second.Location = new Point(0xa7, 0x4b);
            this.label_DSG_OC_Second.Name = "label_DSG_OC_Second";
            this.label_DSG_OC_Second.Size = new Size(11, 12);
            this.label_DSG_OC_Second.TabIndex = 0x60;
            this.label_DSG_OC_Second.Text = "0";
            this.label268.AutoSize = true;
            this.label268.Location = new Point(6, 0x19);
            this.label268.Name = "label268";
            this.label268.Size = new Size(0x3b, 12);
            this.label268.TabIndex = 0x65;
            this.label268.Text = "Vcell_OV:";
            this.label_CHG_OC_Second.AutoSize = true;
            this.label_CHG_OC_Second.Location = new Point(0x4c, 0x4b);
            this.label_CHG_OC_Second.Name = "label_CHG_OC_Second";
            this.label_CHG_OC_Second.Size = new Size(11, 12);
            this.label_CHG_OC_Second.TabIndex = 100;
            this.label_CHG_OC_Second.Text = "0";
            this.label_Cellchg_UT_Second.AutoSize = true;
            this.label_Cellchg_UT_Second.Location = new Point(0xa7, 100);
            this.label_Cellchg_UT_Second.Name = "label_Cellchg_UT_Second";
            this.label_Cellchg_UT_Second.Size = new Size(11, 12);
            this.label_Cellchg_UT_Second.TabIndex = 0x61;
            this.label_Cellchg_UT_Second.Text = "0";
            this.label_Cellchg_OT_Second.AutoSize = true;
            this.label_Cellchg_OT_Second.Location = new Point(0x4c, 100);
            this.label_Cellchg_OT_Second.Name = "label_Cellchg_OT_Second";
            this.label_Cellchg_OT_Second.Size = new Size(11, 12);
            this.label_Cellchg_OT_Second.TabIndex = 0x65;
            this.label_Cellchg_OT_Second.Text = "0";
            this.label272.AutoSize = true;
            this.label272.Location = new Point(6, 0x4b);
            this.label272.Name = "label272";
            this.label272.Size = new Size(0x2f, 12);
            this.label272.TabIndex = 0x61;
            this.label272.Text = "CHG_OC:";
            this.label273.AutoSize = true;
            this.label273.Location = new Point(6, 100);
            this.label273.Name = "label273";
            this.label273.Size = new Size(0x47, 12);
            this.label273.TabIndex = 0x60;
            this.label273.Text = "Cellchg_OT:";
            this.label274.AutoSize = true;
            this.label274.Location = new Point(0x60, 0x4b);
            this.label274.Name = "label274";
            this.label274.Size = new Size(0x2f, 12);
            this.label274.TabIndex = 0x63;
            this.label274.Text = "DSG_OC:";
            this.label275.AutoSize = true;
            this.label275.Location = new Point(0x60, 100);
            this.label275.Name = "label275";
            this.label275.Size = new Size(0x47, 12);
            this.label275.TabIndex = 0x62;
            this.label275.Text = "Cellchg_UT:";
            this.label_Vbat_UV_Second.AutoSize = true;
            this.label_Vbat_UV_Second.Location = new Point(0xa7, 50);
            this.label_Vbat_UV_Second.Name = "label_Vbat_UV_Second";
            this.label_Vbat_UV_Second.Size = new Size(11, 12);
            this.label_Vbat_UV_Second.TabIndex = 0x5b;
            this.label_Vbat_UV_Second.Text = "0";
            this.label_Vcell_UV_Second.AutoSize = true;
            this.label_Vcell_UV_Second.Location = new Point(0xa7, 0x19);
            this.label_Vcell_UV_Second.Name = "label_Vcell_UV_Second";
            this.label_Vcell_UV_Second.Size = new Size(11, 12);
            this.label_Vcell_UV_Second.TabIndex = 0x5b;
            this.label_Vcell_UV_Second.Text = "0";
            this.label_Vbat_OV_Second.AutoSize = true;
            this.label_Vbat_OV_Second.Location = new Point(0x4c, 50);
            this.label_Vbat_OV_Second.Name = "label_Vbat_OV_Second";
            this.label_Vbat_OV_Second.Size = new Size(11, 12);
            this.label_Vbat_OV_Second.TabIndex = 0x5b;
            this.label_Vbat_OV_Second.Text = "0";
            this.label_Vcell_OV_Second.AutoSize = true;
            this.label_Vcell_OV_Second.Location = new Point(0x4c, 0x19);
            this.label_Vcell_OV_Second.Name = "label_Vcell_OV_Second";
            this.label_Vcell_OV_Second.Size = new Size(11, 12);
            this.label_Vcell_OV_Second.TabIndex = 0x5b;
            this.label_Vcell_OV_Second.Text = "0";
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Third1);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Third2);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Third3);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Third4);
            this.groupBox_Present.Controls.Add(this.label410);
            this.groupBox_Present.Controls.Add(this.button_ProtectPresentClear);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_First1);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_First2);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_First3);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_First4);
            this.groupBox_Present.Controls.Add(this.label_Fault_Reacent);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Second1);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Second2);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Second3);
            this.groupBox_Present.Controls.Add(this.textBox_Fault_Second4);
            this.groupBox_Present.Controls.Add(this.label_Warn_Reacent);
            this.groupBox_Present.Location = new Point(6, 0x125);
            this.groupBox_Present.Name = "groupBox_Present";
            this.groupBox_Present.Size = new Size(0x146, 0xa7);
            this.groupBox_Present.TabIndex = 0x85;
            this.groupBox_Present.TabStop = false;
            this.groupBox_Present.Text = "当前保护记录";
            this.textBox_Fault_Third1.Location = new Point(220, 0x20);
            this.textBox_Fault_Third1.Name = "textBox_Fault_Third1";
            this.textBox_Fault_Third1.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Third1.TabIndex = 0x79;
            this.textBox_Fault_Third2.Location = new Point(220, 0x3b);
            this.textBox_Fault_Third2.Name = "textBox_Fault_Third2";
            this.textBox_Fault_Third2.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Third2.TabIndex = 0x7a;
            this.textBox_Fault_Third3.Location = new Point(220, 0x55);
            this.textBox_Fault_Third3.Name = "textBox_Fault_Third3";
            this.textBox_Fault_Third3.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Third3.TabIndex = 0x7b;
            this.textBox_Fault_Third4.Location = new Point(0xdd, 0x70);
            this.textBox_Fault_Third4.Name = "textBox_Fault_Third4";
            this.textBox_Fault_Third4.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Third4.TabIndex = 0x7c;
            this.label410.AutoSize = true;
            this.label410.Location = new Point(220, 0x11);
            this.label410.Name = "label410";
            this.label410.Size = new Size(0x4d, 12);
            this.label410.TabIndex = 0x7d;
            this.label410.Text = "Fault_Third:";
            this.button_ProtectPresentClear.Location = new Point(0x8a, 0x8b);
            this.button_ProtectPresentClear.Name = "button_ProtectPresentClear";
            this.button_ProtectPresentClear.Size = new Size(0x3e, 0x17);
            this.button_ProtectPresentClear.TabIndex = 0x6d;
            this.button_ProtectPresentClear.Text = "Clear";
            this.button_ProtectPresentClear.UseVisualStyleBackColor = true;
            this.button_ProtectPresentClear.Click += new EventHandler(this.button_ProtectPresentClear_Click);
            this.textBox_Fault_First1.Location = new Point(10, 0x20);
            this.textBox_Fault_First1.Name = "textBox_Fault_First1";
            this.textBox_Fault_First1.Size = new Size(0x67, 0x15);
            this.textBox_Fault_First1.TabIndex = 0x6d;
            this.textBox_Fault_First2.Location = new Point(10, 0x3b);
            this.textBox_Fault_First2.Name = "textBox_Fault_First2";
            this.textBox_Fault_First2.Size = new Size(0x67, 0x15);
            this.textBox_Fault_First2.TabIndex = 110;
            this.textBox_Fault_First3.Location = new Point(10, 0x55);
            this.textBox_Fault_First3.Name = "textBox_Fault_First3";
            this.textBox_Fault_First3.Size = new Size(0x67, 0x15);
            this.textBox_Fault_First3.TabIndex = 0x6f;
            this.textBox_Fault_First4.Location = new Point(9, 0x70);
            this.textBox_Fault_First4.Name = "textBox_Fault_First4";
            this.textBox_Fault_First4.Size = new Size(0x67, 0x15);
            this.textBox_Fault_First4.TabIndex = 0x70;
            this.label_Fault_Reacent.AutoSize = true;
            this.label_Fault_Reacent.Location = new Point(12, 0x11);
            this.label_Fault_Reacent.Name = "label_Fault_Reacent";
            this.label_Fault_Reacent.Size = new Size(0x4d, 12);
            this.label_Fault_Reacent.TabIndex = 0x54;
            this.label_Fault_Reacent.Text = "Fault_First:";
            this.textBox_Fault_Second1.Location = new Point(0x77, 0x20);
            this.textBox_Fault_Second1.Name = "textBox_Fault_Second1";
            this.textBox_Fault_Second1.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Second1.TabIndex = 0x72;
            this.textBox_Fault_Second2.Location = new Point(0x77, 0x3b);
            this.textBox_Fault_Second2.Name = "textBox_Fault_Second2";
            this.textBox_Fault_Second2.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Second2.TabIndex = 0x73;
            this.textBox_Fault_Second3.Location = new Point(0x77, 0x55);
            this.textBox_Fault_Second3.Name = "textBox_Fault_Second3";
            this.textBox_Fault_Second3.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Second3.TabIndex = 0x74;
            this.textBox_Fault_Second4.Location = new Point(120, 0x70);
            this.textBox_Fault_Second4.Name = "textBox_Fault_Second4";
            this.textBox_Fault_Second4.Size = new Size(0x5f, 0x15);
            this.textBox_Fault_Second4.TabIndex = 0x77;
            this.label_Warn_Reacent.AutoSize = true;
            this.label_Warn_Reacent.Location = new Point(0x77, 0x11);
            this.label_Warn_Reacent.Name = "label_Warn_Reacent";
            this.label_Warn_Reacent.Size = new Size(0x53, 12);
            this.label_Warn_Reacent.TabIndex = 120;
            this.label_Warn_Reacent.Text = "Fault_Second:";
            this.groupBox5.Controls.Add(this.label_Res_First);
            this.groupBox5.Controls.Add(this.label_Vdelta_Op_First);
            this.groupBox5.Controls.Add(this.label_Soc_Up_First);
            this.groupBox5.Controls.Add(this.label168);
            this.groupBox5.Controls.Add(this.label169);
            this.groupBox5.Controls.Add(this.label_Tmos_OTP_First);
            this.groupBox5.Controls.Add(this.label173);
            this.groupBox5.Controls.Add(this.label221);
            this.groupBox5.Controls.Add(this.label_Celldsg_UT_First);
            this.groupBox5.Controls.Add(this.label_Celldsg_OT_First);
            this.groupBox5.Controls.Add(this.label230);
            this.groupBox5.Controls.Add(this.label231);
            this.groupBox5.Controls.Add(this.label233);
            this.groupBox5.Controls.Add(this.label234);
            this.groupBox5.Controls.Add(this.label235);
            this.groupBox5.Controls.Add(this.label_DSG_OC_First);
            this.groupBox5.Controls.Add(this.label237);
            this.groupBox5.Controls.Add(this.label_CHG_OC_First);
            this.groupBox5.Controls.Add(this.label_Cellchg_UT_First);
            this.groupBox5.Controls.Add(this.label_Cellchg_OT_First);
            this.groupBox5.Controls.Add(this.label243);
            this.groupBox5.Controls.Add(this.label244);
            this.groupBox5.Controls.Add(this.label245);
            this.groupBox5.Controls.Add(this.label246);
            this.groupBox5.Controls.Add(this.label_Vbat_UV_First);
            this.groupBox5.Controls.Add(this.label_Vcell_UV_First);
            this.groupBox5.Controls.Add(this.label_Vbat_OV_First);
            this.groupBox5.Controls.Add(this.label_Vcell_OV_First);
            this.groupBox5.Location = new Point(0xcb, 480);
            this.groupBox5.Name = "groupBox5";
            this.groupBox5.Size = new Size(0xb8, 0xc3);
            this.groupBox5.TabIndex = 0x67;
            this.groupBox5.TabStop = false;
            this.groupBox5.Text = "SafetyStatus_First";
            this.label_Res_First.AutoSize = true;
            this.label_Res_First.Location = new Point(0xa7, 150);
            this.label_Res_First.Name = "label_Res_First";
            this.label_Res_First.Size = new Size(11, 12);
            this.label_Res_First.TabIndex = 0x76;
            this.label_Res_First.Text = "0";
            this.label_Vdelta_Op_First.AutoSize = true;
            this.label_Vdelta_Op_First.Location = new Point(0x4c, 150);
            this.label_Vdelta_Op_First.Name = "label_Vdelta_Op_First";
            this.label_Vdelta_Op_First.Size = new Size(11, 12);
            this.label_Vdelta_Op_First.TabIndex = 0x75;
            this.label_Vdelta_Op_First.Text = "0";
            this.label_Soc_Up_First.AutoSize = true;
            this.label_Soc_Up_First.Location = new Point(0xa7, 0xaf);
            this.label_Soc_Up_First.Name = "label_Soc_Up_First";
            this.label_Soc_Up_First.Size = new Size(11, 12);
            this.label_Soc_Up_First.TabIndex = 0x6d;
            this.label_Soc_Up_First.Text = "0";
            this.label168.AutoSize = true;
            this.label168.Location = new Point(0x60, 0xaf);
            this.label168.Name = "label168";
            this.label168.Size = new Size(0x41, 12);
            this.label168.TabIndex = 0x74;
            this.label168.Text = "SOC_low_P:";
            this.label169.AutoSize = true;
            this.label169.Location = new Point(0x60, 150);
            this.label169.Name = "label169";
            this.label169.Size = new Size(0x1d, 12);
            this.label169.TabIndex = 0x6c;
            this.label169.Text = "Res:";
            this.label_Tmos_OTP_First.AutoSize = true;
            this.label_Tmos_OTP_First.Location = new Point(0x4c, 0xaf);
            this.label_Tmos_OTP_First.Name = "label_Tmos_OTP_First";
            this.label_Tmos_OTP_First.Size = new Size(11, 12);
            this.label_Tmos_OTP_First.TabIndex = 0x6b;
            this.label_Tmos_OTP_First.Text = "0";
            this.label173.AutoSize = true;
            this.label173.Location = new Point(6, 0xaf);
            this.label173.Name = "label173";
            this.label173.Size = new Size(0x3b, 12);
            this.label173.TabIndex = 0x72;
            this.label173.Text = "Tmos_OTP:";
            this.label221.AutoSize = true;
            this.label221.Location = new Point(6, 150);
            this.label221.Name = "label221";
            this.label221.Size = new Size(0x41, 12);
            this.label221.TabIndex = 0x69;
            this.label221.Text = "Vdelta_Op:";
            this.label_Celldsg_UT_First.AutoSize = true;
            this.label_Celldsg_UT_First.Location = new Point(0xa7, 0x7d);
            this.label_Celldsg_UT_First.Name = "label_Celldsg_UT_First";
            this.label_Celldsg_UT_First.Size = new Size(11, 12);
            this.label_Celldsg_UT_First.TabIndex = 0x6a;
            this.label_Celldsg_UT_First.Text = "0";
            this.label_Celldsg_OT_First.AutoSize = true;
            this.label_Celldsg_OT_First.Location = new Point(0x4c, 0x7d);
            this.label_Celldsg_OT_First.Name = "label_Celldsg_OT_First";
            this.label_Celldsg_OT_First.Size = new Size(11, 12);
            this.label_Celldsg_OT_First.TabIndex = 0x69;
            this.label_Celldsg_OT_First.Text = "0";
            this.label230.AutoSize = true;
            this.label230.Location = new Point(0x60, 50);
            this.label230.Name = "label230";
            this.label230.Size = new Size(0x35, 12);
            this.label230.TabIndex = 0x66;
            this.label230.Text = "Vbat_UV:";
            this.label231.AutoSize = true;
            this.label231.Location = new Point(6, 50);
            this.label231.Name = "label231";
            this.label231.Size = new Size(0x35, 12);
            this.label231.TabIndex = 0x66;
            this.label231.Text = "Vbat_OV:";
            this.label233.AutoSize = true;
            this.label233.Location = new Point(0x60, 0x7d);
            this.label233.Name = "label233";
            this.label233.Size = new Size(0x47, 12);
            this.label233.TabIndex = 0x68;
            this.label233.Text = "Celldsg_UT:";
            this.label234.AutoSize = true;
            this.label234.Location = new Point(0x60, 0x19);
            this.label234.Name = "label234";
            this.label234.Size = new Size(0x3b, 12);
            this.label234.TabIndex = 0x65;
            this.label234.Text = "Vcell_UV:";
            this.label235.AutoSize = true;
            this.label235.Location = new Point(6, 0x7d);
            this.label235.Name = "label235";
            this.label235.Size = new Size(0x47, 12);
            this.label235.TabIndex = 0x67;
            this.label235.Text = "Celldsg_OT:";
            this.label_DSG_OC_First.AutoSize = true;
            this.label_DSG_OC_First.Location = new Point(0xa7, 0x4b);
            this.label_DSG_OC_First.Name = "label_DSG_OC_First";
            this.label_DSG_OC_First.Size = new Size(11, 12);
            this.label_DSG_OC_First.TabIndex = 0x60;
            this.label_DSG_OC_First.Text = "0";
            this.label237.AutoSize = true;
            this.label237.Location = new Point(6, 0x19);
            this.label237.Name = "label237";
            this.label237.Size = new Size(0x3b, 12);
            this.label237.TabIndex = 0x65;
            this.label237.Text = "Vcell_OV:";
            this.label_CHG_OC_First.AutoSize = true;
            this.label_CHG_OC_First.Location = new Point(0x4c, 0x4b);
            this.label_CHG_OC_First.Name = "label_CHG_OC_First";
            this.label_CHG_OC_First.Size = new Size(11, 12);
            this.label_CHG_OC_First.TabIndex = 100;
            this.label_CHG_OC_First.Text = "0";
            this.label_Cellchg_UT_First.AutoSize = true;
            this.label_Cellchg_UT_First.Location = new Point(0xa7, 100);
            this.label_Cellchg_UT_First.Name = "label_Cellchg_UT_First";
            this.label_Cellchg_UT_First.Size = new Size(11, 12);
            this.label_Cellchg_UT_First.TabIndex = 0x61;
            this.label_Cellchg_UT_First.Text = "0";
            this.label_Cellchg_OT_First.AutoSize = true;
            this.label_Cellchg_OT_First.Location = new Point(0x4c, 100);
            this.label_Cellchg_OT_First.Name = "label_Cellchg_OT_First";
            this.label_Cellchg_OT_First.Size = new Size(11, 12);
            this.label_Cellchg_OT_First.TabIndex = 0x65;
            this.label_Cellchg_OT_First.Text = "0";
            this.label243.AutoSize = true;
            this.label243.Location = new Point(6, 0x4b);
            this.label243.Name = "label243";
            this.label243.Size = new Size(0x2f, 12);
            this.label243.TabIndex = 0x61;
            this.label243.Text = "CHG_OC:";
            this.label244.AutoSize = true;
            this.label244.Location = new Point(6, 100);
            this.label244.Name = "label244";
            this.label244.Size = new Size(0x47, 12);
            this.label244.TabIndex = 0x60;
            this.label244.Text = "Cellchg_OT:";
            this.label245.AutoSize = true;
            this.label245.Location = new Point(0x60, 0x4b);
            this.label245.Name = "label245";
            this.label245.Size = new Size(0x2f, 12);
            this.label245.TabIndex = 0x63;
            this.label245.Text = "DSG_OC:";
            this.label246.AutoSize = true;
            this.label246.Location = new Point(0x60, 100);
            this.label246.Name = "label246";
            this.label246.Size = new Size(0x47, 12);
            this.label246.TabIndex = 0x62;
            this.label246.Text = "Cellchg_UT:";
            this.label_Vbat_UV_First.AutoSize = true;
            this.label_Vbat_UV_First.Location = new Point(0xa7, 50);
            this.label_Vbat_UV_First.Name = "label_Vbat_UV_First";
            this.label_Vbat_UV_First.Size = new Size(11, 12);
            this.label_Vbat_UV_First.TabIndex = 0x5b;
            this.label_Vbat_UV_First.Text = "0";
            this.label_Vcell_UV_First.AutoSize = true;
            this.label_Vcell_UV_First.Location = new Point(0xa7, 0x19);
            this.label_Vcell_UV_First.Name = "label_Vcell_UV_First";
            this.label_Vcell_UV_First.Size = new Size(11, 12);
            this.label_Vcell_UV_First.TabIndex = 0x5b;
            this.label_Vcell_UV_First.Text = "0";
            this.label_Vbat_OV_First.AutoSize = true;
            this.label_Vbat_OV_First.Location = new Point(0x4c, 50);
            this.label_Vbat_OV_First.Name = "label_Vbat_OV_First";
            this.label_Vbat_OV_First.Size = new Size(11, 12);
            this.label_Vbat_OV_First.TabIndex = 0x5b;
            this.label_Vbat_OV_First.Text = "0";
            this.label_Vcell_OV_First.AutoSize = true;
            this.label_Vcell_OV_First.Location = new Point(0x4c, 0x19);
            this.label_Vcell_OV_First.Name = "label_Vcell_OV_First";
            this.label_Vcell_OV_First.Size = new Size(11, 12);
            this.label_Vcell_OV_First.TabIndex = 0x5b;
            this.label_Vcell_OV_First.Text = "0";
            this.groupBox4.Controls.Add(this.label113);
            this.groupBox4.Controls.Add(this.Balanced_VC32);
            this.groupBox4.Controls.Add(this.label119);
            this.groupBox4.Controls.Add(this.Balanced_VC31);
            this.groupBox4.Controls.Add(this.label118);
            this.groupBox4.Controls.Add(this.Balanced_VC30);
            this.groupBox4.Controls.Add(this.Balanced_VC17);
            this.groupBox4.Controls.Add(this.Balanced_VC18);
            this.groupBox4.Controls.Add(this.label124);
            this.groupBox4.Controls.Add(this.Balanced_VC19);
            this.groupBox4.Controls.Add(this.label133);
            this.groupBox4.Controls.Add(this.Balanced_VC20);
            this.groupBox4.Controls.Add(this.label135);
            this.groupBox4.Controls.Add(this.label136);
            this.groupBox4.Controls.Add(this.label137);
            this.groupBox4.Controls.Add(this.label138);
            this.groupBox4.Controls.Add(this.label139);
            this.groupBox4.Controls.Add(this.label140);
            this.groupBox4.Controls.Add(this.label141);
            this.groupBox4.Controls.Add(this.label142);
            this.groupBox4.Controls.Add(this.label143);
            this.groupBox4.Controls.Add(this.label144);
            this.groupBox4.Controls.Add(this.label145);
            this.groupBox4.Controls.Add(this.Balanced_VC21);
            this.groupBox4.Controls.Add(this.Balanced_VC22);
            this.groupBox4.Controls.Add(this.Balanced_VC23);
            this.groupBox4.Controls.Add(this.Balanced_VC24);
            this.groupBox4.Controls.Add(this.Balanced_VC25);
            this.groupBox4.Controls.Add(this.Balanced_VC26);
            this.groupBox4.Controls.Add(this.Balanced_VC27);
            this.groupBox4.Controls.Add(this.Balanced_VC28);
            this.groupBox4.Controls.Add(this.Balanced_VC29);
            this.groupBox4.Location = new Point(0x2c3, 15);
            this.groupBox4.Name = "groupBox4";
            this.groupBox4.Size = new Size(0x65, 0x1c7);
            this.groupBox4.TabIndex = 0x56;
            this.groupBox4.TabStop = false;
            this.groupBox4.Text = "Bn_AFE2(Y/N)";
            this.label113.AutoSize = true;
            this.label113.Location = new Point(0x19, 420);
            this.label113.Name = "label113";
            this.label113.Size = new Size(0x23, 12);
            this.label113.TabIndex = 0x59;
            this.label113.Text = "VC32:";
            this.Balanced_VC32.AutoSize = true;
            this.Balanced_VC32.Location = new Point(0x48, 420);
            this.Balanced_VC32.Name = "Balanced_VC32";
            this.Balanced_VC32.Size = new Size(11, 12);
            this.Balanced_VC32.TabIndex = 0x58;
            this.Balanced_VC32.Text = "0";
            this.label119.AutoSize = true;
            this.label119.Location = new Point(0x19, 0x18b);
            this.label119.Name = "label119";
            this.label119.Size = new Size(0x23, 12);
            this.label119.TabIndex = 0x57;
            this.label119.Text = "VC31:";
            this.Balanced_VC31.AutoSize = true;
            this.Balanced_VC31.Location = new Point(0x48, 0x18b);
            this.Balanced_VC31.Name = "Balanced_VC31";
            this.Balanced_VC31.Size = new Size(11, 12);
            this.Balanced_VC31.TabIndex = 0x56;
            this.Balanced_VC31.Text = "0";
            this.label118.AutoSize = true;
            this.label118.Location = new Point(0x19, 370);
            this.label118.Name = "label118";
            this.label118.Size = new Size(0x23, 12);
            this.label118.TabIndex = 0x55;
            this.label118.Text = "VC30:";
            this.Balanced_VC30.AutoSize = true;
            this.Balanced_VC30.Location = new Point(0x48, 370);
            this.Balanced_VC30.Name = "Balanced_VC30";
            this.Balanced_VC30.Size = new Size(11, 12);
            this.Balanced_VC30.TabIndex = 0x54;
            this.Balanced_VC30.Text = "0";
            this.Balanced_VC17.AutoSize = true;
            this.Balanced_VC17.Location = new Point(0x48, 0x17);
            this.Balanced_VC17.Name = "Balanced_VC17";
            this.Balanced_VC17.Size = new Size(11, 12);
            this.Balanced_VC17.TabIndex = 0x2d;
            this.Balanced_VC17.Text = "0";
            this.Balanced_VC18.AutoSize = true;
            this.Balanced_VC18.Location = new Point(0x48, 0x34);
            this.Balanced_VC18.Name = "Balanced_VC18";
            this.Balanced_VC18.Size = new Size(11, 12);
            this.Balanced_VC18.TabIndex = 0x2e;
            this.Balanced_VC18.Text = "0";
            this.label124.AutoSize = true;
            this.label124.Location = new Point(0x19, 0x157);
            this.label124.Name = "label124";
            this.label124.Size = new Size(0x23, 12);
            this.label124.TabIndex = 0x53;
            this.label124.Text = "VC29:";
            this.Balanced_VC19.AutoSize = true;
            this.Balanced_VC19.Location = new Point(0x48, 0x4e);
            this.Balanced_VC19.Name = "Balanced_VC19";
            this.Balanced_VC19.Size = new Size(11, 12);
            this.Balanced_VC19.TabIndex = 0x2f;
            this.Balanced_VC19.Text = "0";
            this.label133.AutoSize = true;
            this.label133.Location = new Point(0x19, 0x13f);
            this.label133.Name = "label133";
            this.label133.Size = new Size(0x23, 12);
            this.label133.TabIndex = 0x52;
            this.label133.Text = "VC28:";
            this.Balanced_VC20.AutoSize = true;
            this.Balanced_VC20.Location = new Point(0x48, 0x69);
            this.Balanced_VC20.Name = "Balanced_VC20";
            this.Balanced_VC20.Size = new Size(11, 12);
            this.Balanced_VC20.TabIndex = 0x30;
            this.Balanced_VC20.Text = "0";
            this.label135.AutoSize = true;
            this.label135.Location = new Point(0x19, 0x125);
            this.label135.Name = "label135";
            this.label135.Size = new Size(0x23, 12);
            this.label135.TabIndex = 0x51;
            this.label135.Text = "VC27:";
            this.label136.AutoSize = true;
            this.label136.Location = new Point(0x19, 0x17);
            this.label136.Name = "label136";
            this.label136.Size = new Size(0x23, 12);
            this.label136.TabIndex = 0x47;
            this.label136.Text = "VC17:";
            this.label137.AutoSize = true;
            this.label137.Location = new Point(0x19, 0x109);
            this.label137.Name = "label137";
            this.label137.Size = new Size(0x23, 12);
            this.label137.TabIndex = 80;
            this.label137.Text = "VC26:";
            this.label138.AutoSize = true;
            this.label138.Location = new Point(0x19, 0x34);
            this.label138.Name = "label138";
            this.label138.Size = new Size(0x23, 12);
            this.label138.TabIndex = 0x48;
            this.label138.Text = "VC18:";
            this.label139.AutoSize = true;
            this.label139.Location = new Point(0x19, 0xee);
            this.label139.Name = "label139";
            this.label139.Size = new Size(0x23, 12);
            this.label139.TabIndex = 0x4f;
            this.label139.Text = "VC25:";
            this.label140.AutoSize = true;
            this.label140.Location = new Point(0x19, 0x4e);
            this.label140.Name = "label140";
            this.label140.Size = new Size(0x23, 12);
            this.label140.TabIndex = 0x49;
            this.label140.Text = "VC19:";
            this.label141.AutoSize = true;
            this.label141.Location = new Point(0x19, 0xd3);
            this.label141.Name = "label141";
            this.label141.Size = new Size(0x23, 12);
            this.label141.TabIndex = 0x4e;
            this.label141.Text = "VC24:";
            this.label142.AutoSize = true;
            this.label142.Location = new Point(0x19, 0x69);
            this.label142.Name = "label142";
            this.label142.Size = new Size(0x23, 12);
            this.label142.TabIndex = 0x4a;
            this.label142.Text = "VC20:";
            this.label143.AutoSize = true;
            this.label143.Location = new Point(0x19, 0xb9);
            this.label143.Name = "label143";
            this.label143.Size = new Size(0x23, 12);
            this.label143.TabIndex = 0x4d;
            this.label143.Text = "VC23:";
            this.label144.AutoSize = true;
            this.label144.Location = new Point(0x19, 0x83);
            this.label144.Name = "label144";
            this.label144.Size = new Size(0x23, 12);
            this.label144.TabIndex = 0x4b;
            this.label144.Text = "VC21:";
            this.label145.AutoSize = true;
            this.label145.Location = new Point(0x19, 0x9d);
            this.label145.Name = "label145";
            this.label145.Size = new Size(0x23, 12);
            this.label145.TabIndex = 0x4c;
            this.label145.Text = "VC22:";
            this.Balanced_VC21.AutoSize = true;
            this.Balanced_VC21.Location = new Point(0x48, 0x83);
            this.Balanced_VC21.Name = "Balanced_VC21";
            this.Balanced_VC21.Size = new Size(11, 12);
            this.Balanced_VC21.TabIndex = 0x31;
            this.Balanced_VC21.Text = "0";
            this.Balanced_VC22.AutoSize = true;
            this.Balanced_VC22.Location = new Point(0x48, 0x9d);
            this.Balanced_VC22.Name = "Balanced_VC22";
            this.Balanced_VC22.Size = new Size(11, 12);
            this.Balanced_VC22.TabIndex = 50;
            this.Balanced_VC22.Text = "0";
            this.Balanced_VC23.AutoSize = true;
            this.Balanced_VC23.Location = new Point(0x48, 0xb9);
            this.Balanced_VC23.Name = "Balanced_VC23";
            this.Balanced_VC23.Size = new Size(11, 12);
            this.Balanced_VC23.TabIndex = 0x33;
            this.Balanced_VC23.Text = "0";
            this.Balanced_VC24.AutoSize = true;
            this.Balanced_VC24.Location = new Point(0x48, 0xd3);
            this.Balanced_VC24.Name = "Balanced_VC24";
            this.Balanced_VC24.Size = new Size(11, 12);
            this.Balanced_VC24.TabIndex = 0x34;
            this.Balanced_VC24.Text = "0";
            this.Balanced_VC25.AutoSize = true;
            this.Balanced_VC25.Location = new Point(0x48, 0xee);
            this.Balanced_VC25.Name = "Balanced_VC25";
            this.Balanced_VC25.Size = new Size(11, 12);
            this.Balanced_VC25.TabIndex = 0x35;
            this.Balanced_VC25.Text = "0";
            this.Balanced_VC26.AutoSize = true;
            this.Balanced_VC26.Location = new Point(0x48, 0x109);
            this.Balanced_VC26.Name = "Balanced_VC26";
            this.Balanced_VC26.Size = new Size(11, 12);
            this.Balanced_VC26.TabIndex = 0x36;
            this.Balanced_VC26.Text = "0";
            this.Balanced_VC27.AutoSize = true;
            this.Balanced_VC27.Location = new Point(0x48, 0x125);
            this.Balanced_VC27.Name = "Balanced_VC27";
            this.Balanced_VC27.Size = new Size(11, 12);
            this.Balanced_VC27.TabIndex = 0x37;
            this.Balanced_VC27.Text = "0";
            this.Balanced_VC28.AutoSize = true;
            this.Balanced_VC28.Location = new Point(0x48, 0x13f);
            this.Balanced_VC28.Name = "Balanced_VC28";
            this.Balanced_VC28.Size = new Size(11, 12);
            this.Balanced_VC28.TabIndex = 0x38;
            this.Balanced_VC28.Text = "0";
            this.Balanced_VC29.AutoSize = true;
            this.Balanced_VC29.Location = new Point(0x48, 0x157);
            this.Balanced_VC29.Name = "Balanced_VC29";
            this.Balanced_VC29.Size = new Size(11, 12);
            this.Balanced_VC29.TabIndex = 0x39;
            this.Balanced_VC29.Text = "0";
            this.groupBox3.Controls.Add(this.label111);
            this.groupBox3.Controls.Add(this.label_VC31);
            this.groupBox3.Controls.Add(this.label47);
            this.groupBox3.Controls.Add(this.label114);
            this.groupBox3.Controls.Add(this.label_VC30);
            this.groupBox3.Controls.Add(this.label_VC32);
            this.groupBox3.Controls.Add(this.label_VC17);
            this.groupBox3.Controls.Add(this.label_VC18);
            this.groupBox3.Controls.Add(this.label69);
            this.groupBox3.Controls.Add(this.label_VC19);
            this.groupBox3.Controls.Add(this.label93);
            this.groupBox3.Controls.Add(this.label_VC20);
            this.groupBox3.Controls.Add(this.label95);
            this.groupBox3.Controls.Add(this.label96);
            this.groupBox3.Controls.Add(this.label97);
            this.groupBox3.Controls.Add(this.label98);
            this.groupBox3.Controls.Add(this.label99);
            this.groupBox3.Controls.Add(this.label100);
            this.groupBox3.Controls.Add(this.label101);
            this.groupBox3.Controls.Add(this.label102);
            this.groupBox3.Controls.Add(this.label103);
            this.groupBox3.Controls.Add(this.label104);
            this.groupBox3.Controls.Add(this.label105);
            this.groupBox3.Controls.Add(this.label_VC21);
            this.groupBox3.Controls.Add(this.label_VC22);
            this.groupBox3.Controls.Add(this.label_VC23);
            this.groupBox3.Controls.Add(this.label_VC24);
            this.groupBox3.Controls.Add(this.label_VC25);
            this.groupBox3.Controls.Add(this.label_VC26);
            this.groupBox3.Controls.Add(this.label_VC27);
            this.groupBox3.Controls.Add(this.label_VC28);
            this.groupBox3.Controls.Add(this.label_VC29);
            this.groupBox3.Location = new Point(0x1d5, 15);
            this.groupBox3.Name = "groupBox3";
            this.groupBox3.Size = new Size(0x7d, 0x1c7);
            this.groupBox3.TabIndex = 0x56;
            this.groupBox3.TabStop = false;
            this.groupBox3.Text = "Vcell_AFE2(mV)";
            this.label111.AutoSize = true;
            this.label111.Location = new Point(0x11, 0x18b);
            this.label111.Name = "label111";
            this.label111.Size = new Size(0x23, 12);
            this.label111.TabIndex = 0x59;
            this.label111.Text = "VC31:";
            this.label_VC31.AutoSize = true;
            this.label_VC31.Location = new Point(0x40, 0x18b);
            this.label_VC31.Name = "label_VC31";
            this.label_VC31.Size = new Size(11, 12);
            this.label_VC31.TabIndex = 0x58;
            this.label_VC31.Text = "0";
            this.label47.AutoSize = true;
            this.label47.Location = new Point(0x11, 370);
            this.label47.Name = "label47";
            this.label47.Size = new Size(0x23, 12);
            this.label47.TabIndex = 0x55;
            this.label47.Text = "VC30:";
            this.label114.AutoSize = true;
            this.label114.Location = new Point(0x11, 420);
            this.label114.Name = "label114";
            this.label114.Size = new Size(0x23, 12);
            this.label114.TabIndex = 0x57;
            this.label114.Text = "VC32:";
            this.label_VC30.AutoSize = true;
            this.label_VC30.Location = new Point(0x40, 370);
            this.label_VC30.Name = "label_VC30";
            this.label_VC30.Size = new Size(11, 12);
            this.label_VC30.TabIndex = 0x54;
            this.label_VC30.Text = "0";
            this.label_VC32.AutoSize = true;
            this.label_VC32.Location = new Point(0x40, 420);
            this.label_VC32.Name = "label_VC32";
            this.label_VC32.Size = new Size(11, 12);
            this.label_VC32.TabIndex = 0x56;
            this.label_VC32.Text = "0";
            this.label_VC17.AutoSize = true;
            this.label_VC17.Location = new Point(0x40, 0x17);
            this.label_VC17.Name = "label_VC17";
            this.label_VC17.Size = new Size(11, 12);
            this.label_VC17.TabIndex = 0x2d;
            this.label_VC17.Text = "0";
            this.label_VC18.AutoSize = true;
            this.label_VC18.Location = new Point(0x40, 0x34);
            this.label_VC18.Name = "label_VC18";
            this.label_VC18.Size = new Size(11, 12);
            this.label_VC18.TabIndex = 0x2e;
            this.label_VC18.Text = "0";
            this.label69.AutoSize = true;
            this.label69.Location = new Point(0x11, 0x157);
            this.label69.Name = "label69";
            this.label69.Size = new Size(0x23, 12);
            this.label69.TabIndex = 0x53;
            this.label69.Text = "VC29:";
            this.label_VC19.AutoSize = true;
            this.label_VC19.Location = new Point(0x40, 0x4e);
            this.label_VC19.Name = "label_VC19";
            this.label_VC19.Size = new Size(11, 12);
            this.label_VC19.TabIndex = 0x2f;
            this.label_VC19.Text = "0";
            this.label93.AutoSize = true;
            this.label93.Location = new Point(0x11, 0x13f);
            this.label93.Name = "label93";
            this.label93.Size = new Size(0x23, 12);
            this.label93.TabIndex = 0x52;
            this.label93.Text = "VC28:";
            this.label_VC20.AutoSize = true;
            this.label_VC20.Location = new Point(0x40, 0x69);
            this.label_VC20.Name = "label_VC20";
            this.label_VC20.Size = new Size(11, 12);
            this.label_VC20.TabIndex = 0x30;
            this.label_VC20.Text = "0";
            this.label95.AutoSize = true;
            this.label95.Location = new Point(0x11, 0x125);
            this.label95.Name = "label95";
            this.label95.Size = new Size(0x23, 12);
            this.label95.TabIndex = 0x51;
            this.label95.Text = "VC27:";
            this.label96.AutoSize = true;
            this.label96.Location = new Point(0x11, 0x17);
            this.label96.Name = "label96";
            this.label96.Size = new Size(0x23, 12);
            this.label96.TabIndex = 0x47;
            this.label96.Text = "VC17:";
            this.label97.AutoSize = true;
            this.label97.Location = new Point(0x11, 0x109);
            this.label97.Name = "label97";
            this.label97.Size = new Size(0x23, 12);
            this.label97.TabIndex = 80;
            this.label97.Text = "VC26:";
            this.label98.AutoSize = true;
            this.label98.Location = new Point(0x11, 0x34);
            this.label98.Name = "label98";
            this.label98.Size = new Size(0x23, 12);
            this.label98.TabIndex = 0x48;
            this.label98.Text = "VC18:";
            this.label99.AutoSize = true;
            this.label99.Location = new Point(0x11, 0xee);
            this.label99.Name = "label99";
            this.label99.Size = new Size(0x23, 12);
            this.label99.TabIndex = 0x4f;
            this.label99.Text = "VC25:";
            this.label100.AutoSize = true;
            this.label100.Location = new Point(0x11, 0x4e);
            this.label100.Name = "label100";
            this.label100.Size = new Size(0x23, 12);
            this.label100.TabIndex = 0x49;
            this.label100.Text = "VC19:";
            this.label101.AutoSize = true;
            this.label101.Location = new Point(0x11, 0xd3);
            this.label101.Name = "label101";
            this.label101.Size = new Size(0x23, 12);
            this.label101.TabIndex = 0x4e;
            this.label101.Text = "VC24:";
            this.label102.AutoSize = true;
            this.label102.Location = new Point(0x11, 0x69);
            this.label102.Name = "label102";
            this.label102.Size = new Size(0x23, 12);
            this.label102.TabIndex = 0x4a;
            this.label102.Text = "VC20:";
            this.label103.AutoSize = true;
            this.label103.Location = new Point(0x11, 0xb9);
            this.label103.Name = "label103";
            this.label103.Size = new Size(0x23, 12);
            this.label103.TabIndex = 0x4d;
            this.label103.Text = "VC23:";
            this.label104.AutoSize = true;
            this.label104.Location = new Point(0x11, 0x83);
            this.label104.Name = "label104";
            this.label104.Size = new Size(0x23, 12);
            this.label104.TabIndex = 0x4b;
            this.label104.Text = "VC21:";
            this.label105.AutoSize = true;
            this.label105.Location = new Point(0x11, 0x9d);
            this.label105.Name = "label105";
            this.label105.Size = new Size(0x23, 12);
            this.label105.TabIndex = 0x4c;
            this.label105.Text = "VC22:";
            this.label_VC21.AutoSize = true;
            this.label_VC21.Location = new Point(0x40, 0x83);
            this.label_VC21.Name = "label_VC21";
            this.label_VC21.Size = new Size(11, 12);
            this.label_VC21.TabIndex = 0x31;
            this.label_VC21.Text = "0";
            this.label_VC22.AutoSize = true;
            this.label_VC22.Location = new Point(0x40, 0x9d);
            this.label_VC22.Name = "label_VC22";
            this.label_VC22.Size = new Size(11, 12);
            this.label_VC22.TabIndex = 50;
            this.label_VC22.Text = "0";
            this.label_VC23.AutoSize = true;
            this.label_VC23.Location = new Point(0x40, 0xb9);
            this.label_VC23.Name = "label_VC23";
            this.label_VC23.Size = new Size(11, 12);
            this.label_VC23.TabIndex = 0x33;
            this.label_VC23.Text = "0";
            this.label_VC24.AutoSize = true;
            this.label_VC24.Location = new Point(0x40, 0xd3);
            this.label_VC24.Name = "label_VC24";
            this.label_VC24.Size = new Size(11, 12);
            this.label_VC24.TabIndex = 0x34;
            this.label_VC24.Text = "0";
            this.label_VC25.AutoSize = true;
            this.label_VC25.Location = new Point(0x40, 0xee);
            this.label_VC25.Name = "label_VC25";
            this.label_VC25.Size = new Size(11, 12);
            this.label_VC25.TabIndex = 0x35;
            this.label_VC25.Text = "0";
            this.label_VC26.AutoSize = true;
            this.label_VC26.Location = new Point(0x40, 0x109);
            this.label_VC26.Name = "label_VC26";
            this.label_VC26.Size = new Size(11, 12);
            this.label_VC26.TabIndex = 0x36;
            this.label_VC26.Text = "0";
            this.label_VC27.AutoSize = true;
            this.label_VC27.Location = new Point(0x40, 0x125);
            this.label_VC27.Name = "label_VC27";
            this.label_VC27.Size = new Size(11, 12);
            this.label_VC27.TabIndex = 0x37;
            this.label_VC27.Text = "0";
            this.label_VC28.AutoSize = true;
            this.label_VC28.Location = new Point(0x40, 0x13f);
            this.label_VC28.Name = "label_VC28";
            this.label_VC28.Size = new Size(11, 12);
            this.label_VC28.TabIndex = 0x38;
            this.label_VC28.Text = "0";
            this.label_VC29.AutoSize = true;
            this.label_VC29.Location = new Point(0x40, 0x157);
            this.label_VC29.Name = "label_VC29";
            this.label_VC29.Size = new Size(11, 12);
            this.label_VC29.TabIndex = 0x39;
            this.label_VC29.Text = "0";
            this.groupBox_ERROR.Controls.Add(this.label_Err_Res6);
            this.groupBox_ERROR.Controls.Add(this.label154);
            this.groupBox_ERROR.Controls.Add(this.label_Err_App);
            this.groupBox_ERROR.Controls.Add(this.label158);
            this.groupBox_ERROR.Controls.Add(this.label_Err_BlueTooth);
            this.groupBox_ERROR.Controls.Add(this.label161);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Res5);
            this.groupBox_ERROR.Controls.Add(this.label166);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Res4);
            this.groupBox_ERROR.Controls.Add(this.label170);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Res3);
            this.groupBox_ERROR.Controls.Add(this.label228);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Res1);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Res2);
            this.groupBox_ERROR.Controls.Add(this.label121);
            this.groupBox_ERROR.Controls.Add(this.label_Reserved1_ref);
            this.groupBox_ERROR.Controls.Add(this.label_Reserved3_ref);
            this.groupBox_ERROR.Controls.Add(this.label_Err_CBC);
            this.groupBox_ERROR.Controls.Add(this.label_Reserved4_ref);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Screen);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Flash);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Wifi);
            this.groupBox_ERROR.Controls.Add(this.label_Err_LSE);
            this.groupBox_ERROR.Controls.Add(this.label247);
            this.groupBox_ERROR.Controls.Add(this.label311);
            this.groupBox_ERROR.Controls.Add(this.label248);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Balanced);
            this.groupBox_ERROR.Controls.Add(this.label249);
            this.groupBox_ERROR.Controls.Add(this.label_Err_E2P_Store);
            this.groupBox_ERROR.Controls.Add(this.label251);
            this.groupBox_ERROR.Controls.Add(this.label123);
            this.groupBox_ERROR.Controls.Add(this.label_Err_HSE);
            this.groupBox_ERROR.Controls.Add(this.label253);
            this.groupBox_ERROR.Controls.Add(this.label_Err_ADC);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Upper);
            this.groupBox_ERROR.Controls.Add(this.label327);
            this.groupBox_ERROR.Controls.Add(this.label257);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Client1);
            this.groupBox_ERROR.Controls.Add(this.label_Err_Can);
            this.groupBox_ERROR.Controls.Add(this.label134);
            this.groupBox_ERROR.Controls.Add(this.label_Err_SPI);
            this.groupBox_ERROR.Controls.Add(this.label325);
            this.groupBox_ERROR.Controls.Add(this.label_Err_E2P_COM);
            this.groupBox_ERROR.Controls.Add(this.label_Reserved2_ref);
            this.groupBox_ERROR.Controls.Add(this.label_AFE_ComError_ref);
            this.groupBox_ERROR.Controls.Add(this.label229);
            this.groupBox_ERROR.Controls.Add(this.label_Err_AFE1);
            this.groupBox_ERROR.Controls.Add(this.label_CBC_ref);
            this.groupBox_ERROR.Controls.Add(this.label_Err_AFE2);
            this.groupBox_ERROR.Font = new Font("SimSun", 12f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.groupBox_ERROR.Location = new Point(6, 15);
            this.groupBox_ERROR.Name = "groupBox_ERROR";
            this.groupBox_ERROR.Size = new Size(0x146, 0x10b);
            this.groupBox_ERROR.TabIndex = 0x56;
            this.groupBox_ERROR.TabStop = false;
            this.groupBox_ERROR.Text = "SYSTEM_ERROR";
            this.label_Err_Res6.AutoSize = true;
            this.label_Err_Res6.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Res6.Location = new Point(300, 240);
            this.label_Err_Res6.Name = "label_Err_Res6";
            this.label_Err_Res6.Size = new Size(15, 14);
            this.label_Err_Res6.TabIndex = 0x70;
            this.label_Err_Res6.Text = "0";
            this.label154.AutoSize = true;
            this.label154.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label154.Location = new Point(0xa8, 240);
            this.label154.Name = "label154";
            this.label154.Size = new Size(0x2f, 14);
            this.label154.TabIndex = 0x6f;
            this.label154.Text = "Res6:";
            this.label_Err_App.AutoSize = true;
            this.label_Err_App.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_App.Location = new Point(0x8f, 220);
            this.label_Err_App.Name = "label_Err_App";
            this.label_Err_App.Size = new Size(15, 14);
            this.label_Err_App.TabIndex = 110;
            this.label_Err_App.Text = "0";
            this.label158.AutoSize = true;
            this.label158.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label158.Location = new Point(6, 220);
            this.label158.Name = "label158";
            this.label158.Size = new Size(0x6f, 14);
            this.label158.TabIndex = 0x6d;
            this.label158.Text = "ComError_App:";
            this.label_Err_BlueTooth.AutoSize = true;
            this.label_Err_BlueTooth.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_BlueTooth.Location = new Point(0x8f, 200);
            this.label_Err_BlueTooth.Name = "label_Err_BlueTooth";
            this.label_Err_BlueTooth.Size = new Size(15, 14);
            this.label_Err_BlueTooth.TabIndex = 0x6c;
            this.label_Err_BlueTooth.Text = "0";
            this.label161.AutoSize = true;
            this.label161.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label161.Location = new Point(6, 200);
            this.label161.Name = "label161";
            this.label161.Size = new Size(0x7f, 14);
            this.label161.TabIndex = 0x6b;
            this.label161.Text = "ComError_BlueT:";
            this.label_Err_Res5.AutoSize = true;
            this.label_Err_Res5.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Res5.Location = new Point(300, 220);
            this.label_Err_Res5.Name = "label_Err_Res5";
            this.label_Err_Res5.Size = new Size(15, 14);
            this.label_Err_Res5.TabIndex = 0x6a;
            this.label_Err_Res5.Text = "0";
            this.label166.AutoSize = true;
            this.label166.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label166.Location = new Point(0xa8, 220);
            this.label166.Name = "label166";
            this.label166.Size = new Size(0x2f, 14);
            this.label166.TabIndex = 0x69;
            this.label166.Text = "Res5:";
            this.label_Err_Res4.AutoSize = true;
            this.label_Err_Res4.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Res4.Location = new Point(300, 200);
            this.label_Err_Res4.Name = "label_Err_Res4";
            this.label_Err_Res4.Size = new Size(15, 14);
            this.label_Err_Res4.TabIndex = 0x68;
            this.label_Err_Res4.Text = "0";
            this.label170.AutoSize = true;
            this.label170.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label170.Location = new Point(0xa8, 200);
            this.label170.Name = "label170";
            this.label170.Size = new Size(0x2f, 14);
            this.label170.TabIndex = 0x67;
            this.label170.Text = "Res4:";
            this.label_Err_Res3.AutoSize = true;
            this.label_Err_Res3.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Res3.Location = new Point(300, 180);
            this.label_Err_Res3.Name = "label_Err_Res3";
            this.label_Err_Res3.Size = new Size(15, 14);
            this.label_Err_Res3.TabIndex = 0x66;
            this.label_Err_Res3.Text = "0";
            this.label228.AutoSize = true;
            this.label228.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label228.Location = new Point(0xa8, 180);
            this.label228.Name = "label228";
            this.label228.Size = new Size(0x2f, 14);
            this.label228.TabIndex = 0x65;
            this.label228.Text = "Res3:";
            this.label_Err_Res1.AutoSize = true;
            this.label_Err_Res1.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Res1.Location = new Point(300, 140);
            this.label_Err_Res1.Name = "label_Err_Res1";
            this.label_Err_Res1.Size = new Size(15, 14);
            this.label_Err_Res1.TabIndex = 0x63;
            this.label_Err_Res1.Text = "0";
            this.label_Err_Res2.AutoSize = true;
            this.label_Err_Res2.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Res2.Location = new Point(300, 160);
            this.label_Err_Res2.Name = "label_Err_Res2";
            this.label_Err_Res2.Size = new Size(15, 14);
            this.label_Err_Res2.TabIndex = 100;
            this.label_Err_Res2.Text = "0";
            this.label121.AutoSize = true;
            this.label121.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label121.Location = new Point(0xa8, 20);
            this.label121.Name = "label121";
            this.label121.Size = new Size(0x7f, 14);
            this.label121.TabIndex = 0x53;
            this.label121.Text = "Error_StoreE2P:";
            this.label_Reserved1_ref.AutoSize = true;
            this.label_Reserved1_ref.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Reserved1_ref.Location = new Point(7, 240);
            this.label_Reserved1_ref.Name = "label_Reserved1_ref";
            this.label_Reserved1_ref.Size = new Size(0x7f, 14);
            this.label_Reserved1_ref.TabIndex = 0x45;
            this.label_Reserved1_ref.Text = "Error_ShortCBC:";
            this.label_Reserved3_ref.AutoSize = true;
            this.label_Reserved3_ref.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Reserved3_ref.Location = new Point(0xa8, 60);
            this.label_Reserved3_ref.Name = "label_Reserved3_ref";
            this.label_Reserved3_ref.Size = new Size(0x57, 14);
            this.label_Reserved3_ref.TabIndex = 0x47;
            this.label_Reserved3_ref.Text = "Error_LSE:";
            this.label_Err_CBC.AutoSize = true;
            this.label_Err_CBC.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_CBC.Location = new Point(0x8f, 240);
            this.label_Err_CBC.Name = "label_Err_CBC";
            this.label_Err_CBC.Size = new Size(15, 14);
            this.label_Err_CBC.TabIndex = 0x49;
            this.label_Err_CBC.Text = "0";
            this.label_Reserved4_ref.AutoSize = true;
            this.label_Reserved4_ref.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Reserved4_ref.Location = new Point(0xa8, 80);
            this.label_Reserved4_ref.Name = "label_Reserved4_ref";
            this.label_Reserved4_ref.Size = new Size(0x67, 14);
            this.label_Reserved4_ref.TabIndex = 0x48;
            this.label_Reserved4_ref.Text = "Error_Flash:";
            this.label_Err_Screen.AutoSize = true;
            this.label_Err_Screen.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Screen.Location = new Point(0x8f, 160);
            this.label_Err_Screen.Name = "label_Err_Screen";
            this.label_Err_Screen.Size = new Size(15, 14);
            this.label_Err_Screen.TabIndex = 0x61;
            this.label_Err_Screen.Text = "0";
            this.label_Err_Flash.AutoSize = true;
            this.label_Err_Flash.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Flash.Location = new Point(300, 80);
            this.label_Err_Flash.Name = "label_Err_Flash";
            this.label_Err_Flash.Size = new Size(15, 14);
            this.label_Err_Flash.TabIndex = 0x4c;
            this.label_Err_Flash.Text = "0";
            this.label_Err_Wifi.AutoSize = true;
            this.label_Err_Wifi.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Wifi.Location = new Point(0x8f, 180);
            this.label_Err_Wifi.Name = "label_Err_Wifi";
            this.label_Err_Wifi.Size = new Size(15, 14);
            this.label_Err_Wifi.TabIndex = 0x62;
            this.label_Err_Wifi.Text = "0";
            this.label_Err_LSE.AutoSize = true;
            this.label_Err_LSE.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_LSE.Location = new Point(300, 60);
            this.label_Err_LSE.Name = "label_Err_LSE";
            this.label_Err_LSE.Size = new Size(15, 14);
            this.label_Err_LSE.TabIndex = 0x4b;
            this.label_Err_LSE.Text = "0";
            this.label247.AutoSize = true;
            this.label247.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label247.Location = new Point(0xa8, 160);
            this.label247.Name = "label247";
            this.label247.Size = new Size(0x5f, 14);
            this.label247.TabIndex = 0x60;
            this.label247.Text = "Error_Cool:";
            this.label311.AutoSize = true;
            this.label311.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label311.Location = new Point(0xa7, 100);
            this.label311.Name = "label311";
            this.label311.Size = new Size(0x7f, 14);
            this.label311.TabIndex = 0x4d;
            this.label311.Text = "Error_Balanced:";
            this.label248.AutoSize = true;
            this.label248.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label248.Location = new Point(0xa8, 140);
            this.label248.Name = "label248";
            this.label248.Size = new Size(0x5f, 14);
            this.label248.TabIndex = 0x5f;
            this.label248.Text = "Error_Heat:";
            this.label_Err_Balanced.AutoSize = true;
            this.label_Err_Balanced.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Balanced.Location = new Point(300, 100);
            this.label_Err_Balanced.Name = "label_Err_Balanced";
            this.label_Err_Balanced.Size = new Size(15, 14);
            this.label_Err_Balanced.TabIndex = 0x4e;
            this.label_Err_Balanced.Text = "0";
            this.label249.AutoSize = true;
            this.label249.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label249.Location = new Point(6, 180);
            this.label249.Name = "label249";
            this.label249.Size = new Size(0x77, 14);
            this.label249.TabIndex = 0x5e;
            this.label249.Text = "ComError_Wifi:";
            this.label_Err_E2P_Store.AutoSize = true;
            this.label_Err_E2P_Store.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_E2P_Store.Location = new Point(300, 20);
            this.label_Err_E2P_Store.Name = "label_Err_E2P_Store";
            this.label_Err_E2P_Store.Size = new Size(15, 14);
            this.label_Err_E2P_Store.TabIndex = 0x54;
            this.label_Err_E2P_Store.Text = "0";
            this.label251.AutoSize = true;
            this.label251.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label251.Location = new Point(6, 160);
            this.label251.Name = "label251";
            this.label251.Size = new Size(0x87, 14);
            this.label251.TabIndex = 0x5d;
            this.label251.Text = "ComError_Screen:";
            this.label123.AutoSize = true;
            this.label123.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label123.Location = new Point(0xa8, 40);
            this.label123.Name = "label123";
            this.label123.Size = new Size(0x57, 14);
            this.label123.TabIndex = 0x55;
            this.label123.Text = "Error_HSE:";
            this.label_Err_HSE.AutoSize = true;
            this.label_Err_HSE.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_HSE.Location = new Point(300, 40);
            this.label_Err_HSE.Name = "label_Err_HSE";
            this.label_Err_HSE.Size = new Size(15, 14);
            this.label_Err_HSE.TabIndex = 0x56;
            this.label_Err_HSE.Text = "0";
            this.label253.AutoSize = true;
            this.label253.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label253.Location = new Point(6, 120);
            this.label253.Name = "label253";
            this.label253.Size = new Size(0x7f, 14);
            this.label253.TabIndex = 0x5c;
            this.label253.Text = "ComError_Upper:";
            this.label_Err_ADC.AutoSize = true;
            this.label_Err_ADC.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_ADC.Location = new Point(300, 120);
            this.label_Err_ADC.Name = "label_Err_ADC";
            this.label_Err_ADC.Size = new Size(15, 14);
            this.label_Err_ADC.TabIndex = 0x52;
            this.label_Err_ADC.Text = "0";
            this.label_Err_Upper.AutoSize = true;
            this.label_Err_Upper.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Upper.Location = new Point(0x8f, 120);
            this.label_Err_Upper.Name = "label_Err_Upper";
            this.label_Err_Upper.Size = new Size(15, 14);
            this.label_Err_Upper.TabIndex = 0x59;
            this.label_Err_Upper.Text = "0";
            this.label327.AutoSize = true;
            this.label327.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label327.Location = new Point(0xa7, 120);
            this.label327.Name = "label327";
            this.label327.Size = new Size(0x57, 14);
            this.label327.TabIndex = 0x51;
            this.label327.Text = "Error_ADC:";
            this.label257.AutoSize = true;
            this.label257.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label257.Location = new Point(6, 140);
            this.label257.Name = "label257";
            this.label257.Size = new Size(0x7f, 14);
            this.label257.TabIndex = 0x5b;
            this.label257.Text = "ComErr_Client1:";
            this.label_Err_Client1.AutoSize = true;
            this.label_Err_Client1.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Client1.Location = new Point(0x8f, 140);
            this.label_Err_Client1.Name = "label_Err_Client1";
            this.label_Err_Client1.Size = new Size(15, 14);
            this.label_Err_Client1.TabIndex = 90;
            this.label_Err_Client1.Text = "0";
            this.label_Err_Can.AutoSize = true;
            this.label_Err_Can.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_Can.Location = new Point(0x8f, 60);
            this.label_Err_Can.Name = "label_Err_Can";
            this.label_Err_Can.Size = new Size(15, 14);
            this.label_Err_Can.TabIndex = 0x58;
            this.label_Err_Can.Text = "0";
            this.label134.AutoSize = true;
            this.label134.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label134.Location = new Point(6, 60);
            this.label134.Name = "label134";
            this.label134.Size = new Size(0x6f, 14);
            this.label134.TabIndex = 0x57;
            this.label134.Text = "ComError_Can:";
            this.label_Err_SPI.AutoSize = true;
            this.label_Err_SPI.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_SPI.Location = new Point(0x8f, 100);
            this.label_Err_SPI.Name = "label_Err_SPI";
            this.label_Err_SPI.Size = new Size(15, 14);
            this.label_Err_SPI.TabIndex = 80;
            this.label_Err_SPI.Text = "0";
            this.label325.AutoSize = true;
            this.label325.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label325.Location = new Point(6, 100);
            this.label325.Name = "label325";
            this.label325.Size = new Size(0x6f, 14);
            this.label325.TabIndex = 0x4f;
            this.label325.Text = "ComError_SPI:";
            this.label_Err_E2P_COM.AutoSize = true;
            this.label_Err_E2P_COM.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_E2P_COM.Location = new Point(0x8f, 80);
            this.label_Err_E2P_COM.Name = "label_Err_E2P_COM";
            this.label_Err_E2P_COM.Size = new Size(15, 14);
            this.label_Err_E2P_COM.TabIndex = 0x4a;
            this.label_Err_E2P_COM.Text = "0";
            this.label_Reserved2_ref.AutoSize = true;
            this.label_Reserved2_ref.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Reserved2_ref.Location = new Point(6, 80);
            this.label_Reserved2_ref.Name = "label_Reserved2_ref";
            this.label_Reserved2_ref.Size = new Size(0x6f, 14);
            this.label_Reserved2_ref.TabIndex = 70;
            this.label_Reserved2_ref.Text = "ComError_E2P:";
            this.label_AFE_ComError_ref.AutoSize = true;
            this.label_AFE_ComError_ref.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_AFE_ComError_ref.Location = new Point(6, 20);
            this.label_AFE_ComError_ref.Name = "label_AFE_ComError_ref";
            this.label_AFE_ComError_ref.Size = new Size(0x77, 14);
            this.label_AFE_ComError_ref.TabIndex = 0x44;
            this.label_AFE_ComError_ref.Text = "ComError_AFE1:";
            this.label229.AutoSize = true;
            this.label229.Location = new Point(6, 0x1a);
            this.label229.Name = "label229";
            this.label229.Size = new Size(0, 0x10);
            this.label229.TabIndex = 0x40;
            this.label_Err_AFE1.AutoSize = true;
            this.label_Err_AFE1.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_AFE1.Location = new Point(0x8f, 20);
            this.label_Err_AFE1.Name = "label_Err_AFE1";
            this.label_Err_AFE1.Size = new Size(15, 14);
            this.label_Err_AFE1.TabIndex = 0x3a;
            this.label_Err_AFE1.Text = "0";
            this.label_CBC_ref.AutoSize = true;
            this.label_CBC_ref.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_CBC_ref.Location = new Point(6, 40);
            this.label_CBC_ref.Name = "label_CBC_ref";
            this.label_CBC_ref.Size = new Size(0x77, 14);
            this.label_CBC_ref.TabIndex = 0x43;
            this.label_CBC_ref.Text = "ComError_AFE2:";
            this.label_Err_AFE2.AutoSize = true;
            this.label_Err_AFE2.Font = new Font("SimSun", 10.5f, FontStyle.Bold, GraphicsUnit.Point, 0x86);
            this.label_Err_AFE2.Location = new Point(0x8f, 40);
            this.label_Err_AFE2.Name = "label_Err_AFE2";
            this.label_Err_AFE2.Size = new Size(15, 14);
            this.label_Err_AFE2.TabIndex = 0x3b;
            this.label_Err_AFE2.Text = "0";
            this.groupBox_Balance.Controls.Add(this.label219);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC15);
            this.groupBox_Balance.Controls.Add(this.label120);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC16);
            this.groupBox_Balance.Controls.Add(this.label30);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC1);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC2);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC3);
            this.groupBox_Balance.Controls.Add(this.label36);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC4);
            this.groupBox_Balance.Controls.Add(this.label41);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC5);
            this.groupBox_Balance.Controls.Add(this.label43);
            this.groupBox_Balance.Controls.Add(this.label45);
            this.groupBox_Balance.Controls.Add(this.label49);
            this.groupBox_Balance.Controls.Add(this.label50);
            this.groupBox_Balance.Controls.Add(this.label51);
            this.groupBox_Balance.Controls.Add(this.label52);
            this.groupBox_Balance.Controls.Add(this.label53);
            this.groupBox_Balance.Controls.Add(this.label54);
            this.groupBox_Balance.Controls.Add(this.label55);
            this.groupBox_Balance.Controls.Add(this.label56);
            this.groupBox_Balance.Controls.Add(this.label61);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC6);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC7);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC8);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC9);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC10);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC11);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC12);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC13);
            this.groupBox_Balance.Controls.Add(this.Balanced_VC14);
            this.groupBox_Balance.Location = new Point(0x257, 15);
            this.groupBox_Balance.Name = "groupBox_Balance";
            this.groupBox_Balance.Size = new Size(0x65, 0x1c7);
            this.groupBox_Balance.TabIndex = 0x55;
            this.groupBox_Balance.TabStop = false;
            this.groupBox_Balance.Text = "Bn_AFE1(Y/N)";
            this.label219.AutoSize = true;
            this.label219.Location = new Point(0x16, 0x18b);
            this.label219.Name = "label219";
            this.label219.Size = new Size(0x23, 12);
            this.label219.TabIndex = 0x55;
            this.label219.Text = "VC15:";
            this.Balanced_VC15.AutoSize = true;
            this.Balanced_VC15.Location = new Point(0x45, 0x18b);
            this.Balanced_VC15.Name = "Balanced_VC15";
            this.Balanced_VC15.Size = new Size(11, 12);
            this.Balanced_VC15.TabIndex = 0x54;
            this.Balanced_VC15.Text = "0";
            this.label120.AutoSize = true;
            this.label120.Location = new Point(0x16, 420);
            this.label120.Name = "label120";
            this.label120.Size = new Size(0x23, 12);
            this.label120.TabIndex = 70;
            this.label120.Text = "VC16:";
            this.Balanced_VC16.AutoSize = true;
            this.Balanced_VC16.Location = new Point(0x45, 420);
            this.Balanced_VC16.Name = "Balanced_VC16";
            this.Balanced_VC16.Size = new Size(11, 12);
            this.Balanced_VC16.TabIndex = 0x2c;
            this.Balanced_VC16.Text = "0";
            this.label30.AutoSize = true;
            this.label30.Location = new Point(0x16, 0x17);
            this.label30.Name = "label30";
            this.label30.Size = new Size(0x1d, 12);
            this.label30.TabIndex = 70;
            this.label30.Text = "VC1:";
            this.Balanced_VC1.AutoSize = true;
            this.Balanced_VC1.Location = new Point(0x45, 0x17);
            this.Balanced_VC1.Name = "Balanced_VC1";
            this.Balanced_VC1.Size = new Size(11, 12);
            this.Balanced_VC1.TabIndex = 0x2c;
            this.Balanced_VC1.Text = "0";
            this.Balanced_VC2.AutoSize = true;
            this.Balanced_VC2.Location = new Point(0x45, 50);
            this.Balanced_VC2.Name = "Balanced_VC2";
            this.Balanced_VC2.Size = new Size(11, 12);
            this.Balanced_VC2.TabIndex = 0x2d;
            this.Balanced_VC2.Text = "0";
            this.Balanced_VC3.AutoSize = true;
            this.Balanced_VC3.Location = new Point(0x45, 0x4f);
            this.Balanced_VC3.Name = "Balanced_VC3";
            this.Balanced_VC3.Size = new Size(11, 12);
            this.Balanced_VC3.TabIndex = 0x2e;
            this.Balanced_VC3.Text = "0";
            this.label36.AutoSize = true;
            this.label36.Location = new Point(0x16, 370);
            this.label36.Name = "label36";
            this.label36.Size = new Size(0x23, 12);
            this.label36.TabIndex = 0x53;
            this.label36.Text = "VC14:";
            this.Balanced_VC4.AutoSize = true;
            this.Balanced_VC4.Location = new Point(0x45, 0x69);
            this.Balanced_VC4.Name = "Balanced_VC4";
            this.Balanced_VC4.Size = new Size(11, 12);
            this.Balanced_VC4.TabIndex = 0x2f;
            this.Balanced_VC4.Text = "0";
            this.label41.AutoSize = true;
            this.label41.Location = new Point(0x16, 0x15a);
            this.label41.Name = "label41";
            this.label41.Size = new Size(0x23, 12);
            this.label41.TabIndex = 0x52;
            this.label41.Text = "VC13:";
            this.Balanced_VC5.AutoSize = true;
            this.Balanced_VC5.Location = new Point(0x45, 0x84);
            this.Balanced_VC5.Name = "Balanced_VC5";
            this.Balanced_VC5.Size = new Size(11, 12);
            this.Balanced_VC5.TabIndex = 0x30;
            this.Balanced_VC5.Text = "0";
            this.label43.AutoSize = true;
            this.label43.Location = new Point(0x16, 320);
            this.label43.Name = "label43";
            this.label43.Size = new Size(0x23, 12);
            this.label43.TabIndex = 0x51;
            this.label43.Text = "VC12:";
            this.label45.AutoSize = true;
            this.label45.Location = new Point(0x16, 50);
            this.label45.Name = "label45";
            this.label45.Size = new Size(0x1d, 12);
            this.label45.TabIndex = 0x47;
            this.label45.Text = "VC2:";
            this.label49.AutoSize = true;
            this.label49.Location = new Point(0x16, 0x124);
            this.label49.Name = "label49";
            this.label49.Size = new Size(0x23, 12);
            this.label49.TabIndex = 80;
            this.label49.Text = "VC11:";
            this.label50.AutoSize = true;
            this.label50.Location = new Point(0x16, 0x4f);
            this.label50.Name = "label50";
            this.label50.Size = new Size(0x1d, 12);
            this.label50.TabIndex = 0x48;
            this.label50.Text = "VC3:";
            this.label51.AutoSize = true;
            this.label51.Location = new Point(0x16, 0x109);
            this.label51.Name = "label51";
            this.label51.Size = new Size(0x23, 12);
            this.label51.TabIndex = 0x4f;
            this.label51.Text = "VC10:";
            this.label52.AutoSize = true;
            this.label52.Location = new Point(0x16, 0x69);
            this.label52.Name = "label52";
            this.label52.Size = new Size(0x1d, 12);
            this.label52.TabIndex = 0x49;
            this.label52.Text = "VC4:";
            this.label53.AutoSize = true;
            this.label53.Location = new Point(0x16, 0xee);
            this.label53.Name = "label53";
            this.label53.Size = new Size(0x1d, 12);
            this.label53.TabIndex = 0x4e;
            this.label53.Text = "VC9:";
            this.label54.AutoSize = true;
            this.label54.Location = new Point(0x16, 0x84);
            this.label54.Name = "label54";
            this.label54.Size = new Size(0x1d, 12);
            this.label54.TabIndex = 0x4a;
            this.label54.Text = "VC5:";
            this.label55.AutoSize = true;
            this.label55.Location = new Point(0x16, 0xd4);
            this.label55.Name = "label55";
            this.label55.Size = new Size(0x1d, 12);
            this.label55.TabIndex = 0x4d;
            this.label55.Text = "VC8:";
            this.label56.AutoSize = true;
            this.label56.Location = new Point(0x16, 0x9e);
            this.label56.Name = "label56";
            this.label56.Size = new Size(0x1d, 12);
            this.label56.TabIndex = 0x4b;
            this.label56.Text = "VC6:";
            this.label61.AutoSize = true;
            this.label61.Location = new Point(0x16, 0xb8);
            this.label61.Name = "label61";
            this.label61.Size = new Size(0x1d, 12);
            this.label61.TabIndex = 0x4c;
            this.label61.Text = "VC7:";
            this.Balanced_VC6.AutoSize = true;
            this.Balanced_VC6.Location = new Point(0x45, 0x9e);
            this.Balanced_VC6.Name = "Balanced_VC6";
            this.Balanced_VC6.Size = new Size(11, 12);
            this.Balanced_VC6.TabIndex = 0x31;
            this.Balanced_VC6.Text = "0";
            this.Balanced_VC7.AutoSize = true;
            this.Balanced_VC7.Location = new Point(0x45, 0xb8);
            this.Balanced_VC7.Name = "Balanced_VC7";
            this.Balanced_VC7.Size = new Size(11, 12);
            this.Balanced_VC7.TabIndex = 50;
            this.Balanced_VC7.Text = "0";
            this.Balanced_VC8.AutoSize = true;
            this.Balanced_VC8.Location = new Point(0x45, 0xd4);
            this.Balanced_VC8.Name = "Balanced_VC8";
            this.Balanced_VC8.Size = new Size(11, 12);
            this.Balanced_VC8.TabIndex = 0x33;
            this.Balanced_VC8.Text = "0";
            this.Balanced_VC9.AutoSize = true;
            this.Balanced_VC9.Location = new Point(0x45, 0xee);
            this.Balanced_VC9.Name = "Balanced_VC9";
            this.Balanced_VC9.Size = new Size(11, 12);
            this.Balanced_VC9.TabIndex = 0x34;
            this.Balanced_VC9.Text = "0";
            this.Balanced_VC10.AutoSize = true;
            this.Balanced_VC10.Location = new Point(0x45, 0x109);
            this.Balanced_VC10.Name = "Balanced_VC10";
            this.Balanced_VC10.Size = new Size(11, 12);
            this.Balanced_VC10.TabIndex = 0x35;
            this.Balanced_VC10.Text = "0";
            this.Balanced_VC11.AutoSize = true;
            this.Balanced_VC11.Location = new Point(0x45, 0x124);
            this.Balanced_VC11.Name = "Balanced_VC11";
            this.Balanced_VC11.Size = new Size(11, 12);
            this.Balanced_VC11.TabIndex = 0x36;
            this.Balanced_VC11.Text = "0";
            this.Balanced_VC12.AutoSize = true;
            this.Balanced_VC12.Location = new Point(0x45, 320);
            this.Balanced_VC12.Name = "Balanced_VC12";
            this.Balanced_VC12.Size = new Size(11, 12);
            this.Balanced_VC12.TabIndex = 0x37;
            this.Balanced_VC12.Text = "0";
            this.Balanced_VC13.AutoSize = true;
            this.Balanced_VC13.Location = new Point(0x45, 0x15a);
            this.Balanced_VC13.Name = "Balanced_VC13";
            this.Balanced_VC13.Size = new Size(11, 12);
            this.Balanced_VC13.TabIndex = 0x38;
            this.Balanced_VC13.Text = "0";
            this.Balanced_VC14.AutoSize = true;
            this.Balanced_VC14.Location = new Point(0x45, 370);
            this.Balanced_VC14.Name = "Balanced_VC14";
            this.Balanced_VC14.Size = new Size(11, 12);
            this.Balanced_VC14.TabIndex = 0x39;
            this.Balanced_VC14.Text = "0";
            this.groupBox_Temperature.Controls.Add(this.label157);
            this.groupBox_Temperature.Controls.Add(this.label_TempMos);
            this.groupBox_Temperature.Controls.Add(this.label_TempEnv2);
            this.groupBox_Temperature.Controls.Add(this.label160);
            this.groupBox_Temperature.Controls.Add(this.label_TempEnv3);
            this.groupBox_Temperature.Controls.Add(this.label_TempEnv1);
            this.groupBox_Temperature.Controls.Add(this.label163);
            this.groupBox_Temperature.Controls.Add(this.label164);
            this.groupBox_Temperature.Controls.Add(this.label155);
            this.groupBox_Temperature.Controls.Add(this.label_Temp6);
            this.groupBox_Temperature.Controls.Add(this.label_TempMin);
            this.groupBox_Temperature.Controls.Add(this.label_TempMin_ref);
            this.groupBox_Temperature.Controls.Add(this.label_TempMax);
            this.groupBox_Temperature.Controls.Add(this.label_TempMax_ref);
            this.groupBox_Temperature.Controls.Add(this.label_Temp_mos_ref);
            this.groupBox_Temperature.Controls.Add(this.label_Temp3);
            this.groupBox_Temperature.Controls.Add(this.label_Temp_env_ref);
            this.groupBox_Temperature.Controls.Add(this.label_Temp5);
            this.groupBox_Temperature.Controls.Add(this.label_Temp4);
            this.groupBox_Temperature.Controls.Add(this.label_Temp2_ref);
            this.groupBox_Temperature.Controls.Add(this.label_Temp2);
            this.groupBox_Temperature.Controls.Add(this.label_Temp1);
            this.groupBox_Temperature.Controls.Add(this.label_Temp3_ref);
            this.groupBox_Temperature.Controls.Add(this.label_Temp1_ref);
            this.groupBox_Temperature.Location = new Point(0x32b, 120);
            this.groupBox_Temperature.Name = "groupBox_Temperature";
            this.groupBox_Temperature.Size = new Size(240, 0xad);
            this.groupBox_Temperature.TabIndex = 90;
            this.groupBox_Temperature.TabStop = false;
            this.groupBox_Temperature.Text = "Temperature(℃)";
            this.label157.AutoSize = true;
            this.label157.Location = new Point(0x7f, 0x81);
            this.label157.Name = "label157";
            this.label157.Size = new Size(0x35, 12);
            this.label157.TabIndex = 0x67;
            this.label157.Text = "TempMos:";
            this.label_TempMos.AutoSize = true;
            this.label_TempMos.Location = new Point(0xc6, 0x81);
            this.label_TempMos.Name = "label_TempMos";
            this.label_TempMos.Size = new Size(11, 12);
            this.label_TempMos.TabIndex = 0x68;
            this.label_TempMos.Text = "0";
            this.label_TempEnv2.AutoSize = true;
            this.label_TempEnv2.Location = new Point(0xc6, 0x67);
            this.label_TempEnv2.Name = "label_TempEnv2";
            this.label_TempEnv2.Size = new Size(11, 12);
            this.label_TempEnv2.TabIndex = 0x69;
            this.label_TempEnv2.Text = "0";
            this.label160.AutoSize = true;
            this.label160.Location = new Point(0x7f, 0x67);
            this.label160.Name = "label160";
            this.label160.Size = new Size(0x3b, 12);
            this.label160.TabIndex = 0x66;
            this.label160.Text = "TempEnv2:";
            this.label_TempEnv3.AutoSize = true;
            this.label_TempEnv3.Location = new Point(0x53, 0x81);
            this.label_TempEnv3.Name = "label_TempEnv3";
            this.label_TempEnv3.Size = new Size(11, 12);
            this.label_TempEnv3.TabIndex = 0x6a;
            this.label_TempEnv3.Text = "0";
            this.label_TempEnv1.AutoSize = true;
            this.label_TempEnv1.Location = new Point(0x53, 0x67);
            this.label_TempEnv1.Name = "label_TempEnv1";
            this.label_TempEnv1.Size = new Size(11, 12);
            this.label_TempEnv1.TabIndex = 0x6b;
            this.label_TempEnv1.Text = "0";
            this.label163.AutoSize = true;
            this.label163.Location = new Point(12, 0x81);
            this.label163.Name = "label163";
            this.label163.Size = new Size(0x3b, 12);
            this.label163.TabIndex = 0x65;
            this.label163.Text = "TempEnv3:";
            this.label164.AutoSize = true;
            this.label164.Location = new Point(12, 0x67);
            this.label164.Name = "label164";
            this.label164.Size = new Size(0x3b, 12);
            this.label164.TabIndex = 100;
            this.label164.Text = "TempEnv1:";
            this.label155.AutoSize = true;
            this.label155.Location = new Point(0x7f, 0x4e);
            this.label155.Name = "label155";
            this.label155.Size = new Size(0x29, 12);
            this.label155.TabIndex = 0x62;
            this.label155.Text = "Temp6:";
            this.label_Temp6.AutoSize = true;
            this.label_Temp6.Location = new Point(0xc6, 0x4e);
            this.label_Temp6.Name = "label_Temp6";
            this.label_Temp6.Size = new Size(11, 12);
            this.label_Temp6.TabIndex = 0x63;
            this.label_Temp6.Text = "0";
            this.label_TempMin.AutoSize = true;
            this.label_TempMin.Location = new Point(0xc6, 0x98);
            this.label_TempMin.Name = "label_TempMin";
            this.label_TempMin.Size = new Size(11, 12);
            this.label_TempMin.TabIndex = 0x60;
            this.label_TempMin.Text = "0";
            this.label_TempMin_ref.AutoSize = true;
            this.label_TempMin_ref.Location = new Point(0x7f, 0x98);
            this.label_TempMin_ref.Name = "label_TempMin_ref";
            this.label_TempMin_ref.Size = new Size(0x35, 12);
            this.label_TempMin_ref.TabIndex = 0x5f;
            this.label_TempMin_ref.Text = "TempMin:";
            this.label_TempMax.AutoSize = true;
            this.label_TempMax.Location = new Point(0x53, 0x98);
            this.label_TempMax.Name = "label_TempMax";
            this.label_TempMax.Size = new Size(11, 12);
            this.label_TempMax.TabIndex = 0x61;
            this.label_TempMax.Text = "0";
            this.label_TempMax_ref.AutoSize = true;
            this.label_TempMax_ref.Location = new Point(12, 0x98);
            this.label_TempMax_ref.Name = "label_TempMax_ref";
            this.label_TempMax_ref.Size = new Size(0x35, 12);
            this.label_TempMax_ref.TabIndex = 0x5e;
            this.label_TempMax_ref.Text = "TempMax:";
            this.label_Temp_mos_ref.AutoSize = true;
            this.label_Temp_mos_ref.Location = new Point(12, 0x4e);
            this.label_Temp_mos_ref.Name = "label_Temp_mos_ref";
            this.label_Temp_mos_ref.Size = new Size(0x29, 12);
            this.label_Temp_mos_ref.TabIndex = 0x5c;
            this.label_Temp_mos_ref.Text = "Temp3:";
            this.label_Temp3.AutoSize = true;
            this.label_Temp3.Location = new Point(0x53, 0x4e);
            this.label_Temp3.Name = "label_Temp3";
            this.label_Temp3.Size = new Size(11, 12);
            this.label_Temp3.TabIndex = 0x5d;
            this.label_Temp3.Text = "0";
            this.label_Temp5.AutoSize = true;
            this.label_Temp5.Location = new Point(0xc6, 0x35);
            this.label_Temp5.Name = "label_Temp5";
            this.label_Temp5.Size = new Size(11, 12);
            this.label_Temp5.TabIndex = 0x5b;
            this.label_Temp5.Text = "0";
            this.label_Temp4.AutoSize = true;
            this.label_Temp4.Location = new Point(0xc6, 0x1b);
            this.label_Temp4.Name = "label_Temp4";
            this.label_Temp4.Size = new Size(11, 12);
            this.label_Temp4.TabIndex = 0x5b;
            this.label_Temp4.Text = "0";
            this.label_Temp2.AutoSize = true;
            this.label_Temp2.Location = new Point(0x53, 0x35);
            this.label_Temp2.Name = "label_Temp2";
            this.label_Temp2.Size = new Size(11, 12);
            this.label_Temp2.TabIndex = 0x5b;
            this.label_Temp2.Text = "0";
            this.label_Temp1.AutoSize = true;
            this.label_Temp1.Location = new Point(0x53, 0x1b);
            this.label_Temp1.Name = "label_Temp1";
            this.label_Temp1.Size = new Size(11, 12);
            this.label_Temp1.TabIndex = 0x5b;
            this.label_Temp1.Text = "0";
            this.groupBox_set.Controls.Add(this.label_BMS_Source_Func_Status);
            this.groupBox_set.Controls.Add(this.label_Sleep_Func_Status);
            this.groupBox_set.Controls.Add(this.label_AFE1_Func_Status);
            this.groupBox_set.Controls.Add(this.label_Balance_Func_Status);
            this.groupBox_set.Controls.Add(this.label_AFE2_Func_Status);
            this.groupBox_set.Controls.Add(this.label_Cool_Func_Status);
            this.groupBox_set.Controls.Add(this.label239);
            this.groupBox_set.Controls.Add(this.label_Heated_Func_Status);
            this.groupBox_set.Controls.Add(this.label236);
            this.groupBox_set.Controls.Add(this.label_Relay_Func_Status);
            this.groupBox_set.Controls.Add(this.label227);
            this.groupBox_set.Controls.Add(this.label_MosRelay_Func_Status);
            this.groupBox_set.Controls.Add(this.label_SocFixed_Func_Status);
            this.groupBox_set.Controls.Add(this.button_AFE2_Func_Close);
            this.groupBox_set.Controls.Add(this.button_AFE2_Func_Open);
            this.groupBox_set.Controls.Add(this.button_BMS_Source_Func_Close);
            this.groupBox_set.Controls.Add(this.button_BMS_Source_Func_Open);
            this.groupBox_set.Controls.Add(this.button_Sleep_Func_Close);
            this.groupBox_set.Controls.Add(this.button_Sleep_Func_Open);
            this.groupBox_set.Controls.Add(this.label162);
            this.groupBox_set.Controls.Add(this.label167);
            this.groupBox_set.Controls.Add(this.button_AFE1_Func_Close);
            this.groupBox_set.Controls.Add(this.button_AFE1_Func_Open);
            this.groupBox_set.Controls.Add(this.button_Balance_Func_Close);
            this.groupBox_set.Controls.Add(this.button_Balance_Func_Open);
            this.groupBox_set.Controls.Add(this.button_Cool_Func_Close);
            this.groupBox_set.Controls.Add(this.label159);
            this.groupBox_set.Controls.Add(this.button_Cool_Func_Open);
            this.groupBox_set.Controls.Add(this.button_Heated_Func_Close);
            this.groupBox_set.Controls.Add(this.button_SocFixed_Func_Close);
            this.groupBox_set.Controls.Add(this.label156);
            this.groupBox_set.Controls.Add(this.button_SocFixed_Func_Open);
            this.groupBox_set.Controls.Add(this.button_Relay_Func_Close);
            this.groupBox_set.Controls.Add(this.label153);
            this.groupBox_set.Controls.Add(this.button_Relay_Func_Open);
            this.groupBox_set.Controls.Add(this.button_MosRelay_Func_Close);
            this.groupBox_set.Controls.Add(this.label_CtrlAFEShut);
            this.groupBox_set.Controls.Add(this.label_CtrlAFEWake);
            this.groupBox_set.Controls.Add(this.label_CtrlBalance);
            this.groupBox_set.Controls.Add(this.label_CtrlHeat);
            this.groupBox_set.Controls.Add(this.button_Heated_Func_Open);
            this.groupBox_set.Controls.Add(this.label_CtrlStartup);
            this.groupBox_set.Controls.Add(this.button_MosRelay_Func_Open);
            this.groupBox_set.Location = new Point(8, 0xdf);
            this.groupBox_set.Name = "groupBox_set";
            this.groupBox_set.Size = new Size(0xde, 470);
            this.groupBox_set.TabIndex = 0;
            this.groupBox_set.TabStop = false;
            this.groupBox_set.Text = "BMS_Function_Select";
            this.label_BMS_Source_Func_Status.AutoSize = true;
            this.label_BMS_Source_Func_Status.Location = new Point(0xb5, 330);
            this.label_BMS_Source_Func_Status.Name = "label_BMS_Source_Func_Status";
            this.label_BMS_Source_Func_Status.Size = new Size(0x23, 12);
            this.label_BMS_Source_Func_Status.TabIndex = 0x8d;
            this.label_BMS_Source_Func_Status.Text = "Close";
            this.label_Sleep_Func_Status.AutoSize = true;
            this.label_Sleep_Func_Status.Location = new Point(0xb5, 300);
            this.label_Sleep_Func_Status.Name = "label_Sleep_Func_Status";
            this.label_Sleep_Func_Status.Size = new Size(0x23, 12);
            this.label_Sleep_Func_Status.TabIndex = 140;
            this.label_Sleep_Func_Status.Text = "Close";
            this.label_AFE1_Func_Status.AutoSize = true;
            this.label_AFE1_Func_Status.Location = new Point(0xb5, 240);
            this.label_AFE1_Func_Status.Name = "label_AFE1_Func_Status";
            this.label_AFE1_Func_Status.Size = new Size(0x23, 12);
            this.label_AFE1_Func_Status.TabIndex = 0x8b;
            this.label_AFE1_Func_Status.Text = "Close";
            this.label_Balance_Func_Status.AutoSize = true;
            this.label_Balance_Func_Status.Location = new Point(0xb5, 210);
            this.label_Balance_Func_Status.Name = "label_Balance_Func_Status";
            this.label_Balance_Func_Status.Size = new Size(0x23, 12);
            this.label_Balance_Func_Status.TabIndex = 0x8a;
            this.label_Balance_Func_Status.Text = "Close";
            this.label_AFE2_Func_Status.AutoSize = true;
            this.label_AFE2_Func_Status.Location = new Point(0xb5, 270);
            this.label_AFE2_Func_Status.Name = "label_AFE2_Func_Status";
            this.label_AFE2_Func_Status.Size = new Size(0x23, 12);
            this.label_AFE2_Func_Status.TabIndex = 0x89;
            this.label_AFE2_Func_Status.Text = "Close";
            this.label_Cool_Func_Status.AutoSize = true;
            this.label_Cool_Func_Status.Location = new Point(0xb5, 180);
            this.label_Cool_Func_Status.Name = "label_Cool_Func_Status";
            this.label_Cool_Func_Status.Size = new Size(0x23, 12);
            this.label_Cool_Func_Status.TabIndex = 0x80;
            this.label_Cool_Func_Status.Text = "Close";
            this.label239.AutoSize = true;
            this.label239.Location = new Point(0xb5, 30);
            this.label239.Name = "label239";
            this.label239.Size = new Size(0x23, 12);
            this.label239.TabIndex = 0x88;
            this.label239.Text = "状态:";
            this.label_Heated_Func_Status.AutoSize = true;
            this.label_Heated_Func_Status.Location = new Point(0xb5, 150);
            this.label_Heated_Func_Status.Name = "label_Heated_Func_Status";
            this.label_Heated_Func_Status.Size = new Size(0x23, 12);
            this.label_Heated_Func_Status.TabIndex = 0x7f;
            this.label_Heated_Func_Status.Text = "Close";
            this.label236.AutoSize = true;
            this.label236.Location = new Point(100, 30);
            this.label236.Name = "label236";
            this.label236.Size = new Size(0x23, 12);
            this.label236.TabIndex = 0x87;
            this.label236.Text = "控制:";
            this.label_Relay_Func_Status.AutoSize = true;
            this.label_Relay_Func_Status.Location = new Point(0xb5, 90);
            this.label_Relay_Func_Status.Name = "label_Relay_Func_Status";
            this.label_Relay_Func_Status.Size = new Size(0x23, 12);
            this.label_Relay_Func_Status.TabIndex = 0x7e;
            this.label_Relay_Func_Status.Text = "Close";
            this.label227.AutoSize = true;
            this.label227.Location = new Point(7, 30);
            this.label227.Name = "label227";
            this.label227.Size = new Size(0x23, 12);
            this.label227.TabIndex = 0x86;
            this.label227.Text = "功能:";
            this.label_MosRelay_Func_Status.AutoSize = true;
            this.label_MosRelay_Func_Status.Location = new Point(0xb5, 60);
            this.label_MosRelay_Func_Status.Name = "label_MosRelay_Func_Status";
            this.label_MosRelay_Func_Status.Size = new Size(0x23, 12);
            this.label_MosRelay_Func_Status.TabIndex = 0x7d;
            this.label_MosRelay_Func_Status.Text = "Close";
            this.label_SocFixed_Func_Status.AutoSize = true;
            this.label_SocFixed_Func_Status.Location = new Point(0xb5, 120);
            this.label_SocFixed_Func_Status.Name = "label_SocFixed_Func_Status";
            this.label_SocFixed_Func_Status.Size = new Size(0x23, 12);
            this.label_SocFixed_Func_Status.TabIndex = 0x7c;
            this.label_SocFixed_Func_Status.Text = "Close";
            this.button_AFE2_Func_Close.Location = new Point(0x7d, 0x109);
            this.button_AFE2_Func_Close.Name = "button_AFE2_Func_Close";
            this.button_AFE2_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_AFE2_Func_Close.TabIndex = 0x85;
            this.button_AFE2_Func_Close.Text = "Sleep";
            this.button_AFE2_Func_Close.UseVisualStyleBackColor = true;
            this.button_AFE2_Func_Close.Click += new EventHandler(this.button_AFE2_Func_Close_Click);
            this.button_AFE2_Func_Open.Location = new Point(0x4a, 0x109);
            this.button_AFE2_Func_Open.Name = "button_AFE2_Func_Open";
            this.button_AFE2_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_AFE2_Func_Open.TabIndex = 0x84;
            this.button_AFE2_Func_Open.Text = "Act";
            this.button_AFE2_Func_Open.UseVisualStyleBackColor = true;
            this.button_AFE2_Func_Open.Click += new EventHandler(this.button_AFE2_Func_Open_Click);
            this.button_BMS_Source_Func_Close.Location = new Point(0x7d, 0x145);
            this.button_BMS_Source_Func_Close.Name = "button_BMS_Source_Func_Close";
            this.button_BMS_Source_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_BMS_Source_Func_Close.TabIndex = 0x83;
            this.button_BMS_Source_Func_Close.Text = "Close";
            this.button_BMS_Source_Func_Close.UseVisualStyleBackColor = true;
            this.button_BMS_Source_Func_Close.Click += new EventHandler(this.button_BMS_Source_Func_Close_Click);
            this.button_BMS_Source_Func_Open.Location = new Point(0x4a, 0x145);
            this.button_BMS_Source_Func_Open.Name = "button_BMS_Source_Func_Open";
            this.button_BMS_Source_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_BMS_Source_Func_Open.TabIndex = 130;
            this.button_BMS_Source_Func_Open.Text = "Open";
            this.button_BMS_Source_Func_Open.UseVisualStyleBackColor = true;
            this.button_BMS_Source_Func_Open.Click += new EventHandler(this.button_BMS_Source_Func_Open_Click);
            this.button_Sleep_Func_Close.Location = new Point(0x7e, 0x127);
            this.button_Sleep_Func_Close.Name = "button_Sleep_Func_Close";
            this.button_Sleep_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_Sleep_Func_Close.TabIndex = 0x81;
            this.button_Sleep_Func_Close.Text = "Close";
            this.button_Sleep_Func_Close.UseVisualStyleBackColor = true;
            this.button_Sleep_Func_Close.Click += new EventHandler(this.button_Sleep_Func_Close_Click);
            this.button_Sleep_Func_Open.Location = new Point(0x4a, 0x127);
            this.button_Sleep_Func_Open.Name = "button_Sleep_Func_Open";
            this.button_Sleep_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_Sleep_Func_Open.TabIndex = 0x80;
            this.button_Sleep_Func_Open.Text = "Open";
            this.button_Sleep_Func_Open.UseVisualStyleBackColor = true;
            this.button_Sleep_Func_Open.Click += new EventHandler(this.button_Sleep_Func_Open_Click);
            this.label162.AutoSize = true;
            this.label162.Location = new Point(8, 330);
            this.label162.Name = "label162";
            this.label162.Size = new Size(0x35, 12);
            this.label162.TabIndex = 0x7f;
            this.label162.Text = "BMS辅源:";
            this.label167.AutoSize = true;
            this.label167.Location = new Point(8, 300);
            this.label167.Name = "label167";
            this.label167.Size = new Size(0x3b, 12);
            this.label167.TabIndex = 0x7e;
            this.label167.Text = "休眠功能:";
            this.button_AFE1_Func_Close.Location = new Point(0x7e, 0xeb);
            this.button_AFE1_Func_Close.Name = "button_AFE1_Func_Close";
            this.button_AFE1_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_AFE1_Func_Close.TabIndex = 0x7b;
            this.button_AFE1_Func_Close.Text = "Sleep";
            this.button_AFE1_Func_Close.UseVisualStyleBackColor = true;
            this.button_AFE1_Func_Close.Click += new EventHandler(this.button_AFE1_Func_Close_Click);
            this.button_AFE1_Func_Open.Location = new Point(0x4a, 0xeb);
            this.button_AFE1_Func_Open.Name = "button_AFE1_Func_Open";
            this.button_AFE1_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_AFE1_Func_Open.TabIndex = 0x7a;
            this.button_AFE1_Func_Open.Text = "Act";
            this.button_AFE1_Func_Open.UseVisualStyleBackColor = true;
            this.button_AFE1_Func_Open.Click += new EventHandler(this.button_AFE1_Func_Open_Click);
            this.button_Balance_Func_Close.Location = new Point(0x7d, 0xcd);
            this.button_Balance_Func_Close.Name = "button_Balance_Func_Close";
            this.button_Balance_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_Balance_Func_Close.TabIndex = 0x79;
            this.button_Balance_Func_Close.Text = "Close";
            this.button_Balance_Func_Close.UseVisualStyleBackColor = true;
            this.button_Balance_Func_Close.Click += new EventHandler(this.button_Balance_Func_Close_Click);
            this.button_Balance_Func_Open.Location = new Point(0x4a, 0xcd);
            this.button_Balance_Func_Open.Name = "button_Balance_Func_Open";
            this.button_Balance_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_Balance_Func_Open.TabIndex = 120;
            this.button_Balance_Func_Open.Text = "Open";
            this.button_Balance_Func_Open.UseVisualStyleBackColor = true;
            this.button_Balance_Func_Open.Click += new EventHandler(this.button_Balance_Func_Open_Click);
            this.button_Cool_Func_Close.Location = new Point(0x7d, 0xaf);
            this.button_Cool_Func_Close.Name = "button_Cool_Func_Close";
            this.button_Cool_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_Cool_Func_Close.TabIndex = 0x77;
            this.button_Cool_Func_Close.Text = "Close";
            this.button_Cool_Func_Close.UseVisualStyleBackColor = true;
            this.button_Cool_Func_Close.Click += new EventHandler(this.button_Cool_Func_Close_Click);
            this.label159.AutoSize = true;
            this.label159.Location = new Point(7, 180);
            this.label159.Name = "label159";
            this.label159.Size = new Size(0x3b, 12);
            this.label159.TabIndex = 0x76;
            this.label159.Text = "冷凝功能:";
            this.button_Cool_Func_Open.Location = new Point(0x4a, 0xaf);
            this.button_Cool_Func_Open.Name = "button_Cool_Func_Open";
            this.button_Cool_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_Cool_Func_Open.TabIndex = 0x75;
            this.button_Cool_Func_Open.Text = "Open";
            this.button_Cool_Func_Open.UseVisualStyleBackColor = true;
            this.button_Cool_Func_Open.Click += new EventHandler(this.button_Cool_Func_Open_Click);
            this.button_Heated_Func_Close.Location = new Point(0x7d, 0x91);
            this.button_Heated_Func_Close.Name = "button_Heated_Func_Close";
            this.button_Heated_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_Heated_Func_Close.TabIndex = 0x74;
            this.button_Heated_Func_Close.Text = "Close";
            this.button_Heated_Func_Close.UseVisualStyleBackColor = true;
            this.button_Heated_Func_Close.Click += new EventHandler(this.button_Heated_Func_Close_Click);
            this.button_SocFixed_Func_Close.Location = new Point(0x7d, 0x73);
            this.button_SocFixed_Func_Close.Name = "button_SocFixed_Func_Close";
            this.button_SocFixed_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_SocFixed_Func_Close.TabIndex = 0x73;
            this.button_SocFixed_Func_Close.Text = "Close";
            this.button_SocFixed_Func_Close.UseVisualStyleBackColor = true;
            this.button_SocFixed_Func_Close.Click += new EventHandler(this.button_SocFixed_Func_Close_Click);
            this.label156.AutoSize = true;
            this.label156.Location = new Point(7, 120);
            this.label156.Name = "label156";
            this.label156.Size = new Size(0x35, 12);
            this.label156.TabIndex = 0x72;
            this.label156.Text = "SOC固定:";
            this.button_SocFixed_Func_Open.Location = new Point(0x4a, 0x73);
            this.button_SocFixed_Func_Open.Name = "button_SocFixed_Func_Open";
            this.button_SocFixed_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_SocFixed_Func_Open.TabIndex = 0x71;
            this.button_SocFixed_Func_Open.Text = "Open";
            this.button_SocFixed_Func_Open.UseVisualStyleBackColor = true;
            this.button_SocFixed_Func_Open.Click += new EventHandler(this.button_SocFixed_Func_Open_Click);
            this.button_Relay_Func_Close.Location = new Point(0x7d, 0x55);
            this.button_Relay_Func_Close.Name = "button_Relay_Func_Close";
            this.button_Relay_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_Relay_Func_Close.TabIndex = 0x70;
            this.button_Relay_Func_Close.Text = "Close";
            this.button_Relay_Func_Close.UseVisualStyleBackColor = true;
            this.button_Relay_Func_Close.Click += new EventHandler(this.button_Relay_Func_Close_Click);
            this.label153.AutoSize = true;
            this.label153.Location = new Point(7, 90);
            this.label153.Name = "label153";
            this.label153.Size = new Size(0x2f, 12);
            this.label153.TabIndex = 0x6f;
            this.label153.Text = "继电器:";
            this.button_Relay_Func_Open.Location = new Point(0x4a, 0x55);
            this.button_Relay_Func_Open.Name = "button_Relay_Func_Open";
            this.button_Relay_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_Relay_Func_Open.TabIndex = 110;
            this.button_Relay_Func_Open.Text = "Open";
            this.button_Relay_Func_Open.UseVisualStyleBackColor = true;
            this.button_Relay_Func_Open.Click += new EventHandler(this.button_Relay_Func_Open_Click);
            this.button_MosRelay_Func_Close.Location = new Point(0x7d, 0x37);
            this.button_MosRelay_Func_Close.Name = "button_MosRelay_Func_Close";
            this.button_MosRelay_Func_Close.Size = new Size(0x2c, 0x17);
            this.button_MosRelay_Func_Close.TabIndex = 0x6d;
            this.button_MosRelay_Func_Close.Text = "Close";
            this.button_MosRelay_Func_Close.UseVisualStyleBackColor = true;
            this.button_MosRelay_Func_Close.Click += new EventHandler(this.button_MosRelay_Func_Close_Click);
            this.label_CtrlAFEShut.AutoSize = true;
            this.label_CtrlAFEShut.Location = new Point(8, 270);
            this.label_CtrlAFEShut.Name = "label_CtrlAFEShut";
            this.label_CtrlAFEShut.Size = new Size(0x3b, 12);
            this.label_CtrlAFEShut.TabIndex = 0x6c;
            this.label_CtrlAFEShut.Text = "AFE2功能:";
            this.label_CtrlAFEWake.AutoSize = true;
            this.label_CtrlAFEWake.Location = new Point(8, 240);
            this.label_CtrlAFEWake.Name = "label_CtrlAFEWake";
            this.label_CtrlAFEWake.Size = new Size(0x3b, 12);
            this.label_CtrlAFEWake.TabIndex = 0x6a;
            this.label_CtrlAFEWake.Text = "AFE1功能:";
            this.label_CtrlBalance.AutoSize = true;
            this.label_CtrlBalance.Location = new Point(8, 210);
            this.label_CtrlBalance.Name = "label_CtrlBalance";
            this.label_CtrlBalance.Size = new Size(0x3b, 12);
            this.label_CtrlBalance.TabIndex = 0x69;
            this.label_CtrlBalance.Text = "均衡功能:";
            this.label_CtrlHeat.AutoSize = true;
            this.label_CtrlHeat.Location = new Point(7, 150);
            this.label_CtrlHeat.Name = "label_CtrlHeat";
            this.label_CtrlHeat.Size = new Size(0x3b, 12);
            this.label_CtrlHeat.TabIndex = 0x68;
            this.label_CtrlHeat.Text = "加热功能:";
            this.button_Heated_Func_Open.Location = new Point(0x4a, 0x91);
            this.button_Heated_Func_Open.Name = "button_Heated_Func_Open";
            this.button_Heated_Func_Open.Size = new Size(0x2d, 0x17);
            this.button_Heated_Func_Open.TabIndex = 0x67;
            this.button_Heated_Func_Open.Text = "Open";
            this.button_Heated_Func_Open.UseVisualStyleBackColor = true;
            this.button_Heated_Func_Open.Click += new EventHandler(this.button_Heated_Func_Open_Click);
            this.label_CtrlStartup.AutoSize = true;
            this.label_CtrlStartup.Location = new Point(7, 60);
            this.label_CtrlStartup.Name = "label_CtrlStartup";
            this.label_CtrlStartup.Size = new Size(0x41, 12);
            this.label_CtrlStartup.TabIndex = 0x66;
            this.label_CtrlStartup.Text = "MOS_Relay:";
            this.tabPage6.Controls.Add(this.toolStrip_SwitchCtrl);
            this.tabPage6.Controls.Add(this.groupBox34);
            this.tabPage6.Location = new Point(4, 0x16);
            this.tabPage6.Name = "tabPage6";
            this.tabPage6.Size = new Size(0x521, 0x2df);
            this.tabPage6.TabIndex = 5;
            this.tabPage6.Text = "SwitchCtrl";
            this.tabPage6.UseVisualStyleBackColor = true;
            this.toolStrip_SwitchCtrl.BackColor = Color.Gainsboro;
            this.toolStrip_SwitchCtrl.Dock = DockStyle.Bottom;
            this.toolStrip_SwitchCtrl.ImageScalingSize = new Size(20, 20);
            ToolStripItem[] itemArray2 = new ToolStripItem[] { this.toolStripLabel_RxCnt6, this.toolStripLabel3, this.toolStripLabel_TxCnt6 };
            this.toolStrip_SwitchCtrl.Items.AddRange(itemArray2);
            this.toolStrip_SwitchCtrl.Location = new Point(0, 710);
            this.toolStrip_SwitchCtrl.Name = "toolStrip_SwitchCtrl";
            this.toolStrip_SwitchCtrl.Size = new Size(0x521, 0x19);
            this.toolStrip_SwitchCtrl.TabIndex = 0x68;
            this.toolStrip_SwitchCtrl.Text = "接收次数:";
            this.toolStripLabel_RxCnt6.Name = "toolStripLabel_RxCnt6";
            this.toolStripLabel_RxCnt6.Size = new Size(15, 0x16);
            this.toolStripLabel_RxCnt6.Text = "0";
            this.toolStripLabel3.Name = "toolStripLabel3";
            this.toolStripLabel3.Size = new Size(0x30, 0x16);
            this.toolStripLabel3.Text = "          ";
            this.toolStripLabel_TxCnt6.Name = "toolStripLabel_TxCnt6";
            this.toolStripLabel_TxCnt6.Size = new Size(15, 0x16);
            this.toolStripLabel_TxCnt6.Text = "0";
            this.groupBox34.Controls.Add(this.button_Low_Switch30);
            this.groupBox34.Controls.Add(this.button_High_Switch30);
            this.groupBox34.Controls.Add(this.button_Low_Switch32);
            this.groupBox34.Controls.Add(this.button_High_Switch32);
            this.groupBox34.Controls.Add(this.button_Low_Switch31);
            this.groupBox34.Controls.Add(this.button_High_Switch31);
            this.groupBox34.Controls.Add(this.button_Low_Switch29);
            this.groupBox34.Controls.Add(this.button_High_Switch29);
            this.groupBox34.Controls.Add(this.button_Low_Switch28);
            this.groupBox34.Controls.Add(this.button_High_Switch28);
            this.groupBox34.Controls.Add(this.button_Low_Switch27);
            this.groupBox34.Controls.Add(this.button_High_Switch27);
            this.groupBox34.Controls.Add(this.button_Low_Switch24);
            this.groupBox34.Controls.Add(this.button_High_Switch24);
            this.groupBox34.Controls.Add(this.button_Low_Switch26);
            this.groupBox34.Controls.Add(this.button_High_Switch26);
            this.groupBox34.Controls.Add(this.button_Low_Switch25);
            this.groupBox34.Controls.Add(this.button_High_Switch25);
            this.groupBox34.Controls.Add(this.button_Low_Switch23);
            this.groupBox34.Controls.Add(this.button_High_Switch23);
            this.groupBox34.Controls.Add(this.button_Low_Switch22);
            this.groupBox34.Controls.Add(this.button_High_Switch22);
            this.groupBox34.Controls.Add(this.button_Low_Switch21);
            this.groupBox34.Controls.Add(this.button_High_Switch21);
            this.groupBox34.Controls.Add(this.button_Low_Switch20);
            this.groupBox34.Controls.Add(this.button_Low_Switch19);
            this.groupBox34.Controls.Add(this.button_High_Switch19);
            this.groupBox34.Controls.Add(this.button_Low_Switch18);
            this.groupBox34.Controls.Add(this.button_High_Switch18);
            this.groupBox34.Controls.Add(this.button_Low_Switch17);
            this.groupBox34.Controls.Add(this.button_High_Switch20);
            this.groupBox34.Controls.Add(this.button_High_Switch17);
            this.groupBox34.Controls.Add(this.label_Switch32);
            this.groupBox34.Controls.Add(this.label_Switch31);
            this.groupBox34.Controls.Add(this.label_Switch29);
            this.groupBox34.Controls.Add(this.label_Switch28);
            this.groupBox34.Controls.Add(this.label_Switch30);
            this.groupBox34.Controls.Add(this.label_Switch27);
            this.groupBox34.Controls.Add(this.label_Switch26);
            this.groupBox34.Controls.Add(this.label_Switch25);
            this.groupBox34.Controls.Add(this.label_Switch23);
            this.groupBox34.Controls.Add(this.label_Switch22);
            this.groupBox34.Controls.Add(this.label_Switch24);
            this.groupBox34.Controls.Add(this.label_Switch21);
            this.groupBox34.Controls.Add(this.label_Switch20);
            this.groupBox34.Controls.Add(this.label_Switch18);
            this.groupBox34.Controls.Add(this.label_Switch17);
            this.groupBox34.Controls.Add(this.label_Switch19);
            this.groupBox34.Controls.Add(this.label426);
            this.groupBox34.Controls.Add(this.label427);
            this.groupBox34.Controls.Add(this.label428);
            this.groupBox34.Controls.Add(this.label429);
            this.groupBox34.Controls.Add(this.label430);
            this.groupBox34.Controls.Add(this.label431);
            this.groupBox34.Controls.Add(this.label438);
            this.groupBox34.Controls.Add(this.label440);
            this.groupBox34.Controls.Add(this.label442);
            this.groupBox34.Controls.Add(this.label445);
            this.groupBox34.Controls.Add(this.label446);
            this.groupBox34.Controls.Add(this.label447);
            this.groupBox34.Controls.Add(this.label448);
            this.groupBox34.Controls.Add(this.label449);
            this.groupBox34.Controls.Add(this.label450);
            this.groupBox34.Controls.Add(this.label451);
            this.groupBox34.Controls.Add(this.label452);
            this.groupBox34.Controls.Add(this.label453);
            this.groupBox34.Controls.Add(this.label454);
            this.groupBox34.Controls.Add(this.label_Switch16);
            this.groupBox34.Controls.Add(this.label_Switch15);
            this.groupBox34.Controls.Add(this.label_Switch13);
            this.groupBox34.Controls.Add(this.label_Switch12);
            this.groupBox34.Controls.Add(this.label_Switch14);
            this.groupBox34.Controls.Add(this.label_Switch11);
            this.groupBox34.Controls.Add(this.button_Low_Switch14);
            this.groupBox34.Controls.Add(this.button_High_Switch14);
            this.groupBox34.Controls.Add(this.button_Low_Switch16);
            this.groupBox34.Controls.Add(this.button_High_Switch16);
            this.groupBox34.Controls.Add(this.button_Low_Switch15);
            this.groupBox34.Controls.Add(this.button_High_Switch15);
            this.groupBox34.Controls.Add(this.label414);
            this.groupBox34.Controls.Add(this.label415);
            this.groupBox34.Controls.Add(this.button_Low_Switch13);
            this.groupBox34.Controls.Add(this.button_High_Switch13);
            this.groupBox34.Controls.Add(this.button_Low_Switch12);
            this.groupBox34.Controls.Add(this.button_High_Switch12);
            this.groupBox34.Controls.Add(this.button_Low_Switch11);
            this.groupBox34.Controls.Add(this.label416);
            this.groupBox34.Controls.Add(this.button_High_Switch11);
            this.groupBox34.Controls.Add(this.label417);
            this.groupBox34.Controls.Add(this.label418);
            this.groupBox34.Controls.Add(this.label419);
            this.groupBox34.Controls.Add(this.label_Switch10);
            this.groupBox34.Controls.Add(this.label_Switch9);
            this.groupBox34.Controls.Add(this.label_Switch7);
            this.groupBox34.Controls.Add(this.label_Switch6);
            this.groupBox34.Controls.Add(this.label_Switch8);
            this.groupBox34.Controls.Add(this.label_Switch5);
            this.groupBox34.Controls.Add(this.label288);
            this.groupBox34.Controls.Add(this.label_Switch4);
            this.groupBox34.Controls.Add(this.label295);
            this.groupBox34.Controls.Add(this.label_Switch2);
            this.groupBox34.Controls.Add(this.label298);
            this.groupBox34.Controls.Add(this.label_Switch1);
            this.groupBox34.Controls.Add(this.label_Switch3);
            this.groupBox34.Controls.Add(this.button_Low_Switch8);
            this.groupBox34.Controls.Add(this.button_High_Switch8);
            this.groupBox34.Controls.Add(this.button_Low_Switch10);
            this.groupBox34.Controls.Add(this.button_High_Switch10);
            this.groupBox34.Controls.Add(this.button_Low_Switch9);
            this.groupBox34.Controls.Add(this.button_High_Switch9);
            this.groupBox34.Controls.Add(this.label305);
            this.groupBox34.Controls.Add(this.label306);
            this.groupBox34.Controls.Add(this.button_Low_Switch7);
            this.groupBox34.Controls.Add(this.button_High_Switch7);
            this.groupBox34.Controls.Add(this.button_Low_Switch6);
            this.groupBox34.Controls.Add(this.button_High_Switch6);
            this.groupBox34.Controls.Add(this.button_Low_Switch5);
            this.groupBox34.Controls.Add(this.label307);
            this.groupBox34.Controls.Add(this.button_High_Switch5);
            this.groupBox34.Controls.Add(this.button_Low_Switch4);
            this.groupBox34.Controls.Add(this.button_Low_Switch3);
            this.groupBox34.Controls.Add(this.label308);
            this.groupBox34.Controls.Add(this.button_High_Switch3);
            this.groupBox34.Controls.Add(this.button_Low_Switch2);
            this.groupBox34.Controls.Add(this.label310);
            this.groupBox34.Controls.Add(this.button_High_Switch2);
            this.groupBox34.Controls.Add(this.button_Low_Switch1);
            this.groupBox34.Controls.Add(this.label312);
            this.groupBox34.Controls.Add(this.label314);
            this.groupBox34.Controls.Add(this.label316);
            this.groupBox34.Controls.Add(this.label318);
            this.groupBox34.Controls.Add(this.button_High_Switch4);
            this.groupBox34.Controls.Add(this.label320);
            this.groupBox34.Controls.Add(this.button_High_Switch1);
            this.groupBox34.Location = new Point(8, 10);
            this.groupBox34.Name = "groupBox34";
            this.groupBox34.Size = new Size(500, 0x21d);
            this.groupBox34.TabIndex = 1;
            this.groupBox34.TabStop = false;
            this.groupBox34.Text = "SwitchControl";
            this.button_Low_Switch30.Location = new Point(0x169, 0x1bc);
            this.button_Low_Switch30.Name = "button_Low_Switch30";
            this.button_Low_Switch30.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch30.TabIndex = 0x113;
            this.button_Low_Switch30.Text = "Low";
            this.button_Low_Switch30.UseVisualStyleBackColor = true;
            this.button_Low_Switch30.Click += new EventHandler(this.button_Low_Switch30_Click);
            this.button_High_Switch30.Location = new Point(310, 0x1bc);
            this.button_High_Switch30.Name = "button_High_Switch30";
            this.button_High_Switch30.Size = new Size(0x2d, 0x17);
            this.button_High_Switch30.TabIndex = 0x112;
            this.button_High_Switch30.Text = "High";
            this.button_High_Switch30.UseVisualStyleBackColor = true;
            this.button_High_Switch30.Click += new EventHandler(this.button_High_Switch30_Click);
            this.button_Low_Switch32.Location = new Point(0x169, 0x1f8);
            this.button_Low_Switch32.Name = "button_Low_Switch32";
            this.button_Low_Switch32.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch32.TabIndex = 0x111;
            this.button_Low_Switch32.Text = "Low";
            this.button_Low_Switch32.UseVisualStyleBackColor = true;
            this.button_Low_Switch32.Click += new EventHandler(this.button_Low_Switch32_Click);
            this.button_High_Switch32.Location = new Point(310, 0x1f8);
            this.button_High_Switch32.Name = "button_High_Switch32";
            this.button_High_Switch32.Size = new Size(0x2d, 0x17);
            this.button_High_Switch32.TabIndex = 0x110;
            this.button_High_Switch32.Text = "High";
            this.button_High_Switch32.UseVisualStyleBackColor = true;
            this.button_High_Switch32.Click += new EventHandler(this.button_High_Switch32_Click);
            this.button_Low_Switch31.Location = new Point(0x16a, 0x1da);
            this.button_Low_Switch31.Name = "button_Low_Switch31";
            this.button_Low_Switch31.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch31.TabIndex = 0x10f;
            this.button_Low_Switch31.Text = "Low";
            this.button_Low_Switch31.UseVisualStyleBackColor = true;
            this.button_Low_Switch31.Click += new EventHandler(this.button_Low_Switch31_Click);
            this.button_High_Switch31.Location = new Point(310, 0x1da);
            this.button_High_Switch31.Name = "button_High_Switch31";
            this.button_High_Switch31.Size = new Size(0x2d, 0x17);
            this.button_High_Switch31.TabIndex = 270;
            this.button_High_Switch31.Text = "High";
            this.button_High_Switch31.UseVisualStyleBackColor = true;
            this.button_High_Switch31.Click += new EventHandler(this.button_High_Switch31_Click);
            this.button_Low_Switch29.Location = new Point(0x16a, 0x19e);
            this.button_Low_Switch29.Name = "button_Low_Switch29";
            this.button_Low_Switch29.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch29.TabIndex = 0x10d;
            this.button_Low_Switch29.Text = "Low";
            this.button_Low_Switch29.UseVisualStyleBackColor = true;
            this.button_Low_Switch29.Click += new EventHandler(this.button_Low_Switch29_Click);
            this.button_High_Switch29.Location = new Point(310, 0x19e);
            this.button_High_Switch29.Name = "button_High_Switch29";
            this.button_High_Switch29.Size = new Size(0x2d, 0x17);
            this.button_High_Switch29.TabIndex = 0x10c;
            this.button_High_Switch29.Text = "High";
            this.button_High_Switch29.UseVisualStyleBackColor = true;
            this.button_High_Switch29.Click += new EventHandler(this.button_High_Switch29_Click);
            this.button_Low_Switch28.Location = new Point(0x169, 0x180);
            this.button_Low_Switch28.Name = "button_Low_Switch28";
            this.button_Low_Switch28.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch28.TabIndex = 0x10b;
            this.button_Low_Switch28.Text = "Low";
            this.button_Low_Switch28.UseVisualStyleBackColor = true;
            this.button_Low_Switch28.Click += new EventHandler(this.button_Low_Switch28_Click);
            this.button_High_Switch28.Location = new Point(310, 0x180);
            this.button_High_Switch28.Name = "button_High_Switch28";
            this.button_High_Switch28.Size = new Size(0x2d, 0x17);
            this.button_High_Switch28.TabIndex = 0x10a;
            this.button_High_Switch28.Text = "High";
            this.button_High_Switch28.UseVisualStyleBackColor = true;
            this.button_High_Switch28.Click += new EventHandler(this.button_High_Switch28_Click);
            this.button_Low_Switch27.Location = new Point(0x169, 0x162);
            this.button_Low_Switch27.Name = "button_Low_Switch27";
            this.button_Low_Switch27.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch27.TabIndex = 0x109;
            this.button_Low_Switch27.Text = "Low";
            this.button_Low_Switch27.UseVisualStyleBackColor = true;
            this.button_Low_Switch27.Click += new EventHandler(this.button_Low_Switch27_Click);
            this.button_High_Switch27.Location = new Point(310, 0x162);
            this.button_High_Switch27.Name = "button_High_Switch27";
            this.button_High_Switch27.Size = new Size(0x2d, 0x17);
            this.button_High_Switch27.TabIndex = 0x108;
            this.button_High_Switch27.Text = "High";
            this.button_High_Switch27.UseVisualStyleBackColor = true;
            this.button_High_Switch27.Click += new EventHandler(this.button_High_Switch27_Click);
            this.button_Low_Switch24.Location = new Point(0x169, 0x109);
            this.button_Low_Switch24.Name = "button_Low_Switch24";
            this.button_Low_Switch24.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch24.TabIndex = 0x107;
            this.button_Low_Switch24.Text = "Low";
            this.button_Low_Switch24.UseVisualStyleBackColor = true;
            this.button_Low_Switch24.Click += new EventHandler(this.button_Low_Switch24_Click);
            this.button_High_Switch24.Location = new Point(310, 0x109);
            this.button_High_Switch24.Name = "button_High_Switch24";
            this.button_High_Switch24.Size = new Size(0x2d, 0x17);
            this.button_High_Switch24.TabIndex = 0x106;
            this.button_High_Switch24.Text = "High";
            this.button_High_Switch24.UseVisualStyleBackColor = true;
            this.button_High_Switch24.Click += new EventHandler(this.button_High_Switch24_Click);
            this.button_Low_Switch26.Location = new Point(0x169, 0x145);
            this.button_Low_Switch26.Name = "button_Low_Switch26";
            this.button_Low_Switch26.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch26.TabIndex = 0x105;
            this.button_Low_Switch26.Text = "Low";
            this.button_Low_Switch26.UseVisualStyleBackColor = true;
            this.button_Low_Switch26.Click += new EventHandler(this.button_Low_Switch26_Click);
            this.button_High_Switch26.Location = new Point(310, 0x145);
            this.button_High_Switch26.Name = "button_High_Switch26";
            this.button_High_Switch26.Size = new Size(0x2d, 0x17);
            this.button_High_Switch26.TabIndex = 260;
            this.button_High_Switch26.Text = "High";
            this.button_High_Switch26.UseVisualStyleBackColor = true;
            this.button_High_Switch26.Click += new EventHandler(this.button_High_Switch26_Click);
            this.button_Low_Switch25.Location = new Point(0x16a, 0x127);
            this.button_Low_Switch25.Name = "button_Low_Switch25";
            this.button_Low_Switch25.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch25.TabIndex = 0x103;
            this.button_Low_Switch25.Text = "Low";
            this.button_Low_Switch25.UseVisualStyleBackColor = true;
            this.button_Low_Switch25.Click += new EventHandler(this.button_Low_Switch25_Click);
            this.button_High_Switch25.Location = new Point(310, 0x127);
            this.button_High_Switch25.Name = "button_High_Switch25";
            this.button_High_Switch25.Size = new Size(0x2d, 0x17);
            this.button_High_Switch25.TabIndex = 0x102;
            this.button_High_Switch25.Text = "High";
            this.button_High_Switch25.UseVisualStyleBackColor = true;
            this.button_High_Switch25.Click += new EventHandler(this.button_High_Switch25_Click);
            this.button_Low_Switch23.Location = new Point(0x16a, 0xeb);
            this.button_Low_Switch23.Name = "button_Low_Switch23";
            this.button_Low_Switch23.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch23.TabIndex = 0x101;
            this.button_Low_Switch23.Text = "Low";
            this.button_Low_Switch23.UseVisualStyleBackColor = true;
            this.button_Low_Switch23.Click += new EventHandler(this.button_Low_Switch23_Click);
            this.button_High_Switch23.Location = new Point(310, 0xeb);
            this.button_High_Switch23.Name = "button_High_Switch23";
            this.button_High_Switch23.Size = new Size(0x2d, 0x17);
            this.button_High_Switch23.TabIndex = 0x100;
            this.button_High_Switch23.Text = "High";
            this.button_High_Switch23.UseVisualStyleBackColor = true;
            this.button_High_Switch23.Click += new EventHandler(this.button_High_Switch23_Click);
            this.button_Low_Switch22.Location = new Point(0x169, 0xcd);
            this.button_Low_Switch22.Name = "button_Low_Switch22";
            this.button_Low_Switch22.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch22.TabIndex = 0xff;
            this.button_Low_Switch22.Text = "Low";
            this.button_Low_Switch22.UseVisualStyleBackColor = true;
            this.button_Low_Switch22.Click += new EventHandler(this.button_Low_Switch22_Click);
            this.button_High_Switch22.Location = new Point(310, 0xcd);
            this.button_High_Switch22.Name = "button_High_Switch22";
            this.button_High_Switch22.Size = new Size(0x2d, 0x17);
            this.button_High_Switch22.TabIndex = 0xfe;
            this.button_High_Switch22.Text = "High";
            this.button_High_Switch22.UseVisualStyleBackColor = true;
            this.button_High_Switch22.Click += new EventHandler(this.button_High_Switch22_Click);
            this.button_Low_Switch21.Location = new Point(0x169, 0xaf);
            this.button_Low_Switch21.Name = "button_Low_Switch21";
            this.button_Low_Switch21.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch21.TabIndex = 0xfd;
            this.button_Low_Switch21.Text = "Low";
            this.button_Low_Switch21.UseVisualStyleBackColor = true;
            this.button_Low_Switch21.Click += new EventHandler(this.button_Low_Switch21_Click);
            this.button_High_Switch21.Location = new Point(310, 0xaf);
            this.button_High_Switch21.Name = "button_High_Switch21";
            this.button_High_Switch21.Size = new Size(0x2d, 0x17);
            this.button_High_Switch21.TabIndex = 0xfc;
            this.button_High_Switch21.Text = "High";
            this.button_High_Switch21.UseVisualStyleBackColor = true;
            this.button_High_Switch21.Click += new EventHandler(this.button_High_Switch21_Click);
            this.button_Low_Switch20.Location = new Point(0x169, 0x91);
            this.button_Low_Switch20.Name = "button_Low_Switch20";
            this.button_Low_Switch20.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch20.TabIndex = 0xfb;
            this.button_Low_Switch20.Text = "Low";
            this.button_Low_Switch20.UseVisualStyleBackColor = true;
            this.button_Low_Switch20.Click += new EventHandler(this.button_Low_Switch20_Click);
            this.button_Low_Switch19.Location = new Point(0x169, 0x73);
            this.button_Low_Switch19.Name = "button_Low_Switch19";
            this.button_Low_Switch19.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch19.TabIndex = 250;
            this.button_Low_Switch19.Text = "Low";
            this.button_Low_Switch19.UseVisualStyleBackColor = true;
            this.button_Low_Switch19.Click += new EventHandler(this.button_Low_Switch19_Click);
            this.button_High_Switch19.Location = new Point(310, 0x73);
            this.button_High_Switch19.Name = "button_High_Switch19";
            this.button_High_Switch19.Size = new Size(0x2d, 0x17);
            this.button_High_Switch19.TabIndex = 0xf9;
            this.button_High_Switch19.Text = "High";
            this.button_High_Switch19.UseVisualStyleBackColor = true;
            this.button_High_Switch19.Click += new EventHandler(this.button_High_Switch19_Click);
            this.button_Low_Switch18.Location = new Point(0x169, 0x55);
            this.button_Low_Switch18.Name = "button_Low_Switch18";
            this.button_Low_Switch18.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch18.TabIndex = 0xf8;
            this.button_Low_Switch18.Text = "Low";
            this.button_Low_Switch18.UseVisualStyleBackColor = true;
            this.button_Low_Switch18.Click += new EventHandler(this.button_Low_Switch18_Click);
            this.button_High_Switch18.Location = new Point(310, 0x55);
            this.button_High_Switch18.Name = "button_High_Switch18";
            this.button_High_Switch18.Size = new Size(0x2d, 0x17);
            this.button_High_Switch18.TabIndex = 0xf7;
            this.button_High_Switch18.Text = "High";
            this.button_High_Switch18.UseVisualStyleBackColor = true;
            this.button_High_Switch18.Click += new EventHandler(this.button_High_Switch18_Click);
            this.button_Low_Switch17.Location = new Point(0x169, 0x37);
            this.button_Low_Switch17.Name = "button_Low_Switch17";
            this.button_Low_Switch17.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch17.TabIndex = 0xf6;
            this.button_Low_Switch17.Text = "Low";
            this.button_Low_Switch17.UseVisualStyleBackColor = true;
            this.button_Low_Switch17.Click += new EventHandler(this.button_Low_Switch17_Click);
            this.button_High_Switch20.Location = new Point(310, 0x91);
            this.button_High_Switch20.Name = "button_High_Switch20";
            this.button_High_Switch20.Size = new Size(0x2d, 0x17);
            this.button_High_Switch20.TabIndex = 0xf5;
            this.button_High_Switch20.Text = "High";
            this.button_High_Switch20.UseVisualStyleBackColor = true;
            this.button_High_Switch20.Click += new EventHandler(this.button_High_Switch20_Click);
            this.button_High_Switch17.Location = new Point(310, 0x37);
            this.button_High_Switch17.Name = "button_High_Switch17";
            this.button_High_Switch17.Size = new Size(0x2d, 0x17);
            this.button_High_Switch17.TabIndex = 0xf4;
            this.button_High_Switch17.Text = "High";
            this.button_High_Switch17.UseVisualStyleBackColor = true;
            this.button_High_Switch17.Click += new EventHandler(this.button_High_Switch17_Click);
            this.label_Switch32.AutoSize = true;
            this.label_Switch32.Location = new Point(0x1ac, 0x1fd);
            this.label_Switch32.Name = "label_Switch32";
            this.label_Switch32.Size = new Size(11, 12);
            this.label_Switch32.TabIndex = 0xf3;
            this.label_Switch32.Text = "0";
            this.label_Switch31.AutoSize = true;
            this.label_Switch31.Location = new Point(0x1ac, 0x1df);
            this.label_Switch31.Name = "label_Switch31";
            this.label_Switch31.Size = new Size(11, 12);
            this.label_Switch31.TabIndex = 0xf2;
            this.label_Switch31.Text = "0";
            this.label_Switch29.AutoSize = true;
            this.label_Switch29.Location = new Point(0x1ac, 0x1a3);
            this.label_Switch29.Name = "label_Switch29";
            this.label_Switch29.Size = new Size(11, 12);
            this.label_Switch29.TabIndex = 0xf1;
            this.label_Switch29.Text = "0";
            this.label_Switch28.AutoSize = true;
            this.label_Switch28.Location = new Point(0x1ac, 0x185);
            this.label_Switch28.Name = "label_Switch28";
            this.label_Switch28.Size = new Size(11, 12);
            this.label_Switch28.TabIndex = 240;
            this.label_Switch28.Text = "0";
            this.label_Switch30.AutoSize = true;
            this.label_Switch30.Location = new Point(0x1ac, 0x1c1);
            this.label_Switch30.Name = "label_Switch30";
            this.label_Switch30.Size = new Size(11, 12);
            this.label_Switch30.TabIndex = 0xef;
            this.label_Switch30.Text = "0";
            this.label_Switch27.AutoSize = true;
            this.label_Switch27.Location = new Point(0x1ac, 0x167);
            this.label_Switch27.Name = "label_Switch27";
            this.label_Switch27.Size = new Size(11, 12);
            this.label_Switch27.TabIndex = 0xee;
            this.label_Switch27.Text = "0";
            this.label_Switch26.AutoSize = true;
            this.label_Switch26.Location = new Point(0x1ac, 330);
            this.label_Switch26.Name = "label_Switch26";
            this.label_Switch26.Size = new Size(11, 12);
            this.label_Switch26.TabIndex = 0xed;
            this.label_Switch26.Text = "0";
            this.label_Switch25.AutoSize = true;
            this.label_Switch25.Location = new Point(0x1ac, 300);
            this.label_Switch25.Name = "label_Switch25";
            this.label_Switch25.Size = new Size(11, 12);
            this.label_Switch25.TabIndex = 0xec;
            this.label_Switch25.Text = "0";
            this.label_Switch23.AutoSize = true;
            this.label_Switch23.Location = new Point(0x1ac, 240);
            this.label_Switch23.Name = "label_Switch23";
            this.label_Switch23.Size = new Size(11, 12);
            this.label_Switch23.TabIndex = 0xeb;
            this.label_Switch23.Text = "0";
            this.label_Switch22.AutoSize = true;
            this.label_Switch22.Location = new Point(0x1ac, 210);
            this.label_Switch22.Name = "label_Switch22";
            this.label_Switch22.Size = new Size(11, 12);
            this.label_Switch22.TabIndex = 0xea;
            this.label_Switch22.Text = "0";
            this.label_Switch24.AutoSize = true;
            this.label_Switch24.Location = new Point(0x1ac, 270);
            this.label_Switch24.Name = "label_Switch24";
            this.label_Switch24.Size = new Size(11, 12);
            this.label_Switch24.TabIndex = 0xe9;
            this.label_Switch24.Text = "0";
            this.label_Switch21.AutoSize = true;
            this.label_Switch21.Location = new Point(0x1ac, 180);
            this.label_Switch21.Name = "label_Switch21";
            this.label_Switch21.Size = new Size(11, 12);
            this.label_Switch21.TabIndex = 0xe8;
            this.label_Switch21.Text = "0";
            this.label_Switch20.AutoSize = true;
            this.label_Switch20.Location = new Point(0x1ac, 150);
            this.label_Switch20.Name = "label_Switch20";
            this.label_Switch20.Size = new Size(11, 12);
            this.label_Switch20.TabIndex = 0xe7;
            this.label_Switch20.Text = "0";
            this.label_Switch18.AutoSize = true;
            this.label_Switch18.Location = new Point(0x1ac, 90);
            this.label_Switch18.Name = "label_Switch18";
            this.label_Switch18.Size = new Size(11, 12);
            this.label_Switch18.TabIndex = 230;
            this.label_Switch18.Text = "0";
            this.label_Switch17.AutoSize = true;
            this.label_Switch17.Location = new Point(0x1ac, 60);
            this.label_Switch17.Name = "label_Switch17";
            this.label_Switch17.Size = new Size(11, 12);
            this.label_Switch17.TabIndex = 0xe5;
            this.label_Switch17.Text = "0";
            this.label_Switch19.AutoSize = true;
            this.label_Switch19.Location = new Point(0x1ac, 120);
            this.label_Switch19.Name = "label_Switch19";
            this.label_Switch19.Size = new Size(11, 12);
            this.label_Switch19.TabIndex = 0xe4;
            this.label_Switch19.Text = "0";
            this.label426.AutoSize = true;
            this.label426.Location = new Point(0xf6, 0x1fd);
            this.label426.Name = "label426";
            this.label426.Size = new Size(0x3b, 12);
            this.label426.TabIndex = 220;
            this.label426.Text = "Switch32:";
            this.label427.AutoSize = true;
            this.label427.Location = new Point(0xf6, 0x1df);
            this.label427.Name = "label427";
            this.label427.Size = new Size(0x3b, 12);
            this.label427.TabIndex = 0xdb;
            this.label427.Text = "Switch31:";
            this.label428.AutoSize = true;
            this.label428.Location = new Point(0xf5, 0x167);
            this.label428.Name = "label428";
            this.label428.Size = new Size(0x3b, 12);
            this.label428.TabIndex = 0xd5;
            this.label428.Text = "Switch27:";
            this.label429.AutoSize = true;
            this.label429.Location = new Point(0xf6, 0x1c1);
            this.label429.Name = "label429";
            this.label429.Size = new Size(0x3b, 12);
            this.label429.TabIndex = 0xd3;
            this.label429.Text = "Switch30:";
            this.label430.AutoSize = true;
            this.label430.Location = new Point(0xf6, 0x1a3);
            this.label430.Name = "label430";
            this.label430.Size = new Size(0x3b, 12);
            this.label430.TabIndex = 210;
            this.label430.Text = "Switch29:";
            this.label431.AutoSize = true;
            this.label431.Location = new Point(0xf6, 0x185);
            this.label431.Name = "label431";
            this.label431.Size = new Size(0x3b, 12);
            this.label431.TabIndex = 0xd1;
            this.label431.Text = "Switch28:";
            this.label438.AutoSize = true;
            this.label438.Location = new Point(0x1a3, 30);
            this.label438.Name = "label438";
            this.label438.Size = new Size(0x23, 12);
            this.label438.TabIndex = 0xcb;
            this.label438.Text = "状态:";
            this.label440.AutoSize = true;
            this.label440.Location = new Point(0x152, 30);
            this.label440.Name = "label440";
            this.label440.Size = new Size(0x35, 12);
            this.label440.TabIndex = 0xca;
            this.label440.Text = "Control:";
            this.label442.AutoSize = true;
            this.label442.Location = new Point(0xf5, 30);
            this.label442.Name = "label442";
            this.label442.Size = new Size(0x23, 12);
            this.label442.TabIndex = 0xc9;
            this.label442.Text = "IO口:";
            this.label445.AutoSize = true;
            this.label445.Location = new Point(0xf6, 330);
            this.label445.Name = "label445";
            this.label445.Size = new Size(0x3b, 12);
            this.label445.TabIndex = 0xc1;
            this.label445.Text = "Switch26:";
            this.label446.AutoSize = true;
            this.label446.Location = new Point(0xf6, 300);
            this.label446.Name = "label446";
            this.label446.Size = new Size(0x3b, 12);
            this.label446.TabIndex = 190;
            this.label446.Text = "Switch25:";
            this.label447.AutoSize = true;
            this.label447.Location = new Point(0xf5, 180);
            this.label447.Name = "label447";
            this.label447.Size = new Size(0x3b, 12);
            this.label447.TabIndex = 0xb6;
            this.label447.Text = "Switch21:";
            this.label448.AutoSize = true;
            this.label448.Location = new Point(0xf5, 120);
            this.label448.Name = "label448";
            this.label448.Size = new Size(0x3b, 12);
            this.label448.TabIndex = 0xb2;
            this.label448.Text = "Switch19:";
            this.label449.AutoSize = true;
            this.label449.Location = new Point(0xf5, 90);
            this.label449.Name = "label449";
            this.label449.Size = new Size(0x3b, 12);
            this.label449.TabIndex = 0xaf;
            this.label449.Text = "Switch18:";
            this.label450.AutoSize = true;
            this.label450.Location = new Point(0xf6, 270);
            this.label450.Name = "label450";
            this.label450.Size = new Size(0x3b, 12);
            this.label450.TabIndex = 0xac;
            this.label450.Text = "Switch24:";
            this.label451.AutoSize = true;
            this.label451.Location = new Point(0xf6, 240);
            this.label451.Name = "label451";
            this.label451.Size = new Size(0x3b, 12);
            this.label451.TabIndex = 0xab;
            this.label451.Text = "Switch23:";
            this.label452.AutoSize = true;
            this.label452.Location = new Point(0xf6, 210);
            this.label452.Name = "label452";
            this.label452.Size = new Size(0x3b, 12);
            this.label452.TabIndex = 170;
            this.label452.Text = "Switch22:";
            this.label453.AutoSize = true;
            this.label453.Location = new Point(0xf5, 150);
            this.label453.Name = "label453";
            this.label453.Size = new Size(0x3b, 12);
            this.label453.TabIndex = 0xa9;
            this.label453.Text = "Switch20:";
            this.label454.AutoSize = true;
            this.label454.Location = new Point(0xf5, 60);
            this.label454.Name = "label454";
            this.label454.Size = new Size(0x3b, 12);
            this.label454.TabIndex = 0xa7;
            this.label454.Text = "Switch17:";
            this.label_Switch16.AutoSize = true;
            this.label_Switch16.Location = new Point(190, 0x1fd);
            this.label_Switch16.Name = "label_Switch16";
            this.label_Switch16.Size = new Size(11, 12);
            this.label_Switch16.TabIndex = 0xa5;
            this.label_Switch16.Text = "0";
            this.label_Switch15.AutoSize = true;
            this.label_Switch15.Location = new Point(190, 0x1df);
            this.label_Switch15.Name = "label_Switch15";
            this.label_Switch15.Size = new Size(11, 12);
            this.label_Switch15.TabIndex = 0xa4;
            this.label_Switch15.Text = "0";
            this.label_Switch13.AutoSize = true;
            this.label_Switch13.Location = new Point(190, 0x1a3);
            this.label_Switch13.Name = "label_Switch13";
            this.label_Switch13.Size = new Size(11, 12);
            this.label_Switch13.TabIndex = 0xa3;
            this.label_Switch13.Text = "0";
            this.label_Switch12.AutoSize = true;
            this.label_Switch12.Location = new Point(190, 0x185);
            this.label_Switch12.Name = "label_Switch12";
            this.label_Switch12.Size = new Size(11, 12);
            this.label_Switch12.TabIndex = 0xa2;
            this.label_Switch12.Text = "0";
            this.label_Switch14.AutoSize = true;
            this.label_Switch14.Location = new Point(190, 0x1c1);
            this.label_Switch14.Name = "label_Switch14";
            this.label_Switch14.Size = new Size(11, 12);
            this.label_Switch14.TabIndex = 0xa1;
            this.label_Switch14.Text = "0";
            this.label_Switch11.AutoSize = true;
            this.label_Switch11.Location = new Point(190, 0x167);
            this.label_Switch11.Name = "label_Switch11";
            this.label_Switch11.Size = new Size(11, 12);
            this.label_Switch11.TabIndex = 0x9b;
            this.label_Switch11.Text = "0";
            this.button_Low_Switch14.Location = new Point(0x7d, 0x1bc);
            this.button_Low_Switch14.Name = "button_Low_Switch14";
            this.button_Low_Switch14.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch14.TabIndex = 160;
            this.button_Low_Switch14.Text = "Low";
            this.button_Low_Switch14.UseVisualStyleBackColor = true;
            this.button_Low_Switch14.Click += new EventHandler(this.button_Low_Switch14_Click);
            this.button_High_Switch14.Location = new Point(0x4a, 0x1bc);
            this.button_High_Switch14.Name = "button_High_Switch14";
            this.button_High_Switch14.Size = new Size(0x2d, 0x17);
            this.button_High_Switch14.TabIndex = 0x9f;
            this.button_High_Switch14.Text = "High";
            this.button_High_Switch14.UseVisualStyleBackColor = true;
            this.button_High_Switch14.Click += new EventHandler(this.button_High_Switch14_Click);
            this.button_Low_Switch16.Location = new Point(0x7d, 0x1f8);
            this.button_Low_Switch16.Name = "button_Low_Switch16";
            this.button_Low_Switch16.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch16.TabIndex = 0x9e;
            this.button_Low_Switch16.Text = "Low";
            this.button_Low_Switch16.UseVisualStyleBackColor = true;
            this.button_Low_Switch16.Click += new EventHandler(this.button_Low_Switch16_Click);
            this.button_High_Switch16.Location = new Point(0x4a, 0x1f8);
            this.button_High_Switch16.Name = "button_High_Switch16";
            this.button_High_Switch16.Size = new Size(0x2d, 0x17);
            this.button_High_Switch16.TabIndex = 0x9d;
            this.button_High_Switch16.Text = "High";
            this.button_High_Switch16.UseVisualStyleBackColor = true;
            this.button_High_Switch16.Click += new EventHandler(this.button_High_Switch16_Click);
            this.button_Low_Switch15.Location = new Point(0x7e, 0x1da);
            this.button_Low_Switch15.Name = "button_Low_Switch15";
            this.button_Low_Switch15.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch15.TabIndex = 0x9c;
            this.button_Low_Switch15.Text = "Low";
            this.button_Low_Switch15.UseVisualStyleBackColor = true;
            this.button_Low_Switch15.Click += new EventHandler(this.button_Low_Switch15_Click);
            this.button_High_Switch15.Location = new Point(0x4a, 0x1da);
            this.button_High_Switch15.Name = "button_High_Switch15";
            this.button_High_Switch15.Size = new Size(0x2d, 0x17);
            this.button_High_Switch15.TabIndex = 0x9a;
            this.button_High_Switch15.Text = "High";
            this.button_High_Switch15.UseVisualStyleBackColor = true;
            this.button_High_Switch15.Click += new EventHandler(this.button_High_Switch15_Click);
            this.label414.AutoSize = true;
            this.label414.Location = new Point(8, 0x1fd);
            this.label414.Name = "label414";
            this.label414.Size = new Size(0x3b, 12);
            this.label414.TabIndex = 0x99;
            this.label414.Text = "Switch16:";
            this.label415.AutoSize = true;
            this.label415.Location = new Point(8, 0x1df);
            this.label415.Name = "label415";
            this.label415.Size = new Size(0x3b, 12);
            this.label415.TabIndex = 0x98;
            this.label415.Text = "Switch15:";
            this.button_Low_Switch13.Location = new Point(0x7e, 0x19e);
            this.button_Low_Switch13.Name = "button_Low_Switch13";
            this.button_Low_Switch13.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch13.TabIndex = 0x97;
            this.button_Low_Switch13.Text = "Low";
            this.button_Low_Switch13.UseVisualStyleBackColor = true;
            this.button_Low_Switch13.Click += new EventHandler(this.button_Low_Switch13_Click);
            this.button_High_Switch13.Location = new Point(0x4a, 0x19e);
            this.button_High_Switch13.Name = "button_High_Switch13";
            this.button_High_Switch13.Size = new Size(0x2d, 0x17);
            this.button_High_Switch13.TabIndex = 150;
            this.button_High_Switch13.Text = "High";
            this.button_High_Switch13.UseVisualStyleBackColor = true;
            this.button_High_Switch13.Click += new EventHandler(this.button_High_Switch13_Click);
            this.button_Low_Switch12.Location = new Point(0x7d, 0x180);
            this.button_Low_Switch12.Name = "button_Low_Switch12";
            this.button_Low_Switch12.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch12.TabIndex = 0x95;
            this.button_Low_Switch12.Text = "Low";
            this.button_Low_Switch12.UseVisualStyleBackColor = true;
            this.button_Low_Switch12.Click += new EventHandler(this.button_Low_Switch12_Click);
            this.button_High_Switch12.Location = new Point(0x4a, 0x180);
            this.button_High_Switch12.Name = "button_High_Switch12";
            this.button_High_Switch12.Size = new Size(0x2d, 0x17);
            this.button_High_Switch12.TabIndex = 0x94;
            this.button_High_Switch12.Text = "High";
            this.button_High_Switch12.UseVisualStyleBackColor = true;
            this.button_High_Switch12.Click += new EventHandler(this.button_High_Switch12_Click);
            this.button_Low_Switch11.Location = new Point(0x7d, 0x162);
            this.button_Low_Switch11.Name = "button_Low_Switch11";
            this.button_Low_Switch11.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch11.TabIndex = 0x93;
            this.button_Low_Switch11.Text = "Low";
            this.button_Low_Switch11.UseVisualStyleBackColor = true;
            this.button_Low_Switch11.Click += new EventHandler(this.button_Low_Switch11_Click);
            this.label416.AutoSize = true;
            this.label416.Location = new Point(7, 0x167);
            this.label416.Name = "label416";
            this.label416.Size = new Size(0x3b, 12);
            this.label416.TabIndex = 0x92;
            this.label416.Text = "Switch11:";
            this.button_High_Switch11.Location = new Point(0x4a, 0x162);
            this.button_High_Switch11.Name = "button_High_Switch11";
            this.button_High_Switch11.Size = new Size(0x2d, 0x17);
            this.button_High_Switch11.TabIndex = 0x91;
            this.button_High_Switch11.Text = "High";
            this.button_High_Switch11.UseVisualStyleBackColor = true;
            this.button_High_Switch11.Click += new EventHandler(this.button_High_Switch11_Click);
            this.label417.AutoSize = true;
            this.label417.Location = new Point(8, 0x1c1);
            this.label417.Name = "label417";
            this.label417.Size = new Size(0x3b, 12);
            this.label417.TabIndex = 0x90;
            this.label417.Text = "Switch14:";
            this.label418.AutoSize = true;
            this.label418.Location = new Point(8, 0x1a3);
            this.label418.Name = "label418";
            this.label418.Size = new Size(0x3b, 12);
            this.label418.TabIndex = 0x8f;
            this.label418.Text = "Switch13:";
            this.label419.AutoSize = true;
            this.label419.Location = new Point(8, 0x185);
            this.label419.Name = "label419";
            this.label419.Size = new Size(0x3b, 12);
            this.label419.TabIndex = 0x8e;
            this.label419.Text = "Switch12:";
            this.label_Switch10.AutoSize = true;
            this.label_Switch10.Location = new Point(190, 330);
            this.label_Switch10.Name = "label_Switch10";
            this.label_Switch10.Size = new Size(11, 12);
            this.label_Switch10.TabIndex = 0x8d;
            this.label_Switch10.Text = "0";
            this.label_Switch9.AutoSize = true;
            this.label_Switch9.Location = new Point(190, 300);
            this.label_Switch9.Name = "label_Switch9";
            this.label_Switch9.Size = new Size(11, 12);
            this.label_Switch9.TabIndex = 140;
            this.label_Switch9.Text = "0";
            this.label_Switch7.AutoSize = true;
            this.label_Switch7.Location = new Point(190, 240);
            this.label_Switch7.Name = "label_Switch7";
            this.label_Switch7.Size = new Size(11, 12);
            this.label_Switch7.TabIndex = 0x8b;
            this.label_Switch7.Text = "0";
            this.label_Switch6.AutoSize = true;
            this.label_Switch6.Location = new Point(190, 210);
            this.label_Switch6.Name = "label_Switch6";
            this.label_Switch6.Size = new Size(11, 12);
            this.label_Switch6.TabIndex = 0x8a;
            this.label_Switch6.Text = "0";
            this.label_Switch8.AutoSize = true;
            this.label_Switch8.Location = new Point(190, 270);
            this.label_Switch8.Name = "label_Switch8";
            this.label_Switch8.Size = new Size(11, 12);
            this.label_Switch8.TabIndex = 0x89;
            this.label_Switch8.Text = "0";
            this.label_Switch5.AutoSize = true;
            this.label_Switch5.Location = new Point(190, 180);
            this.label_Switch5.Name = "label_Switch5";
            this.label_Switch5.Size = new Size(11, 12);
            this.label_Switch5.TabIndex = 0x80;
            this.label_Switch5.Text = "0";
            this.label288.AutoSize = true;
            this.label288.Location = new Point(0xb5, 30);
            this.label288.Name = "label288";
            this.label288.Size = new Size(0x23, 12);
            this.label288.TabIndex = 0x88;
            this.label288.Text = "状态:";
            this.label_Switch4.AutoSize = true;
            this.label_Switch4.Location = new Point(190, 150);
            this.label_Switch4.Name = "label_Switch4";
            this.label_Switch4.Size = new Size(11, 12);
            this.label_Switch4.TabIndex = 0x7f;
            this.label_Switch4.Text = "0";
            this.label295.AutoSize = true;
            this.label295.Location = new Point(100, 30);
            this.label295.Name = "label295";
            this.label295.Size = new Size(0x35, 12);
            this.label295.TabIndex = 0x87;
            this.label295.Text = "Control:";
            this.label_Switch2.AutoSize = true;
            this.label_Switch2.Location = new Point(190, 90);
            this.label_Switch2.Name = "label_Switch2";
            this.label_Switch2.Size = new Size(11, 12);
            this.label_Switch2.TabIndex = 0x7e;
            this.label_Switch2.Text = "0";
            this.label298.AutoSize = true;
            this.label298.Location = new Point(7, 30);
            this.label298.Name = "label298";
            this.label298.Size = new Size(0x23, 12);
            this.label298.TabIndex = 0x86;
            this.label298.Text = "IO口:";
            this.label_Switch1.AutoSize = true;
            this.label_Switch1.Location = new Point(190, 60);
            this.label_Switch1.Name = "label_Switch1";
            this.label_Switch1.Size = new Size(11, 12);
            this.label_Switch1.TabIndex = 0x7d;
            this.label_Switch1.Text = "0";
            this.label_Switch3.AutoSize = true;
            this.label_Switch3.Location = new Point(190, 120);
            this.label_Switch3.Name = "label_Switch3";
            this.label_Switch3.Size = new Size(11, 12);
            this.label_Switch3.TabIndex = 0x7c;
            this.label_Switch3.Text = "0";
            this.button_Low_Switch8.Location = new Point(0x7d, 0x109);
            this.button_Low_Switch8.Name = "button_Low_Switch8";
            this.button_Low_Switch8.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch8.TabIndex = 0x85;
            this.button_Low_Switch8.Text = "Low";
            this.button_Low_Switch8.UseVisualStyleBackColor = true;
            this.button_Low_Switch8.Click += new EventHandler(this.button_Low_Switch8_Click);
            this.button_High_Switch8.Location = new Point(0x4a, 0x109);
            this.button_High_Switch8.Name = "button_High_Switch8";
            this.button_High_Switch8.Size = new Size(0x2d, 0x17);
            this.button_High_Switch8.TabIndex = 0x84;
            this.button_High_Switch8.Text = "High";
            this.button_High_Switch8.UseVisualStyleBackColor = true;
            this.button_High_Switch8.Click += new EventHandler(this.button_High_Switch8_Click);
            this.button_Low_Switch10.Location = new Point(0x7d, 0x145);
            this.button_Low_Switch10.Name = "button_Low_Switch10";
            this.button_Low_Switch10.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch10.TabIndex = 0x83;
            this.button_Low_Switch10.Text = "Low";
            this.button_Low_Switch10.UseVisualStyleBackColor = true;
            this.button_Low_Switch10.Click += new EventHandler(this.button_Low_Switch10_Click);
            this.button_High_Switch10.Location = new Point(0x4a, 0x145);
            this.button_High_Switch10.Name = "button_High_Switch10";
            this.button_High_Switch10.Size = new Size(0x2d, 0x17);
            this.button_High_Switch10.TabIndex = 130;
            this.button_High_Switch10.Text = "High";
            this.button_High_Switch10.UseVisualStyleBackColor = true;
            this.button_High_Switch10.Click += new EventHandler(this.button_High_Switch10_Click);
            this.button_Low_Switch9.Location = new Point(0x7e, 0x127);
            this.button_Low_Switch9.Name = "button_Low_Switch9";
            this.button_Low_Switch9.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch9.TabIndex = 0x81;
            this.button_Low_Switch9.Text = "Low";
            this.button_Low_Switch9.UseVisualStyleBackColor = true;
            this.button_Low_Switch9.Click += new EventHandler(this.button_Low_Switch9_Click);
            this.button_High_Switch9.Location = new Point(0x4a, 0x127);
            this.button_High_Switch9.Name = "button_High_Switch9";
            this.button_High_Switch9.Size = new Size(0x2d, 0x17);
            this.button_High_Switch9.TabIndex = 0x80;
            this.button_High_Switch9.Text = "High";
            this.button_High_Switch9.UseVisualStyleBackColor = true;
            this.button_High_Switch9.Click += new EventHandler(this.button_High_Switch9_Click);
            this.label305.AutoSize = true;
            this.label305.Location = new Point(8, 330);
            this.label305.Name = "label305";
            this.label305.Size = new Size(0x3b, 12);
            this.label305.TabIndex = 0x7f;
            this.label305.Text = "Switch10:";
            this.label306.AutoSize = true;
            this.label306.Location = new Point(8, 300);
            this.label306.Name = "label306";
            this.label306.Size = new Size(0x35, 12);
            this.label306.TabIndex = 0x7e;
            this.label306.Text = "Switch9:";
            this.button_Low_Switch7.Location = new Point(0x7e, 0xeb);
            this.button_Low_Switch7.Name = "button_Low_Switch7";
            this.button_Low_Switch7.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch7.TabIndex = 0x7b;
            this.button_Low_Switch7.Text = "Low";
            this.button_Low_Switch7.UseVisualStyleBackColor = true;
            this.button_Low_Switch7.Click += new EventHandler(this.button_Low_Switch7_Click);
            this.button_High_Switch7.Location = new Point(0x4a, 0xeb);
            this.button_High_Switch7.Name = "button_High_Switch7";
            this.button_High_Switch7.Size = new Size(0x2d, 0x17);
            this.button_High_Switch7.TabIndex = 0x7a;
            this.button_High_Switch7.Text = "High";
            this.button_High_Switch7.UseVisualStyleBackColor = true;
            this.button_High_Switch7.Click += new EventHandler(this.button_High_Switch7_Click);
            this.button_Low_Switch6.Location = new Point(0x7d, 0xcd);
            this.button_Low_Switch6.Name = "button_Low_Switch6";
            this.button_Low_Switch6.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch6.TabIndex = 0x79;
            this.button_Low_Switch6.Text = "Low";
            this.button_Low_Switch6.UseVisualStyleBackColor = true;
            this.button_Low_Switch6.Click += new EventHandler(this.button_Low_Switch6_Click);
            this.button_High_Switch6.Location = new Point(0x4a, 0xcd);
            this.button_High_Switch6.Name = "button_High_Switch6";
            this.button_High_Switch6.Size = new Size(0x2d, 0x17);
            this.button_High_Switch6.TabIndex = 120;
            this.button_High_Switch6.Text = "High";
            this.button_High_Switch6.UseVisualStyleBackColor = true;
            this.button_High_Switch6.Click += new EventHandler(this.button_High_Switch6_Click);
            this.button_Low_Switch5.Location = new Point(0x7d, 0xaf);
            this.button_Low_Switch5.Name = "button_Low_Switch5";
            this.button_Low_Switch5.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch5.TabIndex = 0x77;
            this.button_Low_Switch5.Text = "Low";
            this.button_Low_Switch5.UseVisualStyleBackColor = true;
            this.button_Low_Switch5.Click += new EventHandler(this.button_Low_Switch5_Click);
            this.label307.AutoSize = true;
            this.label307.Location = new Point(7, 180);
            this.label307.Name = "label307";
            this.label307.Size = new Size(0x35, 12);
            this.label307.TabIndex = 0x76;
            this.label307.Text = "Switch5:";
            this.button_High_Switch5.Location = new Point(0x4a, 0xaf);
            this.button_High_Switch5.Name = "button_High_Switch5";
            this.button_High_Switch5.Size = new Size(0x2d, 0x17);
            this.button_High_Switch5.TabIndex = 0x75;
            this.button_High_Switch5.Text = "High";
            this.button_High_Switch5.UseVisualStyleBackColor = true;
            this.button_High_Switch5.Click += new EventHandler(this.button_High_Switch5_Click);
            this.button_Low_Switch4.Location = new Point(0x7d, 0x91);
            this.button_Low_Switch4.Name = "button_Low_Switch4";
            this.button_Low_Switch4.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch4.TabIndex = 0x74;
            this.button_Low_Switch4.Text = "Low";
            this.button_Low_Switch4.UseVisualStyleBackColor = true;
            this.button_Low_Switch4.Click += new EventHandler(this.button_Low_Switch4_Click);
            this.button_Low_Switch3.Location = new Point(0x7d, 0x73);
            this.button_Low_Switch3.Name = "button_Low_Switch3";
            this.button_Low_Switch3.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch3.TabIndex = 0x73;
            this.button_Low_Switch3.Text = "Low";
            this.button_Low_Switch3.UseVisualStyleBackColor = true;
            this.button_Low_Switch3.Click += new EventHandler(this.button_Low_Switch3_Click);
            this.label308.AutoSize = true;
            this.label308.Location = new Point(7, 120);
            this.label308.Name = "label308";
            this.label308.Size = new Size(0x35, 12);
            this.label308.TabIndex = 0x72;
            this.label308.Text = "Switch3:";
            this.button_High_Switch3.Location = new Point(0x4a, 0x73);
            this.button_High_Switch3.Name = "button_High_Switch3";
            this.button_High_Switch3.Size = new Size(0x2d, 0x17);
            this.button_High_Switch3.TabIndex = 0x71;
            this.button_High_Switch3.Text = "High";
            this.button_High_Switch3.UseVisualStyleBackColor = true;
            this.button_High_Switch3.Click += new EventHandler(this.button_High_Switch3_Click);
            this.button_Low_Switch2.Location = new Point(0x7d, 0x55);
            this.button_Low_Switch2.Name = "button_Low_Switch2";
            this.button_Low_Switch2.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch2.TabIndex = 0x70;
            this.button_Low_Switch2.Text = "Low";
            this.button_Low_Switch2.UseVisualStyleBackColor = true;
            this.button_Low_Switch2.Click += new EventHandler(this.button_Low_Switch2_Click);
            this.label310.AutoSize = true;
            this.label310.Location = new Point(7, 90);
            this.label310.Name = "label310";
            this.label310.Size = new Size(0x35, 12);
            this.label310.TabIndex = 0x6f;
            this.label310.Text = "Switch2:";
            this.button_High_Switch2.Location = new Point(0x4a, 0x55);
            this.button_High_Switch2.Name = "button_High_Switch2";
            this.button_High_Switch2.Size = new Size(0x2d, 0x17);
            this.button_High_Switch2.TabIndex = 110;
            this.button_High_Switch2.Text = "High";
            this.button_High_Switch2.UseVisualStyleBackColor = true;
            this.button_High_Switch2.Click += new EventHandler(this.button_High_Switch2_Click);
            this.button_Low_Switch1.Location = new Point(0x7d, 0x37);
            this.button_Low_Switch1.Name = "button_Low_Switch1";
            this.button_Low_Switch1.Size = new Size(0x2c, 0x17);
            this.button_Low_Switch1.TabIndex = 0x6d;
            this.button_Low_Switch1.Text = "Low";
            this.button_Low_Switch1.UseVisualStyleBackColor = true;
            this.button_Low_Switch1.Click += new EventHandler(this.button_Low_Switch1_Click);
            this.label312.AutoSize = true;
            this.label312.Location = new Point(8, 270);
            this.label312.Name = "label312";
            this.label312.Size = new Size(0x35, 12);
            this.label312.TabIndex = 0x6c;
            this.label312.Text = "Switch8:";
            this.label314.AutoSize = true;
            this.label314.Location = new Point(8, 240);
            this.label314.Name = "label314";
            this.label314.Size = new Size(0x35, 12);
            this.label314.TabIndex = 0x6a;
            this.label314.Text = "Switch7:";
            this.label316.AutoSize = true;
            this.label316.Location = new Point(8, 210);
            this.label316.Name = "label316";
            this.label316.Size = new Size(0x35, 12);
            this.label316.TabIndex = 0x69;
            this.label316.Text = "Switch6:";
            this.label318.AutoSize = true;
            this.label318.Location = new Point(7, 150);
            this.label318.Name = "label318";
            this.label318.Size = new Size(0x35, 12);
            this.label318.TabIndex = 0x68;
            this.label318.Text = "Switch4:";
            this.button_High_Switch4.Location = new Point(0x4a, 0x91);
            this.button_High_Switch4.Name = "button_High_Switch4";
            this.button_High_Switch4.Size = new Size(0x2d, 0x17);
            this.button_High_Switch4.TabIndex = 0x67;
            this.button_High_Switch4.Text = "High";
            this.button_High_Switch4.UseVisualStyleBackColor = true;
            this.button_High_Switch4.Click += new EventHandler(this.button_High_Switch4_Click);
            this.label320.AutoSize = true;
            this.label320.Location = new Point(7, 60);
            this.label320.Name = "label320";
            this.label320.Size = new Size(0x35, 12);
            this.label320.TabIndex = 0x66;
            this.label320.Text = "Switch1:";
            this.button_High_Switch1.Location = new Point(0x4a, 0x37);
            this.button_High_Switch1.Name = "button_High_Switch1";
            this.button_High_Switch1.Size = new Size(0x2d, 0x17);
            this.button_High_Switch1.TabIndex = 1;
            this.button_High_Switch1.Text = "High";
            this.button_High_Switch1.UseVisualStyleBackColor = true;
            this.button_High_Switch1.Click += new EventHandler(this.button_High_Switch1_Click);
            this.tabPage2.Controls.Add(this.toolStrip_Calib1);
            this.tabPage2.Controls.Add(this.groupBox_Vcell_cal);
            this.tabPage2.Location = new Point(4, 0x16);
            this.tabPage2.Name = "tabPage2";
            this.tabPage2.Padding = new Padding(3);
            this.tabPage2.Size = new Size(0x521, 0x2df);
            this.tabPage2.TabIndex = 1;
            this.tabPage2.Text = "Calibration1";
            this.tabPage2.UseVisualStyleBackColor = true;
            this.toolStrip_Calib1.BackColor = Color.Gainsboro;
            this.toolStrip_Calib1.Dock = DockStyle.Bottom;
            this.toolStrip_Calib1.ImageScalingSize = new Size(20, 20);
            ToolStripItem[] itemArray3 = new ToolStripItem[] { this.toolStripLabel_RxCnt2, this.toolStripLabel35, this.toolStripLabel_TxCnt2 };
            this.toolStrip_Calib1.Items.AddRange(itemArray3);
            this.toolStrip_Calib1.Location = new Point(3, 0x2c3);
            this.toolStrip_Calib1.Name = "toolStrip_Calib1";
            this.toolStrip_Calib1.Size = new Size(0x51b, 0x19);
            this.toolStrip_Calib1.TabIndex = 0x67;
            this.toolStrip_Calib1.Text = "接收次数:";
            this.toolStripLabel_RxCnt2.Name = "toolStripLabel_RxCnt2";
            this.toolStripLabel_RxCnt2.Size = new Size(15, 0x16);
            this.toolStripLabel_RxCnt2.Text = "0";
            this.toolStripLabel35.Name = "toolStripLabel35";
            this.toolStripLabel35.Size = new Size(0x30, 0x16);
            this.toolStripLabel35.Text = "          ";
            this.toolStripLabel_TxCnt2.Name = "toolStripLabel_TxCnt2";
            this.toolStripLabel_TxCnt2.Size = new Size(15, 0x16);
            this.toolStripLabel_TxCnt2.Text = "0";
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox30);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox31);
            this.groupBox_Vcell_cal.Controls.Add(this.button_Reset_AFE2);
            this.groupBox_Vcell_cal.Controls.Add(this.button_Reset_Vbus);
            this.groupBox_Vcell_cal.Controls.Add(this.button_Reset_AFE1);
            this.groupBox_Vcell_cal.Controls.Add(this.button_Read_Vafe_bus);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox1);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox22);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox23);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox20);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox13);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox21);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox8);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox14);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell16);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox15);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox9);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox16);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell14);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox17);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox18);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox10);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox19);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell15);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox11);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox12);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell13);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell12);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell6);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell11);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell5);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell1);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell10);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell4);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell8);
            this.groupBox_Vcell_cal.Controls.Add(this.button_Reset_Vcell);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell7);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell9);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell3);
            this.groupBox_Vcell_cal.Controls.Add(this.groupBox_Vcell2);
            this.groupBox_Vcell_cal.Controls.Add(this.button_Read_Vcell);
            this.groupBox_Vcell_cal.Location = new Point(8, 6);
            this.groupBox_Vcell_cal.Name = "groupBox_Vcell_cal";
            this.groupBox_Vcell_cal.Size = new Size(0x511, 0x29c);
            this.groupBox_Vcell_cal.TabIndex = 11;
            this.groupBox_Vcell_cal.TabStop = false;
            this.groupBox_Vcell_cal.Text = "电压校准(B值单位为mV)";
            this.groupBox30.Controls.Add(this.textBox_Vy2_32);
            this.groupBox30.Controls.Add(this.textBox_Vx2_32);
            this.groupBox30.Controls.Add(this.textBox_Vy1_32);
            this.groupBox30.Controls.Add(this.textBox_Vx1_32);
            this.groupBox30.Controls.Add(this.label48);
            this.groupBox30.Controls.Add(this.button_calc_cell32);
            this.groupBox30.Controls.Add(this.button_cali_cell32);
            this.groupBox30.Controls.Add(this.label59);
            this.groupBox30.Controls.Add(this.textBox_cail_cell32_b);
            this.groupBox30.Controls.Add(this.label92);
            this.groupBox30.Controls.Add(this.label106);
            this.groupBox30.Controls.Add(this.textBox_cail_cell32_k);
            this.groupBox30.Location = new Point(0x202, 530);
            this.groupBox30.Name = "groupBox30";
            this.groupBox30.Size = new Size(0xa5, 120);
            this.groupBox30.TabIndex = 0x23;
            this.groupBox30.TabStop = false;
            this.groupBox30.Text = "Cell_32";
            this.textBox_Vy2_32.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_32.Name = "textBox_Vy2_32";
            this.textBox_Vy2_32.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_32.TabIndex = 0x16;
            this.textBox_Vx2_32.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_32.Name = "textBox_Vx2_32";
            this.textBox_Vx2_32.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_32.TabIndex = 0x15;
            this.textBox_Vy1_32.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_32.Name = "textBox_Vy1_32";
            this.textBox_Vy1_32.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_32.TabIndex = 20;
            this.textBox_Vx1_32.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_32.Name = "textBox_Vx1_32";
            this.textBox_Vx1_32.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_32.TabIndex = 0x13;
            this.label48.AutoSize = true;
            this.label48.Location = new Point(6, 40);
            this.label48.Name = "label48";
            this.label48.Size = new Size(0x3b, 12);
            this.label48.TabIndex = 0x12;
            this.label48.Text = "目标电压:";
            this.button_calc_cell32.Location = new Point(0x67, 0x40);
            this.button_calc_cell32.Name = "button_calc_cell32";
            this.button_calc_cell32.Size = new Size(0x3a, 0x17);
            this.button_calc_cell32.TabIndex = 15;
            this.button_calc_cell32.Text = "计算";
            this.button_calc_cell32.UseVisualStyleBackColor = true;
            this.button_calc_cell32.Click += new EventHandler(this.button_calc_cell32_Click);
            this.button_cali_cell32.Location = new Point(0x67, 0x57);
            this.button_cali_cell32.Name = "button_cali_cell32";
            this.button_cali_cell32.Size = new Size(0x3a, 0x17);
            this.button_cali_cell32.TabIndex = 4;
            this.button_cali_cell32.Text = "写入";
            this.button_cali_cell32.UseVisualStyleBackColor = true;
            this.button_cali_cell32.Click += new EventHandler(this.button_cali_cell32_Click);
            this.label59.AutoSize = true;
            this.label59.Location = new Point(6, 20);
            this.label59.Name = "label59";
            this.label59.Size = new Size(0x3b, 12);
            this.label59.TabIndex = 0x10;
            this.label59.Text = "当前电压:";
            this.textBox_cail_cell32_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell32_b.Name = "textBox_cail_cell32_b";
            this.textBox_cail_cell32_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell32_b.TabIndex = 3;
            this.label92.AutoSize = true;
            this.label92.Location = new Point(6, 0x59);
            this.label92.Name = "label92";
            this.label92.Size = new Size(0x1d, 12);
            this.label92.TabIndex = 2;
            this.label92.Text = "B值:";
            this.label106.AutoSize = true;
            this.label106.Location = new Point(6, 0x45);
            this.label106.Name = "label106";
            this.label106.Size = new Size(0x1d, 12);
            this.label106.TabIndex = 1;
            this.label106.Text = "K值:";
            this.textBox_cail_cell32_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell32_k.Name = "textBox_cail_cell32_k";
            this.textBox_cail_cell32_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell32_k.TabIndex = 0;
            this.groupBox31.Controls.Add(this.textBox_Vy2_31);
            this.groupBox31.Controls.Add(this.textBox_Vx2_31);
            this.groupBox31.Controls.Add(this.textBox_Vy1_31);
            this.groupBox31.Controls.Add(this.textBox_Vx1_31);
            this.groupBox31.Controls.Add(this.label107);
            this.groupBox31.Controls.Add(this.button_cali_cell31);
            this.groupBox31.Controls.Add(this.textBox_cail_cell31_b);
            this.groupBox31.Controls.Add(this.label108);
            this.groupBox31.Controls.Add(this.label109);
            this.groupBox31.Controls.Add(this.button_calc_cell31);
            this.groupBox31.Controls.Add(this.label110);
            this.groupBox31.Controls.Add(this.textBox_cail_cell31_k);
            this.groupBox31.Location = new Point(0x159, 530);
            this.groupBox31.Name = "groupBox31";
            this.groupBox31.Size = new Size(0xa5, 0x7a);
            this.groupBox31.TabIndex = 0x24;
            this.groupBox31.TabStop = false;
            this.groupBox31.Text = "Cell_31";
            this.textBox_Vy2_31.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_31.Name = "textBox_Vy2_31";
            this.textBox_Vy2_31.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_31.TabIndex = 20;
            this.textBox_Vx2_31.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_31.Name = "textBox_Vx2_31";
            this.textBox_Vx2_31.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_31.TabIndex = 0x13;
            this.textBox_Vy1_31.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_31.Name = "textBox_Vy1_31";
            this.textBox_Vy1_31.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_31.TabIndex = 0x12;
            this.textBox_Vx1_31.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_31.Name = "textBox_Vx1_31";
            this.textBox_Vx1_31.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_31.TabIndex = 0x11;
            this.label107.AutoSize = true;
            this.label107.Location = new Point(6, 0x2d);
            this.label107.Name = "label107";
            this.label107.Size = new Size(0x3b, 12);
            this.label107.TabIndex = 13;
            this.label107.Text = "目标电压:";
            this.button_cali_cell31.Location = new Point(0x67, 0x59);
            this.button_cali_cell31.Name = "button_cali_cell31";
            this.button_cali_cell31.Size = new Size(0x3a, 0x17);
            this.button_cali_cell31.TabIndex = 4;
            this.button_cali_cell31.Text = "写入";
            this.button_cali_cell31.UseVisualStyleBackColor = true;
            this.button_cali_cell31.Click += new EventHandler(this.button_cali_cell31_Click);
            this.textBox_cail_cell31_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell31_b.Name = "textBox_cail_cell31_b";
            this.textBox_cail_cell31_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell31_b.TabIndex = 3;
            this.label108.AutoSize = true;
            this.label108.Location = new Point(6, 0x17);
            this.label108.Name = "label108";
            this.label108.Size = new Size(0x3b, 12);
            this.label108.TabIndex = 11;
            this.label108.Text = "当前电压:";
            this.label109.AutoSize = true;
            this.label109.Location = new Point(6, 0x5d);
            this.label109.Name = "label109";
            this.label109.Size = new Size(0x1d, 12);
            this.label109.TabIndex = 2;
            this.label109.Text = "B值:";
            this.button_calc_cell31.Location = new Point(0x67, 0x44);
            this.button_calc_cell31.Name = "button_calc_cell31";
            this.button_calc_cell31.Size = new Size(0x3a, 0x17);
            this.button_calc_cell31.TabIndex = 6;
            this.button_calc_cell31.Text = "计算";
            this.button_calc_cell31.UseVisualStyleBackColor = true;
            this.button_calc_cell31.Click += new EventHandler(this.button_calc_cell31_Click);
            this.label110.AutoSize = true;
            this.label110.Location = new Point(6, 0x48);
            this.label110.Name = "label110";
            this.label110.Size = new Size(0x1d, 12);
            this.label110.TabIndex = 1;
            this.label110.Text = "K值:";
            this.textBox_cail_cell31_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell31_k.Name = "textBox_cail_cell31_k";
            this.textBox_cail_cell31_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell31_k.TabIndex = 0;
            this.button_Reset_AFE2.Location = new Point(0x4b7, 0x24d);
            this.button_Reset_AFE2.Name = "button_Reset_AFE2";
            this.button_Reset_AFE2.Size = new Size(0x4e, 0x17);
            this.button_Reset_AFE2.TabIndex = 0x29;
            this.button_Reset_AFE2.Text = "AFE2复位";
            this.button_Reset_AFE2.UseVisualStyleBackColor = true;
            this.button_Reset_AFE2.Click += new EventHandler(this.button_Reset_AFE2_Click);
            this.button_Reset_Vbus.Location = new Point(0x4b7, 0x26a);
            this.button_Reset_Vbus.Name = "button_Reset_Vbus";
            this.button_Reset_Vbus.Size = new Size(0x4e, 0x17);
            this.button_Reset_Vbus.TabIndex = 40;
            this.button_Reset_Vbus.Text = "Vbus复位";
            this.button_Reset_Vbus.UseVisualStyleBackColor = true;
            this.button_Reset_Vbus.Click += new EventHandler(this.button_Reset_Vbus_Click);
            this.button_Reset_AFE1.Location = new Point(0x4b7, 0x22f);
            this.button_Reset_AFE1.Name = "button_Reset_AFE1";
            this.button_Reset_AFE1.Size = new Size(0x4e, 0x17);
            this.button_Reset_AFE1.TabIndex = 0x27;
            this.button_Reset_AFE1.Text = "AFE1复位";
            this.button_Reset_AFE1.UseVisualStyleBackColor = true;
            this.button_Reset_AFE1.Click += new EventHandler(this.button_Reset_AFE1_Click);
            this.button_Read_Vafe_bus.Location = new Point(0x4b6, 530);
            this.button_Read_Vafe_bus.Name = "button_Read_Vafe_bus";
            this.button_Read_Vafe_bus.Size = new Size(0x4f, 0x17);
            this.button_Read_Vafe_bus.TabIndex = 0x26;
            this.button_Read_Vafe_bus.Text = "AFE_Bus读取";
            this.button_Read_Vafe_bus.UseVisualStyleBackColor = true;
            this.button_Read_Vafe_bus.Click += new EventHandler(this.button_Read_Vafe_bus_Click);
            this.groupBox1.Controls.Add(this.button_calc_Vbus);
            this.groupBox1.Controls.Add(this.textBox_Vy2_Vbus);
            this.groupBox1.Controls.Add(this.button_cali_Vbus);
            this.groupBox1.Controls.Add(this.textBox_Vx2_Vbus);
            this.groupBox1.Controls.Add(this.textBox_cail_Vbus_b);
            this.groupBox1.Controls.Add(this.label4);
            this.groupBox1.Controls.Add(this.label5);
            this.groupBox1.Controls.Add(this.textBox_Vy1_Vbus);
            this.groupBox1.Controls.Add(this.label6);
            this.groupBox1.Controls.Add(this.label21);
            this.groupBox1.Controls.Add(this.textBox_Vx1_Vbus);
            this.groupBox1.Controls.Add(this.textBox_cail_Vbus_k);
            this.groupBox1.Location = new Point(0x405, 530);
            this.groupBox1.Name = "groupBox1";
            this.groupBox1.Size = new Size(0xa5, 120);
            this.groupBox1.TabIndex = 0x25;
            this.groupBox1.TabStop = false;
            this.groupBox1.Text = "Vbus(B_unit_mV)";
            this.button_calc_Vbus.Location = new Point(0x69, 0x41);
            this.button_calc_Vbus.Name = "button_calc_Vbus";
            this.button_calc_Vbus.Size = new Size(0x3a, 0x17);
            this.button_calc_Vbus.TabIndex = 0x11;
            this.button_calc_Vbus.Text = "计算";
            this.button_calc_Vbus.UseVisualStyleBackColor = true;
            this.button_calc_Vbus.Click += new EventHandler(this.button_calc_Vbus_Click_1);
            this.textBox_Vy2_Vbus.Location = new Point(0x73, 0x2b);
            this.textBox_Vy2_Vbus.Name = "textBox_Vy2_Vbus";
            this.textBox_Vy2_Vbus.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_Vbus.TabIndex = 0x16;
            this.button_cali_Vbus.Location = new Point(0x69, 0x57);
            this.button_cali_Vbus.Name = "button_cali_Vbus";
            this.button_cali_Vbus.Size = new Size(0x3a, 0x17);
            this.button_cali_Vbus.TabIndex = 4;
            this.button_cali_Vbus.Text = "写入";
            this.button_cali_Vbus.UseVisualStyleBackColor = true;
            this.button_cali_Vbus.Click += new EventHandler(this.button_cali_Vbus_Click_1);
            this.textBox_Vx2_Vbus.Location = new Point(0x73, 0x18);
            this.textBox_Vx2_Vbus.Name = "textBox_Vx2_Vbus";
            this.textBox_Vx2_Vbus.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_Vbus.TabIndex = 0x15;
            this.textBox_cail_Vbus_b.Location = new Point(0x2b, 0x58);
            this.textBox_cail_Vbus_b.Name = "textBox_cail_Vbus_b";
            this.textBox_cail_Vbus_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_Vbus_b.TabIndex = 3;
            this.label4.AutoSize = true;
            this.label4.Location = new Point(6, 0x2e);
            this.label4.Name = "label4";
            this.label4.Size = new Size(0x3b, 12);
            this.label4.TabIndex = 20;
            this.label4.Text = "目标电压:";
            this.label5.AutoSize = true;
            this.label5.Location = new Point(8, 0x5c);
            this.label5.Name = "label5";
            this.label5.Size = new Size(0x1d, 12);
            this.label5.TabIndex = 2;
            this.label5.Text = "B值:";
            this.textBox_Vy1_Vbus.Location = new Point(0x43, 0x2b);
            this.textBox_Vy1_Vbus.Name = "textBox_Vy1_Vbus";
            this.textBox_Vy1_Vbus.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_Vbus.TabIndex = 0x13;
            this.label6.AutoSize = true;
            this.label6.Location = new Point(8, 0x47);
            this.label6.Name = "label6";
            this.label6.Size = new Size(0x1d, 12);
            this.label6.TabIndex = 1;
            this.label6.Text = "K值:";
            this.label21.AutoSize = true;
            this.label21.Location = new Point(6, 0x18);
            this.label21.Name = "label21";
            this.label21.Size = new Size(0x3b, 12);
            this.label21.TabIndex = 0x12;
            this.label21.Text = "当前电压:";
            this.textBox_Vx1_Vbus.Location = new Point(0x43, 0x18);
            this.textBox_Vx1_Vbus.Name = "textBox_Vx1_Vbus";
            this.textBox_Vx1_Vbus.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_Vbus.TabIndex = 0x11;
            this.textBox_cail_Vbus_k.Location = new Point(0x2b, 0x44);
            this.textBox_cail_Vbus_k.Name = "textBox_cail_Vbus_k";
            this.textBox_cail_Vbus_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_Vbus_k.TabIndex = 0;
            this.groupBox22.Controls.Add(this.textBox_Vy2_AFE2);
            this.groupBox22.Controls.Add(this.textBox_Vx2_AFE2);
            this.groupBox22.Controls.Add(this.textBox_Vy1_AFE2);
            this.groupBox22.Controls.Add(this.textBox_Vx1_AFE2);
            this.groupBox22.Controls.Add(this.label384);
            this.groupBox22.Controls.Add(this.button_calc_AFE2);
            this.groupBox22.Controls.Add(this.button_cali_AFE2);
            this.groupBox22.Controls.Add(this.label385);
            this.groupBox22.Controls.Add(this.textBox_cail_AFE2_b);
            this.groupBox22.Controls.Add(this.label386);
            this.groupBox22.Controls.Add(this.label387);
            this.groupBox22.Controls.Add(this.textBox_cail_AFE2_k);
            this.groupBox22.Location = new Point(0x35b, 0x210);
            this.groupBox22.Name = "groupBox22";
            this.groupBox22.Size = new Size(0xa5, 120);
            this.groupBox22.TabIndex = 0x23;
            this.groupBox22.TabStop = false;
            this.groupBox22.Text = "Cell_AFE2(16-30)";
            this.textBox_Vy2_AFE2.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_AFE2.Name = "textBox_Vy2_AFE2";
            this.textBox_Vy2_AFE2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_AFE2.TabIndex = 0x16;
            this.textBox_Vx2_AFE2.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_AFE2.Name = "textBox_Vx2_AFE2";
            this.textBox_Vx2_AFE2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_AFE2.TabIndex = 0x15;
            this.textBox_Vy1_AFE2.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_AFE2.Name = "textBox_Vy1_AFE2";
            this.textBox_Vy1_AFE2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_AFE2.TabIndex = 20;
            this.textBox_Vx1_AFE2.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_AFE2.Name = "textBox_Vx1_AFE2";
            this.textBox_Vx1_AFE2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_AFE2.TabIndex = 0x13;
            this.label384.AutoSize = true;
            this.label384.Location = new Point(6, 40);
            this.label384.Name = "label384";
            this.label384.Size = new Size(0x3b, 12);
            this.label384.TabIndex = 0x12;
            this.label384.Text = "目标电压:";
            this.button_calc_AFE2.Location = new Point(0x67, 0x40);
            this.button_calc_AFE2.Name = "button_calc_AFE2";
            this.button_calc_AFE2.Size = new Size(0x3a, 0x17);
            this.button_calc_AFE2.TabIndex = 15;
            this.button_calc_AFE2.Text = "计算";
            this.button_calc_AFE2.UseVisualStyleBackColor = true;
            this.button_calc_AFE2.Click += new EventHandler(this.button_calc_AFE2_Click);
            this.button_cali_AFE2.Location = new Point(0x67, 0x57);
            this.button_cali_AFE2.Name = "button_cali_AFE2";
            this.button_cali_AFE2.Size = new Size(0x3a, 0x17);
            this.button_cali_AFE2.TabIndex = 4;
            this.button_cali_AFE2.Text = "写入";
            this.button_cali_AFE2.UseVisualStyleBackColor = true;
            this.button_cali_AFE2.Click += new EventHandler(this.button_cali_AFE2_Click);
            this.label385.AutoSize = true;
            this.label385.Location = new Point(6, 20);
            this.label385.Name = "label385";
            this.label385.Size = new Size(0x3b, 12);
            this.label385.TabIndex = 0x10;
            this.label385.Text = "当前电压:";
            this.textBox_cail_AFE2_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_AFE2_b.Name = "textBox_cail_AFE2_b";
            this.textBox_cail_AFE2_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_AFE2_b.TabIndex = 3;
            this.label386.AutoSize = true;
            this.label386.Location = new Point(6, 0x59);
            this.label386.Name = "label386";
            this.label386.Size = new Size(0x1d, 12);
            this.label386.TabIndex = 2;
            this.label386.Text = "B值:";
            this.label387.AutoSize = true;
            this.label387.Location = new Point(6, 0x45);
            this.label387.Name = "label387";
            this.label387.Size = new Size(0x1d, 12);
            this.label387.TabIndex = 1;
            this.label387.Text = "K值:";
            this.textBox_cail_AFE2_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_AFE2_k.Name = "textBox_cail_AFE2_k";
            this.textBox_cail_AFE2_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_AFE2_k.TabIndex = 0;
            this.groupBox23.Controls.Add(this.textBox_Vy2_AFE1);
            this.groupBox23.Controls.Add(this.textBox_Vx2_AFE1);
            this.groupBox23.Controls.Add(this.textBox_Vy1_AFE1);
            this.groupBox23.Controls.Add(this.textBox_Vx1_AFE1);
            this.groupBox23.Controls.Add(this.label388);
            this.groupBox23.Controls.Add(this.button_cali_AFE1);
            this.groupBox23.Controls.Add(this.textBox_cail_AFE1_b);
            this.groupBox23.Controls.Add(this.label389);
            this.groupBox23.Controls.Add(this.label390);
            this.groupBox23.Controls.Add(this.button_calc_AFE1);
            this.groupBox23.Controls.Add(this.label391);
            this.groupBox23.Controls.Add(this.textBox_cail_AFE1_k);
            this.groupBox23.Location = new Point(690, 0x210);
            this.groupBox23.Name = "groupBox23";
            this.groupBox23.Size = new Size(0xa5, 0x7a);
            this.groupBox23.TabIndex = 0x24;
            this.groupBox23.TabStop = false;
            this.groupBox23.Text = "Cell_AFE1(1-15)";
            this.textBox_Vy2_AFE1.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_AFE1.Name = "textBox_Vy2_AFE1";
            this.textBox_Vy2_AFE1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_AFE1.TabIndex = 20;
            this.textBox_Vx2_AFE1.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_AFE1.Name = "textBox_Vx2_AFE1";
            this.textBox_Vx2_AFE1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_AFE1.TabIndex = 0x13;
            this.textBox_Vy1_AFE1.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_AFE1.Name = "textBox_Vy1_AFE1";
            this.textBox_Vy1_AFE1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_AFE1.TabIndex = 0x12;
            this.textBox_Vx1_AFE1.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_AFE1.Name = "textBox_Vx1_AFE1";
            this.textBox_Vx1_AFE1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_AFE1.TabIndex = 0x11;
            this.label388.AutoSize = true;
            this.label388.Location = new Point(6, 0x2d);
            this.label388.Name = "label388";
            this.label388.Size = new Size(0x3b, 12);
            this.label388.TabIndex = 13;
            this.label388.Text = "目标电压:";
            this.button_cali_AFE1.Location = new Point(0x67, 0x59);
            this.button_cali_AFE1.Name = "button_cali_AFE1";
            this.button_cali_AFE1.Size = new Size(0x3a, 0x17);
            this.button_cali_AFE1.TabIndex = 4;
            this.button_cali_AFE1.Text = "写入";
            this.button_cali_AFE1.UseVisualStyleBackColor = true;
            this.button_cali_AFE1.Click += new EventHandler(this.button_cali_AFE1_Click);
            this.textBox_cail_AFE1_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_AFE1_b.Name = "textBox_cail_AFE1_b";
            this.textBox_cail_AFE1_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_AFE1_b.TabIndex = 3;
            this.label389.AutoSize = true;
            this.label389.Location = new Point(6, 0x17);
            this.label389.Name = "label389";
            this.label389.Size = new Size(0x3b, 12);
            this.label389.TabIndex = 11;
            this.label389.Text = "当前电压:";
            this.label390.AutoSize = true;
            this.label390.Location = new Point(6, 0x5d);
            this.label390.Name = "label390";
            this.label390.Size = new Size(0x1d, 12);
            this.label390.TabIndex = 2;
            this.label390.Text = "B值:";
            this.button_calc_AFE1.Location = new Point(0x67, 0x44);
            this.button_calc_AFE1.Name = "button_calc_AFE1";
            this.button_calc_AFE1.Size = new Size(0x3a, 0x17);
            this.button_calc_AFE1.TabIndex = 6;
            this.button_calc_AFE1.Text = "计算";
            this.button_calc_AFE1.UseVisualStyleBackColor = true;
            this.button_calc_AFE1.Click += new EventHandler(this.button_calc_AFE1_Click);
            this.label391.AutoSize = true;
            this.label391.Location = new Point(6, 0x48);
            this.label391.Name = "label391";
            this.label391.Size = new Size(0x1d, 12);
            this.label391.TabIndex = 1;
            this.label391.Text = "K值:";
            this.textBox_cail_AFE1_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_AFE1_k.Name = "textBox_cail_AFE1_k";
            this.textBox_cail_AFE1_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_AFE1_k.TabIndex = 0;
            this.groupBox20.Controls.Add(this.textBox_Vy2_30);
            this.groupBox20.Controls.Add(this.textBox_Vx2_30);
            this.groupBox20.Controls.Add(this.textBox_Vy1_30);
            this.groupBox20.Controls.Add(this.textBox_Vx1_30);
            this.groupBox20.Controls.Add(this.label376);
            this.groupBox20.Controls.Add(this.button_calc_cell30);
            this.groupBox20.Controls.Add(this.button_cali_cell30);
            this.groupBox20.Controls.Add(this.label377);
            this.groupBox20.Controls.Add(this.textBox_cail_cell30_b);
            this.groupBox20.Controls.Add(this.label378);
            this.groupBox20.Controls.Add(this.label379);
            this.groupBox20.Controls.Add(this.textBox_cail_cell30_k);
            this.groupBox20.Location = new Point(0xaf, 0x210);
            this.groupBox20.Name = "groupBox20";
            this.groupBox20.Size = new Size(0xa5, 120);
            this.groupBox20.TabIndex = 0x21;
            this.groupBox20.TabStop = false;
            this.groupBox20.Text = "Cell_30";
            this.textBox_Vy2_30.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_30.Name = "textBox_Vy2_30";
            this.textBox_Vy2_30.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_30.TabIndex = 0x16;
            this.textBox_Vx2_30.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_30.Name = "textBox_Vx2_30";
            this.textBox_Vx2_30.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_30.TabIndex = 0x15;
            this.textBox_Vy1_30.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_30.Name = "textBox_Vy1_30";
            this.textBox_Vy1_30.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_30.TabIndex = 20;
            this.textBox_Vx1_30.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_30.Name = "textBox_Vx1_30";
            this.textBox_Vx1_30.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_30.TabIndex = 0x13;
            this.label376.AutoSize = true;
            this.label376.Location = new Point(6, 40);
            this.label376.Name = "label376";
            this.label376.Size = new Size(0x3b, 12);
            this.label376.TabIndex = 0x12;
            this.label376.Text = "目标电压:";
            this.button_calc_cell30.Location = new Point(0x67, 0x40);
            this.button_calc_cell30.Name = "button_calc_cell30";
            this.button_calc_cell30.Size = new Size(0x3a, 0x17);
            this.button_calc_cell30.TabIndex = 15;
            this.button_calc_cell30.Text = "计算";
            this.button_calc_cell30.UseVisualStyleBackColor = true;
            this.button_calc_cell30.Click += new EventHandler(this.button_calc_cell30_Click);
            this.button_cali_cell30.Location = new Point(0x67, 0x57);
            this.button_cali_cell30.Name = "button_cali_cell30";
            this.button_cali_cell30.Size = new Size(0x3a, 0x17);
            this.button_cali_cell30.TabIndex = 4;
            this.button_cali_cell30.Text = "写入";
            this.button_cali_cell30.UseVisualStyleBackColor = true;
            this.button_cali_cell30.Click += new EventHandler(this.button_cali_cell30_Click);
            this.label377.AutoSize = true;
            this.label377.Location = new Point(6, 20);
            this.label377.Name = "label377";
            this.label377.Size = new Size(0x3b, 12);
            this.label377.TabIndex = 0x10;
            this.label377.Text = "当前电压:";
            this.textBox_cail_cell30_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell30_b.Name = "textBox_cail_cell30_b";
            this.textBox_cail_cell30_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell30_b.TabIndex = 3;
            this.label378.AutoSize = true;
            this.label378.Location = new Point(6, 0x59);
            this.label378.Name = "label378";
            this.label378.Size = new Size(0x1d, 12);
            this.label378.TabIndex = 2;
            this.label378.Text = "B值:";
            this.label379.AutoSize = true;
            this.label379.Location = new Point(6, 0x45);
            this.label379.Name = "label379";
            this.label379.Size = new Size(0x1d, 12);
            this.label379.TabIndex = 1;
            this.label379.Text = "K值:";
            this.textBox_cail_cell30_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell30_k.Name = "textBox_cail_cell30_k";
            this.textBox_cail_cell30_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell30_k.TabIndex = 0;
            this.groupBox13.Controls.Add(this.textBox_Vy2_28);
            this.groupBox13.Controls.Add(this.textBox_Vx2_28);
            this.groupBox13.Controls.Add(this.textBox_Vy1_28);
            this.groupBox13.Controls.Add(this.textBox_Vx1_28);
            this.groupBox13.Controls.Add(this.label348);
            this.groupBox13.Controls.Add(this.button_calc_cell28);
            this.groupBox13.Controls.Add(this.button_cali_cell28);
            this.groupBox13.Controls.Add(this.label349);
            this.groupBox13.Controls.Add(this.textBox_cail_cell28_b);
            this.groupBox13.Controls.Add(this.label350);
            this.groupBox13.Controls.Add(this.label351);
            this.groupBox13.Controls.Add(this.textBox_cail_cell28_k);
            this.groupBox13.Location = new Point(0x40a, 400);
            this.groupBox13.Name = "groupBox13";
            this.groupBox13.Size = new Size(0xa5, 120);
            this.groupBox13.TabIndex = 30;
            this.groupBox13.TabStop = false;
            this.groupBox13.Text = "Cell_28";
            this.textBox_Vy2_28.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_28.Name = "textBox_Vy2_28";
            this.textBox_Vy2_28.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_28.TabIndex = 0x16;
            this.textBox_Vx2_28.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_28.Name = "textBox_Vx2_28";
            this.textBox_Vx2_28.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_28.TabIndex = 0x15;
            this.textBox_Vy1_28.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_28.Name = "textBox_Vy1_28";
            this.textBox_Vy1_28.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_28.TabIndex = 20;
            this.textBox_Vx1_28.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_28.Name = "textBox_Vx1_28";
            this.textBox_Vx1_28.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_28.TabIndex = 0x13;
            this.label348.AutoSize = true;
            this.label348.Location = new Point(6, 40);
            this.label348.Name = "label348";
            this.label348.Size = new Size(0x3b, 12);
            this.label348.TabIndex = 0x12;
            this.label348.Text = "目标电压:";
            this.button_calc_cell28.Location = new Point(0x67, 0x40);
            this.button_calc_cell28.Name = "button_calc_cell28";
            this.button_calc_cell28.Size = new Size(0x3a, 0x17);
            this.button_calc_cell28.TabIndex = 15;
            this.button_calc_cell28.Text = "计算";
            this.button_calc_cell28.UseVisualStyleBackColor = true;
            this.button_calc_cell28.Click += new EventHandler(this.button_calc_cell28_Click);
            this.button_cali_cell28.Location = new Point(0x67, 0x57);
            this.button_cali_cell28.Name = "button_cali_cell28";
            this.button_cali_cell28.Size = new Size(0x3a, 0x17);
            this.button_cali_cell28.TabIndex = 4;
            this.button_cali_cell28.Text = "写入";
            this.button_cali_cell28.UseVisualStyleBackColor = true;
            this.button_cali_cell28.Click += new EventHandler(this.button_cali_cell28_Click);
            this.label349.AutoSize = true;
            this.label349.Location = new Point(6, 20);
            this.label349.Name = "label349";
            this.label349.Size = new Size(0x3b, 12);
            this.label349.TabIndex = 0x10;
            this.label349.Text = "当前电压:";
            this.textBox_cail_cell28_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell28_b.Name = "textBox_cail_cell28_b";
            this.textBox_cail_cell28_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell28_b.TabIndex = 3;
            this.label350.AutoSize = true;
            this.label350.Location = new Point(6, 0x59);
            this.label350.Name = "label350";
            this.label350.Size = new Size(0x1d, 12);
            this.label350.TabIndex = 2;
            this.label350.Text = "B值:";
            this.label351.AutoSize = true;
            this.label351.Location = new Point(6, 0x45);
            this.label351.Name = "label351";
            this.label351.Size = new Size(0x1d, 12);
            this.label351.TabIndex = 1;
            this.label351.Text = "K值:";
            this.textBox_cail_cell28_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell28_k.Name = "textBox_cail_cell28_k";
            this.textBox_cail_cell28_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell28_k.TabIndex = 0;
            this.groupBox21.Controls.Add(this.textBox_Vy2_29);
            this.groupBox21.Controls.Add(this.textBox_Vx2_29);
            this.groupBox21.Controls.Add(this.textBox_Vy1_29);
            this.groupBox21.Controls.Add(this.textBox_Vx1_29);
            this.groupBox21.Controls.Add(this.label380);
            this.groupBox21.Controls.Add(this.button_cali_cell29);
            this.groupBox21.Controls.Add(this.textBox_cail_cell29_b);
            this.groupBox21.Controls.Add(this.label381);
            this.groupBox21.Controls.Add(this.label382);
            this.groupBox21.Controls.Add(this.button_calc_cell29);
            this.groupBox21.Controls.Add(this.label383);
            this.groupBox21.Controls.Add(this.textBox_cail_cell29_k);
            this.groupBox21.Location = new Point(6, 0x210);
            this.groupBox21.Name = "groupBox21";
            this.groupBox21.Size = new Size(0xa5, 0x7a);
            this.groupBox21.TabIndex = 0x22;
            this.groupBox21.TabStop = false;
            this.groupBox21.Text = "Cell_29";
            this.textBox_Vy2_29.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_29.Name = "textBox_Vy2_29";
            this.textBox_Vy2_29.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_29.TabIndex = 20;
            this.textBox_Vx2_29.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_29.Name = "textBox_Vx2_29";
            this.textBox_Vx2_29.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_29.TabIndex = 0x13;
            this.textBox_Vy1_29.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_29.Name = "textBox_Vy1_29";
            this.textBox_Vy1_29.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_29.TabIndex = 0x12;
            this.textBox_Vx1_29.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_29.Name = "textBox_Vx1_29";
            this.textBox_Vx1_29.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_29.TabIndex = 0x11;
            this.label380.AutoSize = true;
            this.label380.Location = new Point(6, 0x2d);
            this.label380.Name = "label380";
            this.label380.Size = new Size(0x3b, 12);
            this.label380.TabIndex = 13;
            this.label380.Text = "目标电压:";
            this.button_cali_cell29.Location = new Point(0x67, 0x59);
            this.button_cali_cell29.Name = "button_cali_cell29";
            this.button_cali_cell29.Size = new Size(0x3a, 0x17);
            this.button_cali_cell29.TabIndex = 4;
            this.button_cali_cell29.Text = "写入";
            this.button_cali_cell29.UseVisualStyleBackColor = true;
            this.button_cali_cell29.Click += new EventHandler(this.button_cali_cell29_Click);
            this.textBox_cail_cell29_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell29_b.Name = "textBox_cail_cell29_b";
            this.textBox_cail_cell29_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell29_b.TabIndex = 3;
            this.label381.AutoSize = true;
            this.label381.Location = new Point(6, 0x17);
            this.label381.Name = "label381";
            this.label381.Size = new Size(0x3b, 12);
            this.label381.TabIndex = 11;
            this.label381.Text = "当前电压:";
            this.label382.AutoSize = true;
            this.label382.Location = new Point(6, 0x5d);
            this.label382.Name = "label382";
            this.label382.Size = new Size(0x1d, 12);
            this.label382.TabIndex = 2;
            this.label382.Text = "B值:";
            this.button_calc_cell29.Location = new Point(0x67, 0x44);
            this.button_calc_cell29.Name = "button_calc_cell29";
            this.button_calc_cell29.Size = new Size(0x3a, 0x17);
            this.button_calc_cell29.TabIndex = 6;
            this.button_calc_cell29.Text = "计算";
            this.button_calc_cell29.UseVisualStyleBackColor = true;
            this.button_calc_cell29.Click += new EventHandler(this.button_calc_cell29_Click);
            this.label383.AutoSize = true;
            this.label383.Location = new Point(6, 0x48);
            this.label383.Name = "label383";
            this.label383.Size = new Size(0x1d, 12);
            this.label383.TabIndex = 1;
            this.label383.Text = "K值:";
            this.textBox_cail_cell29_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell29_k.Name = "textBox_cail_cell29_k";
            this.textBox_cail_cell29_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell29_k.TabIndex = 0;
            this.groupBox8.Controls.Add(this.textBox_Vy2_21);
            this.groupBox8.Controls.Add(this.textBox_Vx2_21);
            this.groupBox8.Controls.Add(this.textBox_Vy1_21);
            this.groupBox8.Controls.Add(this.textBox_Vx1_21);
            this.groupBox8.Controls.Add(this.label328);
            this.groupBox8.Controls.Add(this.button_calc_cell21);
            this.groupBox8.Controls.Add(this.button_cali_cell21);
            this.groupBox8.Controls.Add(this.label329);
            this.groupBox8.Controls.Add(this.textBox_cail_cell21_b);
            this.groupBox8.Controls.Add(this.label330);
            this.groupBox8.Controls.Add(this.label331);
            this.groupBox8.Controls.Add(this.textBox_cail_cell21_k);
            this.groupBox8.Location = new Point(0x40c, 0x110);
            this.groupBox8.Name = "groupBox8";
            this.groupBox8.Size = new Size(0xa5, 120);
            this.groupBox8.TabIndex = 0x18;
            this.groupBox8.TabStop = false;
            this.groupBox8.Text = "Cell_21";
            this.textBox_Vy2_21.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_21.Name = "textBox_Vy2_21";
            this.textBox_Vy2_21.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_21.TabIndex = 0x16;
            this.textBox_Vx2_21.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_21.Name = "textBox_Vx2_21";
            this.textBox_Vx2_21.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_21.TabIndex = 0x15;
            this.textBox_Vy1_21.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_21.Name = "textBox_Vy1_21";
            this.textBox_Vy1_21.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_21.TabIndex = 20;
            this.textBox_Vx1_21.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_21.Name = "textBox_Vx1_21";
            this.textBox_Vx1_21.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_21.TabIndex = 0x13;
            this.label328.AutoSize = true;
            this.label328.Location = new Point(6, 40);
            this.label328.Name = "label328";
            this.label328.Size = new Size(0x3b, 12);
            this.label328.TabIndex = 0x12;
            this.label328.Text = "目标电压:";
            this.button_calc_cell21.Location = new Point(0x67, 0x40);
            this.button_calc_cell21.Name = "button_calc_cell21";
            this.button_calc_cell21.Size = new Size(0x3a, 0x17);
            this.button_calc_cell21.TabIndex = 15;
            this.button_calc_cell21.Text = "计算";
            this.button_calc_cell21.UseVisualStyleBackColor = true;
            this.button_calc_cell21.Click += new EventHandler(this.button_calc_cell21_Click);
            this.button_cali_cell21.Location = new Point(0x67, 0x57);
            this.button_cali_cell21.Name = "button_cali_cell21";
            this.button_cali_cell21.Size = new Size(0x3a, 0x17);
            this.button_cali_cell21.TabIndex = 4;
            this.button_cali_cell21.Text = "写入";
            this.button_cali_cell21.UseVisualStyleBackColor = true;
            this.button_cali_cell21.Click += new EventHandler(this.button_cali_cell21_Click);
            this.label329.AutoSize = true;
            this.label329.Location = new Point(6, 20);
            this.label329.Name = "label329";
            this.label329.Size = new Size(0x3b, 12);
            this.label329.TabIndex = 0x10;
            this.label329.Text = "当前电压:";
            this.textBox_cail_cell21_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell21_b.Name = "textBox_cail_cell21_b";
            this.textBox_cail_cell21_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell21_b.TabIndex = 3;
            this.label330.AutoSize = true;
            this.label330.Location = new Point(6, 0x59);
            this.label330.Name = "label330";
            this.label330.Size = new Size(0x1d, 12);
            this.label330.TabIndex = 2;
            this.label330.Text = "B值:";
            this.label331.AutoSize = true;
            this.label331.Location = new Point(6, 0x45);
            this.label331.Name = "label331";
            this.label331.Size = new Size(0x1d, 12);
            this.label331.TabIndex = 1;
            this.label331.Text = "K值:";
            this.textBox_cail_cell21_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell21_k.Name = "textBox_cail_cell21_k";
            this.textBox_cail_cell21_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell21_k.TabIndex = 0;
            this.groupBox14.Controls.Add(this.textBox_Vy2_23);
            this.groupBox14.Controls.Add(this.textBox_Vx2_23);
            this.groupBox14.Controls.Add(this.textBox_Vy1_23);
            this.groupBox14.Controls.Add(this.textBox_Vx1_23);
            this.groupBox14.Controls.Add(this.label352);
            this.groupBox14.Controls.Add(this.button_calc_cell23);
            this.groupBox14.Controls.Add(this.button_cali_cell23);
            this.groupBox14.Controls.Add(this.label353);
            this.groupBox14.Controls.Add(this.textBox_cail_cell23_b);
            this.groupBox14.Controls.Add(this.label354);
            this.groupBox14.Controls.Add(this.label355);
            this.groupBox14.Controls.Add(this.textBox_cail_cell23_k);
            this.groupBox14.Location = new Point(0xaf, 0x191);
            this.groupBox14.Name = "groupBox14";
            this.groupBox14.Size = new Size(0xa5, 120);
            this.groupBox14.TabIndex = 0x1c;
            this.groupBox14.TabStop = false;
            this.groupBox14.Text = "Cell_23";
            this.textBox_Vy2_23.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_23.Name = "textBox_Vy2_23";
            this.textBox_Vy2_23.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_23.TabIndex = 0x16;
            this.textBox_Vx2_23.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_23.Name = "textBox_Vx2_23";
            this.textBox_Vx2_23.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_23.TabIndex = 0x15;
            this.textBox_Vy1_23.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_23.Name = "textBox_Vy1_23";
            this.textBox_Vy1_23.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_23.TabIndex = 20;
            this.textBox_Vx1_23.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_23.Name = "textBox_Vx1_23";
            this.textBox_Vx1_23.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_23.TabIndex = 0x13;
            this.label352.AutoSize = true;
            this.label352.Location = new Point(6, 40);
            this.label352.Name = "label352";
            this.label352.Size = new Size(0x3b, 12);
            this.label352.TabIndex = 0x12;
            this.label352.Text = "目标电压:";
            this.button_calc_cell23.Location = new Point(0x67, 0x40);
            this.button_calc_cell23.Name = "button_calc_cell23";
            this.button_calc_cell23.Size = new Size(0x3a, 0x17);
            this.button_calc_cell23.TabIndex = 15;
            this.button_calc_cell23.Text = "计算";
            this.button_calc_cell23.UseVisualStyleBackColor = true;
            this.button_calc_cell23.Click += new EventHandler(this.button_calc_cell23_Click);
            this.button_cali_cell23.Location = new Point(0x67, 0x57);
            this.button_cali_cell23.Name = "button_cali_cell23";
            this.button_cali_cell23.Size = new Size(0x3a, 0x17);
            this.button_cali_cell23.TabIndex = 4;
            this.button_cali_cell23.Text = "写入";
            this.button_cali_cell23.UseVisualStyleBackColor = true;
            this.button_cali_cell23.Click += new EventHandler(this.button_cali_cell23_Click);
            this.label353.AutoSize = true;
            this.label353.Location = new Point(6, 20);
            this.label353.Name = "label353";
            this.label353.Size = new Size(0x3b, 12);
            this.label353.TabIndex = 0x10;
            this.label353.Text = "当前电压:";
            this.textBox_cail_cell23_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell23_b.Name = "textBox_cail_cell23_b";
            this.textBox_cail_cell23_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell23_b.TabIndex = 3;
            this.label354.AutoSize = true;
            this.label354.Location = new Point(6, 0x59);
            this.label354.Name = "label354";
            this.label354.Size = new Size(0x1d, 12);
            this.label354.TabIndex = 2;
            this.label354.Text = "B值:";
            this.label355.AutoSize = true;
            this.label355.Location = new Point(6, 0x45);
            this.label355.Name = "label355";
            this.label355.Size = new Size(0x1d, 12);
            this.label355.TabIndex = 1;
            this.label355.Text = "K值:";
            this.textBox_cail_cell23_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell23_k.Name = "textBox_cail_cell23_k";
            this.textBox_cail_cell23_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell23_k.TabIndex = 0;
            this.groupBox_Vcell16.Controls.Add(this.textBox_Vy2_16);
            this.groupBox_Vcell16.Controls.Add(this.textBox_Vx2_16);
            this.groupBox_Vcell16.Controls.Add(this.textBox_Vy1_16);
            this.groupBox_Vcell16.Controls.Add(this.textBox_Vx1_16);
            this.groupBox_Vcell16.Controls.Add(this.label172);
            this.groupBox_Vcell16.Controls.Add(this.button_calc_cell16);
            this.groupBox_Vcell16.Controls.Add(this.button_cali_cell16);
            this.groupBox_Vcell16.Controls.Add(this.label218);
            this.groupBox_Vcell16.Controls.Add(this.textBox_cail_cell16_b);
            this.groupBox_Vcell16.Controls.Add(this.label220);
            this.groupBox_Vcell16.Controls.Add(this.label222);
            this.groupBox_Vcell16.Controls.Add(this.textBox_cail_cell16_k);
            this.groupBox_Vcell16.Location = new Point(0xb1, 0x111);
            this.groupBox_Vcell16.Name = "groupBox_Vcell16";
            this.groupBox_Vcell16.Size = new Size(0xa5, 120);
            this.groupBox_Vcell16.TabIndex = 0x17;
            this.groupBox_Vcell16.TabStop = false;
            this.groupBox_Vcell16.Text = "Cell_16";
            this.textBox_Vy2_16.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_16.Name = "textBox_Vy2_16";
            this.textBox_Vy2_16.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_16.TabIndex = 0x16;
            this.textBox_Vx2_16.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_16.Name = "textBox_Vx2_16";
            this.textBox_Vx2_16.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_16.TabIndex = 0x15;
            this.textBox_Vy1_16.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_16.Name = "textBox_Vy1_16";
            this.textBox_Vy1_16.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_16.TabIndex = 20;
            this.textBox_Vx1_16.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_16.Name = "textBox_Vx1_16";
            this.textBox_Vx1_16.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_16.TabIndex = 0x13;
            this.label172.AutoSize = true;
            this.label172.Location = new Point(6, 40);
            this.label172.Name = "label172";
            this.label172.Size = new Size(0x3b, 12);
            this.label172.TabIndex = 0x12;
            this.label172.Text = "目标电压:";
            this.button_calc_cell16.Location = new Point(0x67, 0x40);
            this.button_calc_cell16.Name = "button_calc_cell16";
            this.button_calc_cell16.Size = new Size(0x3a, 0x17);
            this.button_calc_cell16.TabIndex = 15;
            this.button_calc_cell16.Text = "计算";
            this.button_calc_cell16.UseVisualStyleBackColor = true;
            this.button_calc_cell16.Click += new EventHandler(this.button_calc_cell16_Click);
            this.button_cali_cell16.Location = new Point(0x67, 0x57);
            this.button_cali_cell16.Name = "button_cali_cell16";
            this.button_cali_cell16.Size = new Size(0x3a, 0x17);
            this.button_cali_cell16.TabIndex = 4;
            this.button_cali_cell16.Text = "写入";
            this.button_cali_cell16.UseVisualStyleBackColor = true;
            this.button_cali_cell16.Click += new EventHandler(this.button_cali_cell16_Click);
            this.label218.AutoSize = true;
            this.label218.Location = new Point(6, 20);
            this.label218.Name = "label218";
            this.label218.Size = new Size(0x3b, 12);
            this.label218.TabIndex = 0x10;
            this.label218.Text = "当前电压:";
            this.textBox_cail_cell16_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell16_b.Name = "textBox_cail_cell16_b";
            this.textBox_cail_cell16_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell16_b.TabIndex = 3;
            this.label220.AutoSize = true;
            this.label220.Location = new Point(6, 0x59);
            this.label220.Name = "label220";
            this.label220.Size = new Size(0x1d, 12);
            this.label220.TabIndex = 2;
            this.label220.Text = "B值:";
            this.label222.AutoSize = true;
            this.label222.Location = new Point(6, 0x45);
            this.label222.Name = "label222";
            this.label222.Size = new Size(0x1d, 12);
            this.label222.TabIndex = 1;
            this.label222.Text = "K值:";
            this.textBox_cail_cell16_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell16_k.Name = "textBox_cail_cell16_k";
            this.textBox_cail_cell16_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell16_k.TabIndex = 0;
            this.groupBox15.Controls.Add(this.textBox_Vy2_27);
            this.groupBox15.Controls.Add(this.textBox_Vx2_27);
            this.groupBox15.Controls.Add(this.textBox_Vy1_27);
            this.groupBox15.Controls.Add(this.textBox_Vx1_27);
            this.groupBox15.Controls.Add(this.label356);
            this.groupBox15.Controls.Add(this.button_cali_cell27);
            this.groupBox15.Controls.Add(this.textBox_cail_cell27_b);
            this.groupBox15.Controls.Add(this.label357);
            this.groupBox15.Controls.Add(this.label358);
            this.groupBox15.Controls.Add(this.button_calc_cell27);
            this.groupBox15.Controls.Add(this.label359);
            this.groupBox15.Controls.Add(this.textBox_cail_cell27_k);
            this.groupBox15.Location = new Point(0x361, 400);
            this.groupBox15.Name = "groupBox15";
            this.groupBox15.Size = new Size(0xa5, 0x7a);
            this.groupBox15.TabIndex = 0x20;
            this.groupBox15.TabStop = false;
            this.groupBox15.Text = "Cell_27";
            this.textBox_Vy2_27.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_27.Name = "textBox_Vy2_27";
            this.textBox_Vy2_27.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_27.TabIndex = 20;
            this.textBox_Vx2_27.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_27.Name = "textBox_Vx2_27";
            this.textBox_Vx2_27.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_27.TabIndex = 0x13;
            this.textBox_Vy1_27.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_27.Name = "textBox_Vy1_27";
            this.textBox_Vy1_27.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_27.TabIndex = 0x12;
            this.textBox_Vx1_27.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_27.Name = "textBox_Vx1_27";
            this.textBox_Vx1_27.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_27.TabIndex = 0x11;
            this.label356.AutoSize = true;
            this.label356.Location = new Point(6, 0x2d);
            this.label356.Name = "label356";
            this.label356.Size = new Size(0x3b, 12);
            this.label356.TabIndex = 13;
            this.label356.Text = "目标电压:";
            this.button_cali_cell27.Location = new Point(0x67, 0x59);
            this.button_cali_cell27.Name = "button_cali_cell27";
            this.button_cali_cell27.Size = new Size(0x3a, 0x17);
            this.button_cali_cell27.TabIndex = 4;
            this.button_cali_cell27.Text = "写入";
            this.button_cali_cell27.UseVisualStyleBackColor = true;
            this.button_cali_cell27.Click += new EventHandler(this.button_cali_cell27_Click);
            this.textBox_cail_cell27_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell27_b.Name = "textBox_cail_cell27_b";
            this.textBox_cail_cell27_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell27_b.TabIndex = 3;
            this.label357.AutoSize = true;
            this.label357.Location = new Point(6, 0x17);
            this.label357.Name = "label357";
            this.label357.Size = new Size(0x3b, 12);
            this.label357.TabIndex = 11;
            this.label357.Text = "当前电压:";
            this.label358.AutoSize = true;
            this.label358.Location = new Point(6, 0x5d);
            this.label358.Name = "label358";
            this.label358.Size = new Size(0x1d, 12);
            this.label358.TabIndex = 2;
            this.label358.Text = "B值:";
            this.button_calc_cell27.Location = new Point(0x67, 0x44);
            this.button_calc_cell27.Name = "button_calc_cell27";
            this.button_calc_cell27.Size = new Size(0x3a, 0x17);
            this.button_calc_cell27.TabIndex = 6;
            this.button_calc_cell27.Text = "计算";
            this.button_calc_cell27.UseVisualStyleBackColor = true;
            this.button_calc_cell27.Click += new EventHandler(this.button_calc_cell27_Click);
            this.label359.AutoSize = true;
            this.label359.Location = new Point(6, 0x48);
            this.label359.Name = "label359";
            this.label359.Size = new Size(0x1d, 12);
            this.label359.TabIndex = 1;
            this.label359.Text = "K值:";
            this.textBox_cail_cell27_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell27_k.Name = "textBox_cail_cell27_k";
            this.textBox_cail_cell27_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell27_k.TabIndex = 0;
            this.groupBox9.Controls.Add(this.textBox_Vy2_20);
            this.groupBox9.Controls.Add(this.textBox_Vx2_20);
            this.groupBox9.Controls.Add(this.textBox_Vy1_20);
            this.groupBox9.Controls.Add(this.textBox_Vx1_20);
            this.groupBox9.Controls.Add(this.label332);
            this.groupBox9.Controls.Add(this.button_cali_cell20);
            this.groupBox9.Controls.Add(this.textBox_cail_cell20_b);
            this.groupBox9.Controls.Add(this.label333);
            this.groupBox9.Controls.Add(this.label334);
            this.groupBox9.Controls.Add(this.button_calc_cell20);
            this.groupBox9.Controls.Add(this.label335);
            this.groupBox9.Controls.Add(this.textBox_cail_cell20_k);
            this.groupBox9.Location = new Point(0x363, 0x110);
            this.groupBox9.Name = "groupBox9";
            this.groupBox9.Size = new Size(0xa5, 0x7a);
            this.groupBox9.TabIndex = 0x19;
            this.groupBox9.TabStop = false;
            this.groupBox9.Text = "Cell_20";
            this.textBox_Vy2_20.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_20.Name = "textBox_Vy2_20";
            this.textBox_Vy2_20.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_20.TabIndex = 20;
            this.textBox_Vx2_20.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_20.Name = "textBox_Vx2_20";
            this.textBox_Vx2_20.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_20.TabIndex = 0x13;
            this.textBox_Vy1_20.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_20.Name = "textBox_Vy1_20";
            this.textBox_Vy1_20.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_20.TabIndex = 0x12;
            this.textBox_Vx1_20.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_20.Name = "textBox_Vx1_20";
            this.textBox_Vx1_20.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_20.TabIndex = 0x11;
            this.label332.AutoSize = true;
            this.label332.Location = new Point(6, 0x2d);
            this.label332.Name = "label332";
            this.label332.Size = new Size(0x3b, 12);
            this.label332.TabIndex = 13;
            this.label332.Text = "目标电压:";
            this.button_cali_cell20.Location = new Point(0x67, 0x59);
            this.button_cali_cell20.Name = "button_cali_cell20";
            this.button_cali_cell20.Size = new Size(0x3a, 0x17);
            this.button_cali_cell20.TabIndex = 4;
            this.button_cali_cell20.Text = "写入";
            this.button_cali_cell20.UseVisualStyleBackColor = true;
            this.button_cali_cell20.Click += new EventHandler(this.button_cali_cell20_Click);
            this.textBox_cail_cell20_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell20_b.Name = "textBox_cail_cell20_b";
            this.textBox_cail_cell20_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell20_b.TabIndex = 3;
            this.label333.AutoSize = true;
            this.label333.Location = new Point(6, 0x17);
            this.label333.Name = "label333";
            this.label333.Size = new Size(0x3b, 12);
            this.label333.TabIndex = 11;
            this.label333.Text = "当前电压:";
            this.label334.AutoSize = true;
            this.label334.Location = new Point(6, 0x5d);
            this.label334.Name = "label334";
            this.label334.Size = new Size(0x1d, 12);
            this.label334.TabIndex = 2;
            this.label334.Text = "B值:";
            this.button_calc_cell20.Location = new Point(0x67, 0x44);
            this.button_calc_cell20.Name = "button_calc_cell20";
            this.button_calc_cell20.Size = new Size(0x3a, 0x17);
            this.button_calc_cell20.TabIndex = 6;
            this.button_calc_cell20.Text = "计算";
            this.button_calc_cell20.UseVisualStyleBackColor = true;
            this.button_calc_cell20.Click += new EventHandler(this.button_calc_cell20_Click);
            this.label335.AutoSize = true;
            this.label335.Location = new Point(6, 0x48);
            this.label335.Name = "label335";
            this.label335.Size = new Size(0x1d, 12);
            this.label335.TabIndex = 1;
            this.label335.Text = "K值:";
            this.textBox_cail_cell20_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell20_k.Name = "textBox_cail_cell20_k";
            this.textBox_cail_cell20_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell20_k.TabIndex = 0;
            this.groupBox16.Controls.Add(this.textBox_Vy2_26);
            this.groupBox16.Controls.Add(this.textBox_Vx2_26);
            this.groupBox16.Controls.Add(this.textBox_Vy1_26);
            this.groupBox16.Controls.Add(this.textBox_Vx1_26);
            this.groupBox16.Controls.Add(this.label360);
            this.groupBox16.Controls.Add(this.button_calc_cell26);
            this.groupBox16.Controls.Add(this.button_cali_cell26);
            this.groupBox16.Controls.Add(this.label361);
            this.groupBox16.Controls.Add(this.textBox_cail_cell26_b);
            this.groupBox16.Controls.Add(this.label362);
            this.groupBox16.Controls.Add(this.label363);
            this.groupBox16.Controls.Add(this.textBox_cail_cell26_k);
            this.groupBox16.Location = new Point(0x2b0, 400);
            this.groupBox16.Name = "groupBox16";
            this.groupBox16.Size = new Size(0xa5, 0x79);
            this.groupBox16.TabIndex = 0x1a;
            this.groupBox16.TabStop = false;
            this.groupBox16.Text = "Cell_26";
            this.textBox_Vy2_26.Location = new Point(0x75, 0x27);
            this.textBox_Vy2_26.Name = "textBox_Vy2_26";
            this.textBox_Vy2_26.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_26.TabIndex = 0x16;
            this.textBox_Vx2_26.Location = new Point(0x75, 0x11);
            this.textBox_Vx2_26.Name = "textBox_Vx2_26";
            this.textBox_Vx2_26.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_26.TabIndex = 0x15;
            this.textBox_Vy1_26.Location = new Point(0x45, 0x27);
            this.textBox_Vy1_26.Name = "textBox_Vy1_26";
            this.textBox_Vy1_26.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_26.TabIndex = 20;
            this.textBox_Vx1_26.Location = new Point(0x45, 0x11);
            this.textBox_Vx1_26.Name = "textBox_Vx1_26";
            this.textBox_Vx1_26.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_26.TabIndex = 0x13;
            this.label360.AutoSize = true;
            this.label360.Location = new Point(8, 0x2c);
            this.label360.Name = "label360";
            this.label360.Size = new Size(0x3b, 12);
            this.label360.TabIndex = 0x12;
            this.label360.Text = "目标电压:";
            this.button_calc_cell26.Location = new Point(0x69, 0x40);
            this.button_calc_cell26.Name = "button_calc_cell26";
            this.button_calc_cell26.Size = new Size(0x3a, 0x17);
            this.button_calc_cell26.TabIndex = 15;
            this.button_calc_cell26.Text = "计算";
            this.button_calc_cell26.UseVisualStyleBackColor = true;
            this.button_calc_cell26.Click += new EventHandler(this.button_calc_cell26_Click);
            this.button_cali_cell26.Location = new Point(0x69, 0x57);
            this.button_cali_cell26.Name = "button_cali_cell26";
            this.button_cali_cell26.Size = new Size(0x3a, 0x17);
            this.button_cali_cell26.TabIndex = 4;
            this.button_cali_cell26.Text = "写入";
            this.button_cali_cell26.UseVisualStyleBackColor = true;
            this.button_cali_cell26.Click += new EventHandler(this.button_cali_cell26_Click);
            this.label361.AutoSize = true;
            this.label361.Location = new Point(8, 0x15);
            this.label361.Name = "label361";
            this.label361.Size = new Size(0x3b, 12);
            this.label361.TabIndex = 0x10;
            this.label361.Text = "当前电压:";
            this.textBox_cail_cell26_b.Location = new Point(0x2b, 0x57);
            this.textBox_cail_cell26_b.Name = "textBox_cail_cell26_b";
            this.textBox_cail_cell26_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell26_b.TabIndex = 3;
            this.label362.AutoSize = true;
            this.label362.Location = new Point(8, 0x59);
            this.label362.Name = "label362";
            this.label362.Size = new Size(0x1d, 12);
            this.label362.TabIndex = 2;
            this.label362.Text = "B值:";
            this.label363.AutoSize = true;
            this.label363.Location = new Point(8, 0x45);
            this.label363.Name = "label363";
            this.label363.Size = new Size(0x1d, 12);
            this.label363.TabIndex = 1;
            this.label363.Text = "K值:";
            this.textBox_cail_cell26_k.Location = new Point(0x2b, 0x41);
            this.textBox_cail_cell26_k.Name = "textBox_cail_cell26_k";
            this.textBox_cail_cell26_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell26_k.TabIndex = 0;
            this.groupBox_Vcell14.Controls.Add(this.textBox_Vy2_14);
            this.groupBox_Vcell14.Controls.Add(this.textBox_Vx2_14);
            this.groupBox_Vcell14.Controls.Add(this.textBox_Vy1_14);
            this.groupBox_Vcell14.Controls.Add(this.textBox_Vx1_14);
            this.groupBox_Vcell14.Controls.Add(this.label192);
            this.groupBox_Vcell14.Controls.Add(this.button_calc_cell14);
            this.groupBox_Vcell14.Controls.Add(this.button_cali_cell14);
            this.groupBox_Vcell14.Controls.Add(this.label193);
            this.groupBox_Vcell14.Controls.Add(this.textBox_cail_cell14_b);
            this.groupBox_Vcell14.Controls.Add(this.label88);
            this.groupBox_Vcell14.Controls.Add(this.label89);
            this.groupBox_Vcell14.Controls.Add(this.textBox_cail_cell14_k);
            this.groupBox_Vcell14.Location = new Point(0x40c, 0x92);
            this.groupBox_Vcell14.Name = "groupBox_Vcell14";
            this.groupBox_Vcell14.Size = new Size(0xa5, 120);
            this.groupBox_Vcell14.TabIndex = 0x13;
            this.groupBox_Vcell14.TabStop = false;
            this.groupBox_Vcell14.Text = "Cell_14";
            this.textBox_Vy2_14.Location = new Point(0x70, 0x27);
            this.textBox_Vy2_14.Name = "textBox_Vy2_14";
            this.textBox_Vy2_14.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_14.TabIndex = 0x16;
            this.textBox_Vx2_14.Location = new Point(0x70, 0x11);
            this.textBox_Vx2_14.Name = "textBox_Vx2_14";
            this.textBox_Vx2_14.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_14.TabIndex = 0x15;
            this.textBox_Vy1_14.Location = new Point(0x40, 0x27);
            this.textBox_Vy1_14.Name = "textBox_Vy1_14";
            this.textBox_Vy1_14.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_14.TabIndex = 20;
            this.textBox_Vx1_14.Location = new Point(0x40, 0x11);
            this.textBox_Vx1_14.Name = "textBox_Vx1_14";
            this.textBox_Vx1_14.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_14.TabIndex = 0x13;
            this.label192.AutoSize = true;
            this.label192.Location = new Point(6, 40);
            this.label192.Name = "label192";
            this.label192.Size = new Size(0x3b, 12);
            this.label192.TabIndex = 0x12;
            this.label192.Text = "目标电压:";
            this.button_calc_cell14.Location = new Point(0x67, 0x40);
            this.button_calc_cell14.Name = "button_calc_cell14";
            this.button_calc_cell14.Size = new Size(0x3a, 0x17);
            this.button_calc_cell14.TabIndex = 15;
            this.button_calc_cell14.Text = "计算";
            this.button_calc_cell14.UseVisualStyleBackColor = true;
            this.button_calc_cell14.Click += new EventHandler(this.button_calc_cell14_Click);
            this.button_cali_cell14.Location = new Point(0x67, 0x57);
            this.button_cali_cell14.Name = "button_cali_cell14";
            this.button_cali_cell14.Size = new Size(0x3a, 0x17);
            this.button_cali_cell14.TabIndex = 4;
            this.button_cali_cell14.Text = "写入";
            this.button_cali_cell14.UseVisualStyleBackColor = true;
            this.button_cali_cell14.Click += new EventHandler(this.button_cali_cell14_Click);
            this.label193.AutoSize = true;
            this.label193.Location = new Point(6, 20);
            this.label193.Name = "label193";
            this.label193.Size = new Size(0x3b, 12);
            this.label193.TabIndex = 0x10;
            this.label193.Text = "当前电压:";
            this.textBox_cail_cell14_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell14_b.Name = "textBox_cail_cell14_b";
            this.textBox_cail_cell14_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell14_b.TabIndex = 3;
            this.label88.AutoSize = true;
            this.label88.Location = new Point(6, 0x59);
            this.label88.Name = "label88";
            this.label88.Size = new Size(0x1d, 12);
            this.label88.TabIndex = 2;
            this.label88.Text = "B值:";
            this.label89.AutoSize = true;
            this.label89.Location = new Point(6, 0x45);
            this.label89.Name = "label89";
            this.label89.Size = new Size(0x1d, 12);
            this.label89.TabIndex = 1;
            this.label89.Text = "K值:";
            this.textBox_cail_cell14_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell14_k.Name = "textBox_cail_cell14_k";
            this.textBox_cail_cell14_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell14_k.TabIndex = 0;
            this.groupBox17.Controls.Add(this.textBox_Vy2_22);
            this.groupBox17.Controls.Add(this.textBox_Vx2_22);
            this.groupBox17.Controls.Add(this.textBox_Vy1_22);
            this.groupBox17.Controls.Add(this.textBox_Vx1_22);
            this.groupBox17.Controls.Add(this.label364);
            this.groupBox17.Controls.Add(this.button_cali_cell22);
            this.groupBox17.Controls.Add(this.textBox_cail_cell22_b);
            this.groupBox17.Controls.Add(this.label365);
            this.groupBox17.Controls.Add(this.label366);
            this.groupBox17.Controls.Add(this.button_calc_cell22);
            this.groupBox17.Controls.Add(this.label367);
            this.groupBox17.Controls.Add(this.textBox_cail_cell22_k);
            this.groupBox17.Location = new Point(8, 0x18f);
            this.groupBox17.Name = "groupBox17";
            this.groupBox17.Size = new Size(0xa5, 0x7a);
            this.groupBox17.TabIndex = 0x1f;
            this.groupBox17.TabStop = false;
            this.groupBox17.Text = "Cell_22";
            this.textBox_Vy2_22.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_22.Name = "textBox_Vy2_22";
            this.textBox_Vy2_22.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_22.TabIndex = 20;
            this.textBox_Vx2_22.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_22.Name = "textBox_Vx2_22";
            this.textBox_Vx2_22.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_22.TabIndex = 0x13;
            this.textBox_Vy1_22.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_22.Name = "textBox_Vy1_22";
            this.textBox_Vy1_22.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_22.TabIndex = 0x12;
            this.textBox_Vx1_22.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_22.Name = "textBox_Vx1_22";
            this.textBox_Vx1_22.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_22.TabIndex = 0x11;
            this.label364.AutoSize = true;
            this.label364.Location = new Point(6, 0x2d);
            this.label364.Name = "label364";
            this.label364.Size = new Size(0x3b, 12);
            this.label364.TabIndex = 13;
            this.label364.Text = "目标电压:";
            this.button_cali_cell22.Location = new Point(0x67, 0x59);
            this.button_cali_cell22.Name = "button_cali_cell22";
            this.button_cali_cell22.Size = new Size(0x3a, 0x17);
            this.button_cali_cell22.TabIndex = 4;
            this.button_cali_cell22.Text = "写入";
            this.button_cali_cell22.UseVisualStyleBackColor = true;
            this.button_cali_cell22.Click += new EventHandler(this.button_cali_cell22_Click);
            this.textBox_cail_cell22_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell22_b.Name = "textBox_cail_cell22_b";
            this.textBox_cail_cell22_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell22_b.TabIndex = 3;
            this.label365.AutoSize = true;
            this.label365.Location = new Point(6, 0x17);
            this.label365.Name = "label365";
            this.label365.Size = new Size(0x3b, 12);
            this.label365.TabIndex = 11;
            this.label365.Text = "当前电压:";
            this.label366.AutoSize = true;
            this.label366.Location = new Point(6, 0x5d);
            this.label366.Name = "label366";
            this.label366.Size = new Size(0x1d, 12);
            this.label366.TabIndex = 2;
            this.label366.Text = "B值:";
            this.button_calc_cell22.Location = new Point(0x67, 0x44);
            this.button_calc_cell22.Name = "button_calc_cell22";
            this.button_calc_cell22.Size = new Size(0x3a, 0x17);
            this.button_calc_cell22.TabIndex = 6;
            this.button_calc_cell22.Text = "计算";
            this.button_calc_cell22.UseVisualStyleBackColor = true;
            this.button_calc_cell22.Click += new EventHandler(this.button_calc_cell22_Click);
            this.label367.AutoSize = true;
            this.label367.Location = new Point(6, 0x48);
            this.label367.Name = "label367";
            this.label367.Size = new Size(0x1d, 12);
            this.label367.TabIndex = 1;
            this.label367.Text = "K值:";
            this.textBox_cail_cell22_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell22_k.Name = "textBox_cail_cell22_k";
            this.textBox_cail_cell22_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell22_k.TabIndex = 0;
            this.groupBox18.Controls.Add(this.textBox_Vy2_25);
            this.groupBox18.Controls.Add(this.textBox_Vx2_25);
            this.groupBox18.Controls.Add(this.textBox_Vy1_25);
            this.groupBox18.Controls.Add(this.textBox_Vx1_25);
            this.groupBox18.Controls.Add(this.label368);
            this.groupBox18.Controls.Add(this.button_calc_cell25);
            this.groupBox18.Controls.Add(this.button_cali_cell25);
            this.groupBox18.Controls.Add(this.label369);
            this.groupBox18.Controls.Add(this.textBox_cail_cell25_b);
            this.groupBox18.Controls.Add(this.label370);
            this.groupBox18.Controls.Add(this.label371);
            this.groupBox18.Controls.Add(this.textBox_cail_cell25_k);
            this.groupBox18.Location = new Point(520, 0x18f);
            this.groupBox18.Name = "groupBox18";
            this.groupBox18.Size = new Size(0xa5, 0x7a);
            this.groupBox18.TabIndex = 0x1b;
            this.groupBox18.TabStop = false;
            this.groupBox18.Text = "Cell_25";
            this.textBox_Vy2_25.Location = new Point(0x6c, 40);
            this.textBox_Vy2_25.Name = "textBox_Vy2_25";
            this.textBox_Vy2_25.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_25.TabIndex = 0x16;
            this.textBox_Vx2_25.Location = new Point(0x6c, 20);
            this.textBox_Vx2_25.Name = "textBox_Vx2_25";
            this.textBox_Vx2_25.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_25.TabIndex = 0x15;
            this.textBox_Vy1_25.Location = new Point(60, 40);
            this.textBox_Vy1_25.Name = "textBox_Vy1_25";
            this.textBox_Vy1_25.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_25.TabIndex = 20;
            this.textBox_Vx1_25.Location = new Point(60, 20);
            this.textBox_Vx1_25.Name = "textBox_Vx1_25";
            this.textBox_Vx1_25.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_25.TabIndex = 0x13;
            this.label368.AutoSize = true;
            this.label368.Location = new Point(6, 0x2c);
            this.label368.Name = "label368";
            this.label368.Size = new Size(0x3b, 12);
            this.label368.TabIndex = 0x12;
            this.label368.Text = "目标电压:";
            this.button_calc_cell25.Location = new Point(0x67, 0x44);
            this.button_calc_cell25.Name = "button_calc_cell25";
            this.button_calc_cell25.Size = new Size(0x3a, 0x17);
            this.button_calc_cell25.TabIndex = 15;
            this.button_calc_cell25.Text = "计算";
            this.button_calc_cell25.UseVisualStyleBackColor = true;
            this.button_calc_cell25.Click += new EventHandler(this.button_calc_cell25_Click);
            this.button_cali_cell25.Location = new Point(0x67, 0x59);
            this.button_cali_cell25.Name = "button_cali_cell25";
            this.button_cali_cell25.Size = new Size(0x3a, 0x17);
            this.button_cali_cell25.TabIndex = 4;
            this.button_cali_cell25.Text = "写入";
            this.button_cali_cell25.UseVisualStyleBackColor = true;
            this.button_cali_cell25.Click += new EventHandler(this.button_cali_cell25_Click);
            this.label369.AutoSize = true;
            this.label369.Location = new Point(6, 0x16);
            this.label369.Name = "label369";
            this.label369.Size = new Size(0x3b, 12);
            this.label369.TabIndex = 0x10;
            this.label369.Text = "当前电压:";
            this.textBox_cail_cell25_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell25_b.Name = "textBox_cail_cell25_b";
            this.textBox_cail_cell25_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell25_b.TabIndex = 3;
            this.label370.AutoSize = true;
            this.label370.Location = new Point(6, 0x5d);
            this.label370.Name = "label370";
            this.label370.Size = new Size(0x1d, 12);
            this.label370.TabIndex = 2;
            this.label370.Text = "B值:";
            this.label371.AutoSize = true;
            this.label371.Location = new Point(6, 0x48);
            this.label371.Name = "label371";
            this.label371.Size = new Size(0x1d, 12);
            this.label371.TabIndex = 1;
            this.label371.Text = "K值:";
            this.textBox_cail_cell25_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell25_k.Name = "textBox_cail_cell25_k";
            this.textBox_cail_cell25_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell25_k.TabIndex = 0;
            this.groupBox10.Controls.Add(this.textBox_Vy2_19);
            this.groupBox10.Controls.Add(this.textBox_Vx2_19);
            this.groupBox10.Controls.Add(this.textBox_Vy1_19);
            this.groupBox10.Controls.Add(this.textBox_Vx1_19);
            this.groupBox10.Controls.Add(this.label336);
            this.groupBox10.Controls.Add(this.button_calc_cell19);
            this.groupBox10.Controls.Add(this.button_cali_cell19);
            this.groupBox10.Controls.Add(this.label337);
            this.groupBox10.Controls.Add(this.textBox_cail_cell19_b);
            this.groupBox10.Controls.Add(this.label338);
            this.groupBox10.Controls.Add(this.label339);
            this.groupBox10.Controls.Add(this.textBox_cail_cell19_k);
            this.groupBox10.Location = new Point(690, 0x110);
            this.groupBox10.Name = "groupBox10";
            this.groupBox10.Size = new Size(0xa5, 0x79);
            this.groupBox10.TabIndex = 0x15;
            this.groupBox10.TabStop = false;
            this.groupBox10.Text = "Cell_19";
            this.textBox_Vy2_19.Location = new Point(0x75, 0x27);
            this.textBox_Vy2_19.Name = "textBox_Vy2_19";
            this.textBox_Vy2_19.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_19.TabIndex = 0x16;
            this.textBox_Vx2_19.Location = new Point(0x75, 0x11);
            this.textBox_Vx2_19.Name = "textBox_Vx2_19";
            this.textBox_Vx2_19.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_19.TabIndex = 0x15;
            this.textBox_Vy1_19.Location = new Point(0x45, 0x27);
            this.textBox_Vy1_19.Name = "textBox_Vy1_19";
            this.textBox_Vy1_19.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_19.TabIndex = 20;
            this.textBox_Vx1_19.Location = new Point(0x45, 0x11);
            this.textBox_Vx1_19.Name = "textBox_Vx1_19";
            this.textBox_Vx1_19.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_19.TabIndex = 0x13;
            this.label336.AutoSize = true;
            this.label336.Location = new Point(8, 0x2c);
            this.label336.Name = "label336";
            this.label336.Size = new Size(0x3b, 12);
            this.label336.TabIndex = 0x12;
            this.label336.Text = "目标电压:";
            this.button_calc_cell19.Location = new Point(0x69, 0x40);
            this.button_calc_cell19.Name = "button_calc_cell19";
            this.button_calc_cell19.Size = new Size(0x3a, 0x17);
            this.button_calc_cell19.TabIndex = 15;
            this.button_calc_cell19.Text = "计算";
            this.button_calc_cell19.UseVisualStyleBackColor = true;
            this.button_calc_cell19.Click += new EventHandler(this.button_calc_cell19_Click);
            this.button_cali_cell19.Location = new Point(0x69, 0x57);
            this.button_cali_cell19.Name = "button_cali_cell19";
            this.button_cali_cell19.Size = new Size(0x3a, 0x17);
            this.button_cali_cell19.TabIndex = 4;
            this.button_cali_cell19.Text = "写入";
            this.button_cali_cell19.UseVisualStyleBackColor = true;
            this.button_cali_cell19.Click += new EventHandler(this.button_cali_cell19_Click);
            this.label337.AutoSize = true;
            this.label337.Location = new Point(8, 0x15);
            this.label337.Name = "label337";
            this.label337.Size = new Size(0x3b, 12);
            this.label337.TabIndex = 0x10;
            this.label337.Text = "当前电压:";
            this.textBox_cail_cell19_b.Location = new Point(0x2b, 0x57);
            this.textBox_cail_cell19_b.Name = "textBox_cail_cell19_b";
            this.textBox_cail_cell19_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell19_b.TabIndex = 3;
            this.label338.AutoSize = true;
            this.label338.Location = new Point(8, 0x59);
            this.label338.Name = "label338";
            this.label338.Size = new Size(0x1d, 12);
            this.label338.TabIndex = 2;
            this.label338.Text = "B值:";
            this.label339.AutoSize = true;
            this.label339.Location = new Point(8, 0x45);
            this.label339.Name = "label339";
            this.label339.Size = new Size(0x1d, 12);
            this.label339.TabIndex = 1;
            this.label339.Text = "K值:";
            this.textBox_cail_cell19_k.Location = new Point(0x2b, 0x41);
            this.textBox_cail_cell19_k.Name = "textBox_cail_cell19_k";
            this.textBox_cail_cell19_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell19_k.TabIndex = 0;
            this.groupBox19.Controls.Add(this.textBox_Vy2_24);
            this.groupBox19.Controls.Add(this.textBox_Vx2_24);
            this.groupBox19.Controls.Add(this.textBox_Vy1_24);
            this.groupBox19.Controls.Add(this.textBox_Vx1_24);
            this.groupBox19.Controls.Add(this.button_calc_cell24);
            this.groupBox19.Controls.Add(this.label372);
            this.groupBox19.Controls.Add(this.button_cali_cell24);
            this.groupBox19.Controls.Add(this.textBox_cail_cell24_b);
            this.groupBox19.Controls.Add(this.label373);
            this.groupBox19.Controls.Add(this.label374);
            this.groupBox19.Controls.Add(this.label375);
            this.groupBox19.Controls.Add(this.textBox_cail_cell24_k);
            this.groupBox19.Location = new Point(0x15d, 0x18f);
            this.groupBox19.Name = "groupBox19";
            this.groupBox19.Size = new Size(0xa5, 0x7a);
            this.groupBox19.TabIndex = 0x1d;
            this.groupBox19.TabStop = false;
            this.groupBox19.Text = "Cell_24";
            this.textBox_Vy2_24.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_24.Name = "textBox_Vy2_24";
            this.textBox_Vy2_24.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_24.TabIndex = 20;
            this.textBox_Vx2_24.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_24.Name = "textBox_Vx2_24";
            this.textBox_Vx2_24.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_24.TabIndex = 0x13;
            this.textBox_Vy1_24.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_24.Name = "textBox_Vy1_24";
            this.textBox_Vy1_24.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_24.TabIndex = 0x12;
            this.textBox_Vx1_24.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_24.Name = "textBox_Vx1_24";
            this.textBox_Vx1_24.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_24.TabIndex = 0x11;
            this.button_calc_cell24.Location = new Point(0x67, 0x44);
            this.button_calc_cell24.Name = "button_calc_cell24";
            this.button_calc_cell24.Size = new Size(0x3a, 0x17);
            this.button_calc_cell24.TabIndex = 10;
            this.button_calc_cell24.Text = "计算";
            this.button_calc_cell24.UseVisualStyleBackColor = true;
            this.button_calc_cell24.Click += new EventHandler(this.button_calc_cell24_Click);
            this.label372.AutoSize = true;
            this.label372.Location = new Point(6, 0x2d);
            this.label372.Name = "label372";
            this.label372.Size = new Size(0x3b, 12);
            this.label372.TabIndex = 13;
            this.label372.Text = "目标电压:";
            this.button_cali_cell24.Location = new Point(0x67, 0x59);
            this.button_cali_cell24.Name = "button_cali_cell24";
            this.button_cali_cell24.Size = new Size(0x3a, 0x17);
            this.button_cali_cell24.TabIndex = 4;
            this.button_cali_cell24.Text = "写入";
            this.button_cali_cell24.UseVisualStyleBackColor = true;
            this.button_cali_cell24.Click += new EventHandler(this.button_cali_cell24_Click);
            this.textBox_cail_cell24_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell24_b.Name = "textBox_cail_cell24_b";
            this.textBox_cail_cell24_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell24_b.TabIndex = 3;
            this.label373.AutoSize = true;
            this.label373.Location = new Point(6, 0x17);
            this.label373.Name = "label373";
            this.label373.Size = new Size(0x3b, 12);
            this.label373.TabIndex = 11;
            this.label373.Text = "当前电压:";
            this.label374.AutoSize = true;
            this.label374.Location = new Point(6, 0x5d);
            this.label374.Name = "label374";
            this.label374.Size = new Size(0x1d, 12);
            this.label374.TabIndex = 2;
            this.label374.Text = "B值:";
            this.label375.AutoSize = true;
            this.label375.Location = new Point(6, 0x48);
            this.label375.Name = "label375";
            this.label375.Size = new Size(0x1d, 12);
            this.label375.TabIndex = 1;
            this.label375.Text = "K值:";
            this.textBox_cail_cell24_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell24_k.Name = "textBox_cail_cell24_k";
            this.textBox_cail_cell24_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell24_k.TabIndex = 0;
            this.groupBox_Vcell15.Controls.Add(this.textBox_Vy2_15);
            this.groupBox_Vcell15.Controls.Add(this.textBox_Vx2_15);
            this.groupBox_Vcell15.Controls.Add(this.textBox_Vy1_15);
            this.groupBox_Vcell15.Controls.Add(this.textBox_Vx1_15);
            this.groupBox_Vcell15.Controls.Add(this.label223);
            this.groupBox_Vcell15.Controls.Add(this.button_cali_cell15);
            this.groupBox_Vcell15.Controls.Add(this.textBox_cail_cell15_b);
            this.groupBox_Vcell15.Controls.Add(this.label224);
            this.groupBox_Vcell15.Controls.Add(this.label225);
            this.groupBox_Vcell15.Controls.Add(this.button_calc_cell15);
            this.groupBox_Vcell15.Controls.Add(this.label226);
            this.groupBox_Vcell15.Controls.Add(this.textBox_cail_cell15_k);
            this.groupBox_Vcell15.Location = new Point(10, 0x10f);
            this.groupBox_Vcell15.Name = "groupBox_Vcell15";
            this.groupBox_Vcell15.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell15.TabIndex = 0x18;
            this.groupBox_Vcell15.TabStop = false;
            this.groupBox_Vcell15.Text = "Cell_15";
            this.textBox_Vy2_15.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_15.Name = "textBox_Vy2_15";
            this.textBox_Vy2_15.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_15.TabIndex = 20;
            this.textBox_Vx2_15.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_15.Name = "textBox_Vx2_15";
            this.textBox_Vx2_15.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_15.TabIndex = 0x13;
            this.textBox_Vy1_15.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_15.Name = "textBox_Vy1_15";
            this.textBox_Vy1_15.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_15.TabIndex = 0x12;
            this.textBox_Vx1_15.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_15.Name = "textBox_Vx1_15";
            this.textBox_Vx1_15.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_15.TabIndex = 0x11;
            this.label223.AutoSize = true;
            this.label223.Location = new Point(6, 0x2d);
            this.label223.Name = "label223";
            this.label223.Size = new Size(0x3b, 12);
            this.label223.TabIndex = 13;
            this.label223.Text = "目标电压:";
            this.button_cali_cell15.Location = new Point(0x67, 0x59);
            this.button_cali_cell15.Name = "button_cali_cell15";
            this.button_cali_cell15.Size = new Size(0x3a, 0x17);
            this.button_cali_cell15.TabIndex = 4;
            this.button_cali_cell15.Text = "写入";
            this.button_cali_cell15.UseVisualStyleBackColor = true;
            this.button_cali_cell15.Click += new EventHandler(this.button_cali_cell15_Click);
            this.textBox_cail_cell15_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell15_b.Name = "textBox_cail_cell15_b";
            this.textBox_cail_cell15_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell15_b.TabIndex = 3;
            this.label224.AutoSize = true;
            this.label224.Location = new Point(6, 0x17);
            this.label224.Name = "label224";
            this.label224.Size = new Size(0x3b, 12);
            this.label224.TabIndex = 11;
            this.label224.Text = "当前电压:";
            this.label225.AutoSize = true;
            this.label225.Location = new Point(6, 0x5d);
            this.label225.Name = "label225";
            this.label225.Size = new Size(0x1d, 12);
            this.label225.TabIndex = 2;
            this.label225.Text = "B值:";
            this.button_calc_cell15.Location = new Point(0x67, 0x44);
            this.button_calc_cell15.Name = "button_calc_cell15";
            this.button_calc_cell15.Size = new Size(0x3a, 0x17);
            this.button_calc_cell15.TabIndex = 6;
            this.button_calc_cell15.Text = "计算";
            this.button_calc_cell15.UseVisualStyleBackColor = true;
            this.button_calc_cell15.Click += new EventHandler(this.button_calc_cell15_Click);
            this.label226.AutoSize = true;
            this.label226.Location = new Point(6, 0x48);
            this.label226.Name = "label226";
            this.label226.Size = new Size(0x1d, 12);
            this.label226.TabIndex = 1;
            this.label226.Text = "K值:";
            this.textBox_cail_cell15_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell15_k.Name = "textBox_cail_cell15_k";
            this.textBox_cail_cell15_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell15_k.TabIndex = 0;
            this.groupBox11.Controls.Add(this.textBox_Vy2_18);
            this.groupBox11.Controls.Add(this.textBox_Vx2_18);
            this.groupBox11.Controls.Add(this.textBox_Vy1_18);
            this.groupBox11.Controls.Add(this.textBox_Vx1_18);
            this.groupBox11.Controls.Add(this.label340);
            this.groupBox11.Controls.Add(this.button_calc_cell18);
            this.groupBox11.Controls.Add(this.button_cali_cell18);
            this.groupBox11.Controls.Add(this.label341);
            this.groupBox11.Controls.Add(this.textBox_cail_cell18_b);
            this.groupBox11.Controls.Add(this.label342);
            this.groupBox11.Controls.Add(this.label343);
            this.groupBox11.Controls.Add(this.textBox_cail_cell18_k);
            this.groupBox11.Location = new Point(0x20a, 0x10f);
            this.groupBox11.Name = "groupBox11";
            this.groupBox11.Size = new Size(0xa5, 0x7a);
            this.groupBox11.TabIndex = 0x16;
            this.groupBox11.TabStop = false;
            this.groupBox11.Text = "Cell_18";
            this.textBox_Vy2_18.Location = new Point(0x6c, 40);
            this.textBox_Vy2_18.Name = "textBox_Vy2_18";
            this.textBox_Vy2_18.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_18.TabIndex = 0x16;
            this.textBox_Vx2_18.Location = new Point(0x6c, 20);
            this.textBox_Vx2_18.Name = "textBox_Vx2_18";
            this.textBox_Vx2_18.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_18.TabIndex = 0x15;
            this.textBox_Vy1_18.Location = new Point(60, 40);
            this.textBox_Vy1_18.Name = "textBox_Vy1_18";
            this.textBox_Vy1_18.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_18.TabIndex = 20;
            this.textBox_Vx1_18.Location = new Point(60, 20);
            this.textBox_Vx1_18.Name = "textBox_Vx1_18";
            this.textBox_Vx1_18.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_18.TabIndex = 0x13;
            this.label340.AutoSize = true;
            this.label340.Location = new Point(6, 0x2c);
            this.label340.Name = "label340";
            this.label340.Size = new Size(0x3b, 12);
            this.label340.TabIndex = 0x12;
            this.label340.Text = "目标电压:";
            this.button_calc_cell18.Location = new Point(0x67, 0x44);
            this.button_calc_cell18.Name = "button_calc_cell18";
            this.button_calc_cell18.Size = new Size(0x3a, 0x17);
            this.button_calc_cell18.TabIndex = 15;
            this.button_calc_cell18.Text = "计算";
            this.button_calc_cell18.UseVisualStyleBackColor = true;
            this.button_calc_cell18.Click += new EventHandler(this.button_calc_cell18_Click);
            this.button_cali_cell18.Location = new Point(0x67, 0x59);
            this.button_cali_cell18.Name = "button_cali_cell18";
            this.button_cali_cell18.Size = new Size(0x3a, 0x17);
            this.button_cali_cell18.TabIndex = 4;
            this.button_cali_cell18.Text = "写入";
            this.button_cali_cell18.UseVisualStyleBackColor = true;
            this.button_cali_cell18.Click += new EventHandler(this.button_cali_cell18_Click);
            this.label341.AutoSize = true;
            this.label341.Location = new Point(6, 0x16);
            this.label341.Name = "label341";
            this.label341.Size = new Size(0x3b, 12);
            this.label341.TabIndex = 0x10;
            this.label341.Text = "当前电压:";
            this.textBox_cail_cell18_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell18_b.Name = "textBox_cail_cell18_b";
            this.textBox_cail_cell18_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell18_b.TabIndex = 3;
            this.label342.AutoSize = true;
            this.label342.Location = new Point(6, 0x5d);
            this.label342.Name = "label342";
            this.label342.Size = new Size(0x1d, 12);
            this.label342.TabIndex = 2;
            this.label342.Text = "B值:";
            this.label343.AutoSize = true;
            this.label343.Location = new Point(6, 0x48);
            this.label343.Name = "label343";
            this.label343.Size = new Size(0x1d, 12);
            this.label343.TabIndex = 1;
            this.label343.Text = "K值:";
            this.textBox_cail_cell18_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell18_k.Name = "textBox_cail_cell18_k";
            this.textBox_cail_cell18_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell18_k.TabIndex = 0;
            this.groupBox12.Controls.Add(this.textBox_Vy2_17);
            this.groupBox12.Controls.Add(this.textBox_Vx2_17);
            this.groupBox12.Controls.Add(this.textBox_Vy1_17);
            this.groupBox12.Controls.Add(this.textBox_Vx1_17);
            this.groupBox12.Controls.Add(this.button_calc_cell17);
            this.groupBox12.Controls.Add(this.label344);
            this.groupBox12.Controls.Add(this.button_cali_cell17);
            this.groupBox12.Controls.Add(this.textBox_cail_cell17_b);
            this.groupBox12.Controls.Add(this.label345);
            this.groupBox12.Controls.Add(this.label346);
            this.groupBox12.Controls.Add(this.label347);
            this.groupBox12.Controls.Add(this.textBox_cail_cell17_k);
            this.groupBox12.Location = new Point(0x15f, 0x10f);
            this.groupBox12.Name = "groupBox12";
            this.groupBox12.Size = new Size(0xa5, 0x7a);
            this.groupBox12.TabIndex = 0x17;
            this.groupBox12.TabStop = false;
            this.groupBox12.Text = "Cell_17";
            this.textBox_Vy2_17.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_17.Name = "textBox_Vy2_17";
            this.textBox_Vy2_17.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_17.TabIndex = 20;
            this.textBox_Vx2_17.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_17.Name = "textBox_Vx2_17";
            this.textBox_Vx2_17.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_17.TabIndex = 0x13;
            this.textBox_Vy1_17.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_17.Name = "textBox_Vy1_17";
            this.textBox_Vy1_17.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_17.TabIndex = 0x12;
            this.textBox_Vx1_17.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_17.Name = "textBox_Vx1_17";
            this.textBox_Vx1_17.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_17.TabIndex = 0x11;
            this.button_calc_cell17.Location = new Point(0x67, 0x44);
            this.button_calc_cell17.Name = "button_calc_cell17";
            this.button_calc_cell17.Size = new Size(0x3a, 0x17);
            this.button_calc_cell17.TabIndex = 10;
            this.button_calc_cell17.Text = "计算";
            this.button_calc_cell17.UseVisualStyleBackColor = true;
            this.button_calc_cell17.Click += new EventHandler(this.button_calc_cell17_Click);
            this.label344.AutoSize = true;
            this.label344.Location = new Point(6, 0x2d);
            this.label344.Name = "label344";
            this.label344.Size = new Size(0x3b, 12);
            this.label344.TabIndex = 13;
            this.label344.Text = "目标电压:";
            this.button_cali_cell17.Location = new Point(0x67, 0x59);
            this.button_cali_cell17.Name = "button_cali_cell17";
            this.button_cali_cell17.Size = new Size(0x3a, 0x17);
            this.button_cali_cell17.TabIndex = 4;
            this.button_cali_cell17.Text = "写入";
            this.button_cali_cell17.UseVisualStyleBackColor = true;
            this.button_cali_cell17.Click += new EventHandler(this.button_cali_cell17_Click);
            this.textBox_cail_cell17_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell17_b.Name = "textBox_cail_cell17_b";
            this.textBox_cail_cell17_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell17_b.TabIndex = 3;
            this.label345.AutoSize = true;
            this.label345.Location = new Point(6, 0x17);
            this.label345.Name = "label345";
            this.label345.Size = new Size(0x3b, 12);
            this.label345.TabIndex = 11;
            this.label345.Text = "当前电压:";
            this.label346.AutoSize = true;
            this.label346.Location = new Point(6, 0x5d);
            this.label346.Name = "label346";
            this.label346.Size = new Size(0x1d, 12);
            this.label346.TabIndex = 2;
            this.label346.Text = "B值:";
            this.label347.AutoSize = true;
            this.label347.Location = new Point(6, 0x48);
            this.label347.Name = "label347";
            this.label347.Size = new Size(0x1d, 12);
            this.label347.TabIndex = 1;
            this.label347.Text = "K值:";
            this.textBox_cail_cell17_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell17_k.Name = "textBox_cail_cell17_k";
            this.textBox_cail_cell17_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell17_k.TabIndex = 0;
            this.groupBox_Vcell13.Controls.Add(this.textBox_Vy2_13);
            this.groupBox_Vcell13.Controls.Add(this.textBox_Vx2_13);
            this.groupBox_Vcell13.Controls.Add(this.textBox_Vy1_13);
            this.groupBox_Vcell13.Controls.Add(this.textBox_Vx1_13);
            this.groupBox_Vcell13.Controls.Add(this.label182);
            this.groupBox_Vcell13.Controls.Add(this.button_cali_cell13);
            this.groupBox_Vcell13.Controls.Add(this.textBox_cail_cell13_b);
            this.groupBox_Vcell13.Controls.Add(this.label183);
            this.groupBox_Vcell13.Controls.Add(this.label90);
            this.groupBox_Vcell13.Controls.Add(this.button_calc_cell13);
            this.groupBox_Vcell13.Controls.Add(this.label91);
            this.groupBox_Vcell13.Controls.Add(this.textBox_cail_cell13_k);
            this.groupBox_Vcell13.Location = new Point(0x363, 0x92);
            this.groupBox_Vcell13.Name = "groupBox_Vcell13";
            this.groupBox_Vcell13.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell13.TabIndex = 20;
            this.groupBox_Vcell13.TabStop = false;
            this.groupBox_Vcell13.Text = "Cell_13";
            this.textBox_Vy2_13.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_13.Name = "textBox_Vy2_13";
            this.textBox_Vy2_13.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_13.TabIndex = 20;
            this.textBox_Vx2_13.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_13.Name = "textBox_Vx2_13";
            this.textBox_Vx2_13.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_13.TabIndex = 0x13;
            this.textBox_Vy1_13.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_13.Name = "textBox_Vy1_13";
            this.textBox_Vy1_13.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_13.TabIndex = 0x12;
            this.textBox_Vx1_13.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_13.Name = "textBox_Vx1_13";
            this.textBox_Vx1_13.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_13.TabIndex = 0x11;
            this.label182.AutoSize = true;
            this.label182.Location = new Point(6, 0x2d);
            this.label182.Name = "label182";
            this.label182.Size = new Size(0x3b, 12);
            this.label182.TabIndex = 13;
            this.label182.Text = "目标电压:";
            this.button_cali_cell13.Location = new Point(0x67, 0x59);
            this.button_cali_cell13.Name = "button_cali_cell13";
            this.button_cali_cell13.Size = new Size(0x3a, 0x17);
            this.button_cali_cell13.TabIndex = 4;
            this.button_cali_cell13.Text = "写入";
            this.button_cali_cell13.UseVisualStyleBackColor = true;
            this.button_cali_cell13.Click += new EventHandler(this.button_cali_cell13_Click);
            this.textBox_cail_cell13_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell13_b.Name = "textBox_cail_cell13_b";
            this.textBox_cail_cell13_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell13_b.TabIndex = 3;
            this.label183.AutoSize = true;
            this.label183.Location = new Point(6, 0x17);
            this.label183.Name = "label183";
            this.label183.Size = new Size(0x3b, 12);
            this.label183.TabIndex = 11;
            this.label183.Text = "当前电压:";
            this.label90.AutoSize = true;
            this.label90.Location = new Point(6, 0x5d);
            this.label90.Name = "label90";
            this.label90.Size = new Size(0x1d, 12);
            this.label90.TabIndex = 2;
            this.label90.Text = "B值:";
            this.button_calc_cell13.Location = new Point(0x67, 0x44);
            this.button_calc_cell13.Name = "button_calc_cell13";
            this.button_calc_cell13.Size = new Size(0x3a, 0x17);
            this.button_calc_cell13.TabIndex = 6;
            this.button_calc_cell13.Text = "计算";
            this.button_calc_cell13.UseVisualStyleBackColor = true;
            this.button_calc_cell13.Click += new EventHandler(this.button_calc_cell13_Click);
            this.label91.AutoSize = true;
            this.label91.Location = new Point(6, 0x48);
            this.label91.Name = "label91";
            this.label91.Size = new Size(0x1d, 12);
            this.label91.TabIndex = 1;
            this.label91.Text = "K值:";
            this.textBox_cail_cell13_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell13_k.Name = "textBox_cail_cell13_k";
            this.textBox_cail_cell13_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell13_k.TabIndex = 0;
            this.groupBox_Vcell12.Controls.Add(this.textBox_Vy2_12);
            this.groupBox_Vcell12.Controls.Add(this.textBox_Vx2_12);
            this.groupBox_Vcell12.Controls.Add(this.textBox_Vy1_12);
            this.groupBox_Vcell12.Controls.Add(this.textBox_Vx1_12);
            this.groupBox_Vcell12.Controls.Add(this.label200);
            this.groupBox_Vcell12.Controls.Add(this.button_calc_cell12);
            this.groupBox_Vcell12.Controls.Add(this.button_cali_cell12);
            this.groupBox_Vcell12.Controls.Add(this.label201);
            this.groupBox_Vcell12.Controls.Add(this.textBox_cail_cell12_b);
            this.groupBox_Vcell12.Controls.Add(this.label76);
            this.groupBox_Vcell12.Controls.Add(this.label77);
            this.groupBox_Vcell12.Controls.Add(this.textBox_cail_cell12_k);
            this.groupBox_Vcell12.Location = new Point(690, 0x92);
            this.groupBox_Vcell12.Name = "groupBox_Vcell12";
            this.groupBox_Vcell12.Size = new Size(0xa5, 0x79);
            this.groupBox_Vcell12.TabIndex = 14;
            this.groupBox_Vcell12.TabStop = false;
            this.groupBox_Vcell12.Text = "Cell_12";
            this.textBox_Vy2_12.Location = new Point(0x75, 0x27);
            this.textBox_Vy2_12.Name = "textBox_Vy2_12";
            this.textBox_Vy2_12.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_12.TabIndex = 0x16;
            this.textBox_Vx2_12.Location = new Point(0x75, 0x11);
            this.textBox_Vx2_12.Name = "textBox_Vx2_12";
            this.textBox_Vx2_12.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_12.TabIndex = 0x15;
            this.textBox_Vy1_12.Location = new Point(0x45, 0x27);
            this.textBox_Vy1_12.Name = "textBox_Vy1_12";
            this.textBox_Vy1_12.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_12.TabIndex = 20;
            this.textBox_Vx1_12.Location = new Point(0x45, 0x11);
            this.textBox_Vx1_12.Name = "textBox_Vx1_12";
            this.textBox_Vx1_12.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_12.TabIndex = 0x13;
            this.label200.AutoSize = true;
            this.label200.Location = new Point(8, 0x2c);
            this.label200.Name = "label200";
            this.label200.Size = new Size(0x3b, 12);
            this.label200.TabIndex = 0x12;
            this.label200.Text = "目标电压:";
            this.button_calc_cell12.Location = new Point(0x69, 0x40);
            this.button_calc_cell12.Name = "button_calc_cell12";
            this.button_calc_cell12.Size = new Size(0x3a, 0x17);
            this.button_calc_cell12.TabIndex = 15;
            this.button_calc_cell12.Text = "计算";
            this.button_calc_cell12.UseVisualStyleBackColor = true;
            this.button_calc_cell12.Click += new EventHandler(this.button_calc_cell12_Click);
            this.button_cali_cell12.Location = new Point(0x69, 0x57);
            this.button_cali_cell12.Name = "button_cali_cell12";
            this.button_cali_cell12.Size = new Size(0x3a, 0x17);
            this.button_cali_cell12.TabIndex = 4;
            this.button_cali_cell12.Text = "写入";
            this.button_cali_cell12.UseVisualStyleBackColor = true;
            this.button_cali_cell12.Click += new EventHandler(this.button_cali_cell12_Click);
            this.label201.AutoSize = true;
            this.label201.Location = new Point(8, 0x15);
            this.label201.Name = "label201";
            this.label201.Size = new Size(0x3b, 12);
            this.label201.TabIndex = 0x10;
            this.label201.Text = "当前电压:";
            this.textBox_cail_cell12_b.Location = new Point(0x2b, 0x57);
            this.textBox_cail_cell12_b.Name = "textBox_cail_cell12_b";
            this.textBox_cail_cell12_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell12_b.TabIndex = 3;
            this.label76.AutoSize = true;
            this.label76.Location = new Point(8, 0x59);
            this.label76.Name = "label76";
            this.label76.Size = new Size(0x1d, 12);
            this.label76.TabIndex = 2;
            this.label76.Text = "B值:";
            this.label77.AutoSize = true;
            this.label77.Location = new Point(8, 0x45);
            this.label77.Name = "label77";
            this.label77.Size = new Size(0x1d, 12);
            this.label77.TabIndex = 1;
            this.label77.Text = "K值:";
            this.textBox_cail_cell12_k.Location = new Point(0x2b, 0x41);
            this.textBox_cail_cell12_k.Name = "textBox_cail_cell12_k";
            this.textBox_cail_cell12_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell12_k.TabIndex = 0;
            this.groupBox_Vcell6.Controls.Add(this.textBox_Vy2_6);
            this.groupBox_Vcell6.Controls.Add(this.textBox_Vx2_6);
            this.groupBox_Vcell6.Controls.Add(this.textBox_Vy1_6);
            this.groupBox_Vcell6.Controls.Add(this.textBox_Vx1_6);
            this.groupBox_Vcell6.Controls.Add(this.label196);
            this.groupBox_Vcell6.Controls.Add(this.button_calc_cell6);
            this.groupBox_Vcell6.Controls.Add(this.button_cali_cell6);
            this.groupBox_Vcell6.Controls.Add(this.label197);
            this.groupBox_Vcell6.Controls.Add(this.textBox_cail_cell6_b);
            this.groupBox_Vcell6.Controls.Add(this.label74);
            this.groupBox_Vcell6.Controls.Add(this.label75);
            this.groupBox_Vcell6.Controls.Add(this.textBox_cail_cell6_k);
            this.groupBox_Vcell6.Location = new Point(0x363, 0x13);
            this.groupBox_Vcell6.Name = "groupBox_Vcell6";
            this.groupBox_Vcell6.Size = new Size(0xa5, 120);
            this.groupBox_Vcell6.TabIndex = 6;
            this.groupBox_Vcell6.TabStop = false;
            this.groupBox_Vcell6.Text = "Cell_6";
            this.textBox_Vy2_6.Location = new Point(0x6f, 0x29);
            this.textBox_Vy2_6.Name = "textBox_Vy2_6";
            this.textBox_Vy2_6.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_6.TabIndex = 0x16;
            this.textBox_Vx2_6.Location = new Point(0x6f, 0x15);
            this.textBox_Vx2_6.Name = "textBox_Vx2_6";
            this.textBox_Vx2_6.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_6.TabIndex = 0x15;
            this.textBox_Vy1_6.Location = new Point(0x3f, 0x29);
            this.textBox_Vy1_6.Name = "textBox_Vy1_6";
            this.textBox_Vy1_6.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_6.TabIndex = 20;
            this.textBox_Vx1_6.Location = new Point(0x3f, 0x15);
            this.textBox_Vx1_6.Name = "textBox_Vx1_6";
            this.textBox_Vx1_6.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_6.TabIndex = 0x13;
            this.label196.AutoSize = true;
            this.label196.Location = new Point(4, 0x2d);
            this.label196.Name = "label196";
            this.label196.Size = new Size(0x3b, 12);
            this.label196.TabIndex = 0x12;
            this.label196.Text = "目标电压:";
            this.button_calc_cell6.Location = new Point(0x65, 0x44);
            this.button_calc_cell6.Name = "button_calc_cell6";
            this.button_calc_cell6.Size = new Size(0x3a, 0x17);
            this.button_calc_cell6.TabIndex = 15;
            this.button_calc_cell6.Text = "计算";
            this.button_calc_cell6.UseVisualStyleBackColor = true;
            this.button_calc_cell6.Click += new EventHandler(this.button_calc_cell6_Click);
            this.button_cali_cell6.Location = new Point(0x65, 0x5c);
            this.button_cali_cell6.Name = "button_cali_cell6";
            this.button_cali_cell6.Size = new Size(0x3a, 0x17);
            this.button_cali_cell6.TabIndex = 4;
            this.button_cali_cell6.Text = "写入";
            this.button_cali_cell6.UseVisualStyleBackColor = true;
            this.button_cali_cell6.Click += new EventHandler(this.button_cali_cell6_Click);
            this.label197.AutoSize = true;
            this.label197.Location = new Point(4, 0x17);
            this.label197.Name = "label197";
            this.label197.Size = new Size(0x3b, 12);
            this.label197.TabIndex = 0x10;
            this.label197.Text = "当前电压:";
            this.textBox_cail_cell6_b.Location = new Point(0x27, 0x59);
            this.textBox_cail_cell6_b.Name = "textBox_cail_cell6_b";
            this.textBox_cail_cell6_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell6_b.TabIndex = 3;
            this.label74.AutoSize = true;
            this.label74.Location = new Point(4, 0x5d);
            this.label74.Name = "label74";
            this.label74.Size = new Size(0x1d, 12);
            this.label74.TabIndex = 2;
            this.label74.Text = "B值:";
            this.label75.AutoSize = true;
            this.label75.Location = new Point(4, 0x48);
            this.label75.Name = "label75";
            this.label75.Size = new Size(0x1d, 12);
            this.label75.TabIndex = 1;
            this.label75.Text = "K值:";
            this.textBox_cail_cell6_k.Location = new Point(0x27, 0x45);
            this.textBox_cail_cell6_k.Name = "textBox_cail_cell6_k";
            this.textBox_cail_cell6_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell6_k.TabIndex = 0;
            this.groupBox_Vcell11.Controls.Add(this.textBox_Vy2_11);
            this.groupBox_Vcell11.Controls.Add(this.textBox_Vx2_11);
            this.groupBox_Vcell11.Controls.Add(this.textBox_Vy1_11);
            this.groupBox_Vcell11.Controls.Add(this.textBox_Vx1_11);
            this.groupBox_Vcell11.Controls.Add(this.label190);
            this.groupBox_Vcell11.Controls.Add(this.button_calc_cell11);
            this.groupBox_Vcell11.Controls.Add(this.button_cali_cell11);
            this.groupBox_Vcell11.Controls.Add(this.label191);
            this.groupBox_Vcell11.Controls.Add(this.textBox_cail_cell11_b);
            this.groupBox_Vcell11.Controls.Add(this.label78);
            this.groupBox_Vcell11.Controls.Add(this.label79);
            this.groupBox_Vcell11.Controls.Add(this.textBox_cail_cell11_k);
            this.groupBox_Vcell11.Location = new Point(0x20a, 0x91);
            this.groupBox_Vcell11.Name = "groupBox_Vcell11";
            this.groupBox_Vcell11.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell11.TabIndex = 15;
            this.groupBox_Vcell11.TabStop = false;
            this.groupBox_Vcell11.Text = "Cell_11";
            this.textBox_Vy2_11.Location = new Point(0x6c, 40);
            this.textBox_Vy2_11.Name = "textBox_Vy2_11";
            this.textBox_Vy2_11.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_11.TabIndex = 0x16;
            this.textBox_Vx2_11.Location = new Point(0x6c, 20);
            this.textBox_Vx2_11.Name = "textBox_Vx2_11";
            this.textBox_Vx2_11.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_11.TabIndex = 0x15;
            this.textBox_Vy1_11.Location = new Point(60, 40);
            this.textBox_Vy1_11.Name = "textBox_Vy1_11";
            this.textBox_Vy1_11.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_11.TabIndex = 20;
            this.textBox_Vx1_11.Location = new Point(60, 20);
            this.textBox_Vx1_11.Name = "textBox_Vx1_11";
            this.textBox_Vx1_11.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_11.TabIndex = 0x13;
            this.label190.AutoSize = true;
            this.label190.Location = new Point(6, 0x2c);
            this.label190.Name = "label190";
            this.label190.Size = new Size(0x3b, 12);
            this.label190.TabIndex = 0x12;
            this.label190.Text = "目标电压:";
            this.button_calc_cell11.Location = new Point(0x67, 0x44);
            this.button_calc_cell11.Name = "button_calc_cell11";
            this.button_calc_cell11.Size = new Size(0x3a, 0x17);
            this.button_calc_cell11.TabIndex = 15;
            this.button_calc_cell11.Text = "计算";
            this.button_calc_cell11.UseVisualStyleBackColor = true;
            this.button_calc_cell11.Click += new EventHandler(this.button_calc_cell11_Click);
            this.button_cali_cell11.Location = new Point(0x67, 0x59);
            this.button_cali_cell11.Name = "button_cali_cell11";
            this.button_cali_cell11.Size = new Size(0x3a, 0x17);
            this.button_cali_cell11.TabIndex = 4;
            this.button_cali_cell11.Text = "写入";
            this.button_cali_cell11.UseVisualStyleBackColor = true;
            this.button_cali_cell11.Click += new EventHandler(this.button_cali_cell11_Click);
            this.label191.AutoSize = true;
            this.label191.Location = new Point(6, 0x16);
            this.label191.Name = "label191";
            this.label191.Size = new Size(0x3b, 12);
            this.label191.TabIndex = 0x10;
            this.label191.Text = "当前电压:";
            this.textBox_cail_cell11_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell11_b.Name = "textBox_cail_cell11_b";
            this.textBox_cail_cell11_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell11_b.TabIndex = 3;
            this.label78.AutoSize = true;
            this.label78.Location = new Point(6, 0x5d);
            this.label78.Name = "label78";
            this.label78.Size = new Size(0x1d, 12);
            this.label78.TabIndex = 2;
            this.label78.Text = "B值:";
            this.label79.AutoSize = true;
            this.label79.Location = new Point(6, 0x48);
            this.label79.Name = "label79";
            this.label79.Size = new Size(0x1d, 12);
            this.label79.TabIndex = 1;
            this.label79.Text = "K值:";
            this.textBox_cail_cell11_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell11_k.Name = "textBox_cail_cell11_k";
            this.textBox_cail_cell11_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell11_k.TabIndex = 0;
            this.groupBox_Vcell5.Controls.Add(this.textBox_Vy2_5);
            this.groupBox_Vcell5.Controls.Add(this.textBox_Vx2_5);
            this.groupBox_Vcell5.Controls.Add(this.textBox_Vy1_5);
            this.groupBox_Vcell5.Controls.Add(this.textBox_Vx1_5);
            this.groupBox_Vcell5.Controls.Add(this.label186);
            this.groupBox_Vcell5.Controls.Add(this.button_calc_cell5);
            this.groupBox_Vcell5.Controls.Add(this.button_cali_cell5);
            this.groupBox_Vcell5.Controls.Add(this.label187);
            this.groupBox_Vcell5.Controls.Add(this.textBox_cail_cell5_b);
            this.groupBox_Vcell5.Controls.Add(this.label72);
            this.groupBox_Vcell5.Controls.Add(this.label73);
            this.groupBox_Vcell5.Controls.Add(this.textBox_cail_cell5_k);
            this.groupBox_Vcell5.Location = new Point(0x2b8, 0x11);
            this.groupBox_Vcell5.Name = "groupBox_Vcell5";
            this.groupBox_Vcell5.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell5.TabIndex = 6;
            this.groupBox_Vcell5.TabStop = false;
            this.groupBox_Vcell5.Text = "Cell_5";
            this.textBox_Vy2_5.Location = new Point(0x72, 0x2c);
            this.textBox_Vy2_5.Name = "textBox_Vy2_5";
            this.textBox_Vy2_5.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_5.TabIndex = 0x16;
            this.textBox_Vx2_5.Location = new Point(0x72, 0x16);
            this.textBox_Vx2_5.Name = "textBox_Vx2_5";
            this.textBox_Vx2_5.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_5.TabIndex = 0x15;
            this.textBox_Vy1_5.Location = new Point(0x42, 0x2c);
            this.textBox_Vy1_5.Name = "textBox_Vy1_5";
            this.textBox_Vy1_5.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_5.TabIndex = 20;
            this.textBox_Vx1_5.Location = new Point(0x42, 0x16);
            this.textBox_Vx1_5.Name = "textBox_Vx1_5";
            this.textBox_Vx1_5.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_5.TabIndex = 0x13;
            this.label186.AutoSize = true;
            this.label186.Location = new Point(8, 0x2f);
            this.label186.Name = "label186";
            this.label186.Size = new Size(0x3b, 12);
            this.label186.TabIndex = 0x12;
            this.label186.Text = "目标电压:";
            this.button_calc_cell5.Location = new Point(0x69, 0x44);
            this.button_calc_cell5.Name = "button_calc_cell5";
            this.button_calc_cell5.Size = new Size(0x3a, 0x17);
            this.button_calc_cell5.TabIndex = 15;
            this.button_calc_cell5.Text = "计算";
            this.button_calc_cell5.UseVisualStyleBackColor = true;
            this.button_calc_cell5.Click += new EventHandler(this.button_calc_cell5_Click);
            this.button_cali_cell5.Location = new Point(0x69, 0x59);
            this.button_cali_cell5.Name = "button_cali_cell5";
            this.button_cali_cell5.Size = new Size(0x3a, 0x17);
            this.button_cali_cell5.TabIndex = 4;
            this.button_cali_cell5.Text = "写入";
            this.button_cali_cell5.UseVisualStyleBackColor = true;
            this.button_cali_cell5.Click += new EventHandler(this.button_cali_cell5_Click);
            this.label187.AutoSize = true;
            this.label187.Location = new Point(8, 0x19);
            this.label187.Name = "label187";
            this.label187.Size = new Size(0x3b, 12);
            this.label187.TabIndex = 0x10;
            this.label187.Text = "当前电压:";
            this.textBox_cail_cell5_b.Location = new Point(0x2b, 0x59);
            this.textBox_cail_cell5_b.Name = "textBox_cail_cell5_b";
            this.textBox_cail_cell5_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell5_b.TabIndex = 3;
            this.label72.AutoSize = true;
            this.label72.Location = new Point(8, 0x5d);
            this.label72.Name = "label72";
            this.label72.Size = new Size(0x1d, 12);
            this.label72.TabIndex = 2;
            this.label72.Text = "B值:";
            this.label73.AutoSize = true;
            this.label73.Location = new Point(8, 0x48);
            this.label73.Name = "label73";
            this.label73.Size = new Size(0x1d, 12);
            this.label73.TabIndex = 1;
            this.label73.Text = "K值:";
            this.textBox_cail_cell5_k.Location = new Point(0x2b, 0x45);
            this.textBox_cail_cell5_k.Name = "textBox_cail_cell5_k";
            this.textBox_cail_cell5_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell5_k.TabIndex = 0;
            this.groupBox_Vcell1.Controls.Add(this.textBox_Vy2_1);
            this.groupBox_Vcell1.Controls.Add(this.button_calc_cell1);
            this.groupBox_Vcell1.Controls.Add(this.textBox_Vx2_1);
            this.groupBox_Vcell1.Controls.Add(this.label174);
            this.groupBox_Vcell1.Controls.Add(this.textBox_Vy1_1);
            this.groupBox_Vcell1.Controls.Add(this.button_cali_cell1);
            this.groupBox_Vcell1.Controls.Add(this.textBox_Vx1_1);
            this.groupBox_Vcell1.Controls.Add(this.textBox_cail_cell1_b);
            this.groupBox_Vcell1.Controls.Add(this.label175);
            this.groupBox_Vcell1.Controls.Add(this.label32);
            this.groupBox_Vcell1.Controls.Add(this.label31);
            this.groupBox_Vcell1.Controls.Add(this.textBox_cail_cell1_k);
            this.groupBox_Vcell1.Location = new Point(8, 20);
            this.groupBox_Vcell1.Name = "groupBox_Vcell1";
            this.groupBox_Vcell1.Size = new Size(0xa5, 0x74);
            this.groupBox_Vcell1.TabIndex = 0;
            this.groupBox_Vcell1.TabStop = false;
            this.groupBox_Vcell1.Text = "Cell_1";
            this.textBox_Vy2_1.Location = new Point(0x6d, 0x25);
            this.textBox_Vy2_1.Name = "textBox_Vy2_1";
            this.textBox_Vy2_1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_1.TabIndex = 20;
            this.button_calc_cell1.Location = new Point(0x65, 0x3b);
            this.button_calc_cell1.Name = "button_calc_cell1";
            this.button_calc_cell1.Size = new Size(0x3a, 0x17);
            this.button_calc_cell1.TabIndex = 10;
            this.button_calc_cell1.Text = "计算";
            this.button_calc_cell1.UseVisualStyleBackColor = true;
            this.button_calc_cell1.Click += new EventHandler(this.button_calc_cell1_Click);
            this.textBox_Vx2_1.Location = new Point(0x6d, 0x10);
            this.textBox_Vx2_1.Name = "textBox_Vx2_1";
            this.textBox_Vx2_1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_1.TabIndex = 0x13;
            this.label174.AutoSize = true;
            this.label174.Location = new Point(0, 40);
            this.label174.Name = "label174";
            this.label174.Size = new Size(0x3b, 12);
            this.label174.TabIndex = 13;
            this.label174.Text = "目标电压:";
            this.textBox_Vy1_1.Location = new Point(0x3d, 0x25);
            this.textBox_Vy1_1.Name = "textBox_Vy1_1";
            this.textBox_Vy1_1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_1.TabIndex = 0x12;
            this.button_cali_cell1.Location = new Point(0x65, 0x54);
            this.button_cali_cell1.Name = "button_cali_cell1";
            this.button_cali_cell1.Size = new Size(0x3a, 0x17);
            this.button_cali_cell1.TabIndex = 4;
            this.button_cali_cell1.Text = "写入";
            this.button_cali_cell1.UseVisualStyleBackColor = true;
            this.button_cali_cell1.Click += new EventHandler(this.button_cali_cell1_Click);
            this.textBox_Vx1_1.Location = new Point(0x3d, 0x10);
            this.textBox_Vx1_1.Name = "textBox_Vx1_1";
            this.textBox_Vx1_1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_1.TabIndex = 0x11;
            this.textBox_cail_cell1_b.Location = new Point(40, 0x52);
            this.textBox_cail_cell1_b.Name = "textBox_cail_cell1_b";
            this.textBox_cail_cell1_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell1_b.TabIndex = 3;
            this.label175.AutoSize = true;
            this.label175.Location = new Point(0, 20);
            this.label175.Name = "label175";
            this.label175.Size = new Size(0x3b, 12);
            this.label175.TabIndex = 11;
            this.label175.Text = "当前电压:";
            this.label32.AutoSize = true;
            this.label32.Location = new Point(5, 0x55);
            this.label32.Name = "label32";
            this.label32.Size = new Size(0x1d, 12);
            this.label32.TabIndex = 2;
            this.label32.Text = "B值:";
            this.label31.AutoSize = true;
            this.label31.Location = new Point(5, 0x40);
            this.label31.Name = "label31";
            this.label31.Size = new Size(0x1d, 12);
            this.label31.TabIndex = 1;
            this.label31.Text = "K值:";
            this.textBox_cail_cell1_k.Location = new Point(40, 0x3d);
            this.textBox_cail_cell1_k.Name = "textBox_cail_cell1_k";
            this.textBox_cail_cell1_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell1_k.TabIndex = 0;
            this.groupBox_Vcell10.Controls.Add(this.textBox_Vy2_10);
            this.groupBox_Vcell10.Controls.Add(this.textBox_Vx2_10);
            this.groupBox_Vcell10.Controls.Add(this.textBox_Vy1_10);
            this.groupBox_Vcell10.Controls.Add(this.textBox_Vx1_10);
            this.groupBox_Vcell10.Controls.Add(this.button_calc_cell10);
            this.groupBox_Vcell10.Controls.Add(this.label180);
            this.groupBox_Vcell10.Controls.Add(this.button_cali_cell10);
            this.groupBox_Vcell10.Controls.Add(this.textBox_cail_cell10_b);
            this.groupBox_Vcell10.Controls.Add(this.label181);
            this.groupBox_Vcell10.Controls.Add(this.label80);
            this.groupBox_Vcell10.Controls.Add(this.label81);
            this.groupBox_Vcell10.Controls.Add(this.textBox_cail_cell10_k);
            this.groupBox_Vcell10.Location = new Point(0x15f, 0x91);
            this.groupBox_Vcell10.Name = "groupBox_Vcell10";
            this.groupBox_Vcell10.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell10.TabIndex = 0x12;
            this.groupBox_Vcell10.TabStop = false;
            this.groupBox_Vcell10.Text = "Cell_10";
            this.textBox_Vy2_10.Location = new Point(0x6d, 0x29);
            this.textBox_Vy2_10.Name = "textBox_Vy2_10";
            this.textBox_Vy2_10.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_10.TabIndex = 20;
            this.textBox_Vx2_10.Location = new Point(0x6d, 0x15);
            this.textBox_Vx2_10.Name = "textBox_Vx2_10";
            this.textBox_Vx2_10.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_10.TabIndex = 0x13;
            this.textBox_Vy1_10.Location = new Point(0x3d, 0x29);
            this.textBox_Vy1_10.Name = "textBox_Vy1_10";
            this.textBox_Vy1_10.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_10.TabIndex = 0x12;
            this.textBox_Vx1_10.Location = new Point(0x3d, 0x15);
            this.textBox_Vx1_10.Name = "textBox_Vx1_10";
            this.textBox_Vx1_10.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_10.TabIndex = 0x11;
            this.button_calc_cell10.Location = new Point(0x67, 0x44);
            this.button_calc_cell10.Name = "button_calc_cell10";
            this.button_calc_cell10.Size = new Size(0x3a, 0x17);
            this.button_calc_cell10.TabIndex = 10;
            this.button_calc_cell10.Text = "计算";
            this.button_calc_cell10.UseVisualStyleBackColor = true;
            this.button_calc_cell10.Click += new EventHandler(this.button_calc_cell10_Click);
            this.label180.AutoSize = true;
            this.label180.Location = new Point(6, 0x2d);
            this.label180.Name = "label180";
            this.label180.Size = new Size(0x3b, 12);
            this.label180.TabIndex = 13;
            this.label180.Text = "目标电压:";
            this.button_cali_cell10.Location = new Point(0x67, 0x59);
            this.button_cali_cell10.Name = "button_cali_cell10";
            this.button_cali_cell10.Size = new Size(0x3a, 0x17);
            this.button_cali_cell10.TabIndex = 4;
            this.button_cali_cell10.Text = "写入";
            this.button_cali_cell10.UseVisualStyleBackColor = true;
            this.button_cali_cell10.Click += new EventHandler(this.button_cali_cell10_Click);
            this.textBox_cail_cell10_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell10_b.Name = "textBox_cail_cell10_b";
            this.textBox_cail_cell10_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell10_b.TabIndex = 3;
            this.label181.AutoSize = true;
            this.label181.Location = new Point(6, 0x17);
            this.label181.Name = "label181";
            this.label181.Size = new Size(0x3b, 12);
            this.label181.TabIndex = 11;
            this.label181.Text = "当前电压:";
            this.label80.AutoSize = true;
            this.label80.Location = new Point(6, 0x5d);
            this.label80.Name = "label80";
            this.label80.Size = new Size(0x1d, 12);
            this.label80.TabIndex = 2;
            this.label80.Text = "B值:";
            this.label81.AutoSize = true;
            this.label81.Location = new Point(6, 0x48);
            this.label81.Name = "label81";
            this.label81.Size = new Size(0x1d, 12);
            this.label81.TabIndex = 1;
            this.label81.Text = "K值:";
            this.textBox_cail_cell10_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell10_k.Name = "textBox_cail_cell10_k";
            this.textBox_cail_cell10_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell10_k.TabIndex = 0;
            this.groupBox_Vcell4.Controls.Add(this.textBox_Vy2_4);
            this.groupBox_Vcell4.Controls.Add(this.textBox_Vx2_4);
            this.groupBox_Vcell4.Controls.Add(this.textBox_Vy1_4);
            this.groupBox_Vcell4.Controls.Add(this.textBox_Vx1_4);
            this.groupBox_Vcell4.Controls.Add(this.button_calc_cell4);
            this.groupBox_Vcell4.Controls.Add(this.label176);
            this.groupBox_Vcell4.Controls.Add(this.button_cali_cell4);
            this.groupBox_Vcell4.Controls.Add(this.textBox_cail_cell4_b);
            this.groupBox_Vcell4.Controls.Add(this.label177);
            this.groupBox_Vcell4.Controls.Add(this.label70);
            this.groupBox_Vcell4.Controls.Add(this.label71);
            this.groupBox_Vcell4.Controls.Add(this.textBox_cail_cell4_k);
            this.groupBox_Vcell4.Location = new Point(0x20d, 0x11);
            this.groupBox_Vcell4.Name = "groupBox_Vcell4";
            this.groupBox_Vcell4.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell4.TabIndex = 12;
            this.groupBox_Vcell4.TabStop = false;
            this.groupBox_Vcell4.Text = "Cell_4";
            this.textBox_Vy2_4.Location = new Point(0x6c, 40);
            this.textBox_Vy2_4.Name = "textBox_Vy2_4";
            this.textBox_Vy2_4.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_4.TabIndex = 20;
            this.textBox_Vx2_4.Location = new Point(0x6c, 20);
            this.textBox_Vx2_4.Name = "textBox_Vx2_4";
            this.textBox_Vx2_4.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_4.TabIndex = 0x13;
            this.textBox_Vy1_4.Location = new Point(60, 40);
            this.textBox_Vy1_4.Name = "textBox_Vy1_4";
            this.textBox_Vy1_4.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_4.TabIndex = 0x12;
            this.textBox_Vx1_4.Location = new Point(60, 20);
            this.textBox_Vx1_4.Name = "textBox_Vx1_4";
            this.textBox_Vx1_4.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_4.TabIndex = 0x11;
            this.button_calc_cell4.Location = new Point(0x65, 0x41);
            this.button_calc_cell4.Name = "button_calc_cell4";
            this.button_calc_cell4.Size = new Size(0x3a, 0x17);
            this.button_calc_cell4.TabIndex = 10;
            this.button_calc_cell4.Text = "计算";
            this.button_calc_cell4.UseVisualStyleBackColor = true;
            this.button_calc_cell4.Click += new EventHandler(this.button_calc_cell4_Click);
            this.label176.AutoSize = true;
            this.label176.Location = new Point(6, 0x2d);
            this.label176.Name = "label176";
            this.label176.Size = new Size(0x3b, 12);
            this.label176.TabIndex = 13;
            this.label176.Text = "目标电压:";
            this.button_cali_cell4.Location = new Point(0x65, 0x59);
            this.button_cali_cell4.Name = "button_cali_cell4";
            this.button_cali_cell4.Size = new Size(0x3a, 0x17);
            this.button_cali_cell4.TabIndex = 4;
            this.button_cali_cell4.Text = "写入";
            this.button_cali_cell4.UseVisualStyleBackColor = true;
            this.button_cali_cell4.Click += new EventHandler(this.button_cali_cell4_Click);
            this.textBox_cail_cell4_b.Location = new Point(0x29, 0x57);
            this.textBox_cail_cell4_b.Name = "textBox_cail_cell4_b";
            this.textBox_cail_cell4_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell4_b.TabIndex = 3;
            this.label177.AutoSize = true;
            this.label177.Location = new Point(6, 0x17);
            this.label177.Name = "label177";
            this.label177.Size = new Size(0x3b, 12);
            this.label177.TabIndex = 11;
            this.label177.Text = "当前电压:";
            this.label70.AutoSize = true;
            this.label70.Location = new Point(6, 0x59);
            this.label70.Name = "label70";
            this.label70.Size = new Size(0x1d, 12);
            this.label70.TabIndex = 2;
            this.label70.Text = "B值:";
            this.label71.AutoSize = true;
            this.label71.Location = new Point(6, 0x45);
            this.label71.Name = "label71";
            this.label71.Size = new Size(0x1d, 12);
            this.label71.TabIndex = 1;
            this.label71.Text = "K值:";
            this.textBox_cail_cell4_k.Location = new Point(0x29, 0x41);
            this.textBox_cail_cell4_k.Name = "textBox_cail_cell4_k";
            this.textBox_cail_cell4_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell4_k.TabIndex = 0;
            this.groupBox_Vcell8.Controls.Add(this.textBox_Vy2_8);
            this.groupBox_Vcell8.Controls.Add(this.textBox_Vx2_8);
            this.groupBox_Vcell8.Controls.Add(this.textBox_Vy1_8);
            this.groupBox_Vcell8.Controls.Add(this.textBox_Vx1_8);
            this.groupBox_Vcell8.Controls.Add(this.label188);
            this.groupBox_Vcell8.Controls.Add(this.button_calc_cell8);
            this.groupBox_Vcell8.Controls.Add(this.button_cali_cell8);
            this.groupBox_Vcell8.Controls.Add(this.label189);
            this.groupBox_Vcell8.Controls.Add(this.textBox_cail_cell8_b);
            this.groupBox_Vcell8.Controls.Add(this.label82);
            this.groupBox_Vcell8.Controls.Add(this.label83);
            this.groupBox_Vcell8.Controls.Add(this.textBox_cail_cell8_k);
            this.groupBox_Vcell8.Location = new Point(8, 0x8f);
            this.groupBox_Vcell8.Name = "groupBox_Vcell8";
            this.groupBox_Vcell8.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell8.TabIndex = 0x10;
            this.groupBox_Vcell8.TabStop = false;
            this.groupBox_Vcell8.Text = "Cell_8";
            this.textBox_Vy2_8.Location = new Point(0x6d, 0x26);
            this.textBox_Vy2_8.Name = "textBox_Vy2_8";
            this.textBox_Vy2_8.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_8.TabIndex = 0x16;
            this.textBox_Vx2_8.Location = new Point(0x6d, 0x10);
            this.textBox_Vx2_8.Name = "textBox_Vx2_8";
            this.textBox_Vx2_8.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_8.TabIndex = 0x15;
            this.textBox_Vy1_8.Location = new Point(0x3d, 0x26);
            this.textBox_Vy1_8.Name = "textBox_Vy1_8";
            this.textBox_Vy1_8.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_8.TabIndex = 20;
            this.textBox_Vx1_8.Location = new Point(0x3d, 0x10);
            this.textBox_Vx1_8.Name = "textBox_Vx1_8";
            this.textBox_Vx1_8.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_8.TabIndex = 0x13;
            this.label188.AutoSize = true;
            this.label188.Location = new Point(8, 0x29);
            this.label188.Name = "label188";
            this.label188.Size = new Size(0x3b, 12);
            this.label188.TabIndex = 0x12;
            this.label188.Text = "目标电压:";
            this.button_calc_cell8.Location = new Point(0x65, 0x40);
            this.button_calc_cell8.Name = "button_calc_cell8";
            this.button_calc_cell8.Size = new Size(0x3a, 0x17);
            this.button_calc_cell8.TabIndex = 15;
            this.button_calc_cell8.Text = "计算";
            this.button_calc_cell8.UseVisualStyleBackColor = true;
            this.button_calc_cell8.Click += new EventHandler(this.button_calc_cell8_Click);
            this.button_cali_cell8.Location = new Point(0x65, 0x57);
            this.button_cali_cell8.Name = "button_cali_cell8";
            this.button_cali_cell8.Size = new Size(0x3a, 0x17);
            this.button_cali_cell8.TabIndex = 4;
            this.button_cali_cell8.Text = "写入";
            this.button_cali_cell8.UseVisualStyleBackColor = true;
            this.button_cali_cell8.Click += new EventHandler(this.button_cali_cell8_Click);
            this.label189.AutoSize = true;
            this.label189.Location = new Point(8, 20);
            this.label189.Name = "label189";
            this.label189.Size = new Size(0x3b, 12);
            this.label189.TabIndex = 0x10;
            this.label189.Text = "当前电压:";
            this.textBox_cail_cell8_b.Location = new Point(0x2b, 0x57);
            this.textBox_cail_cell8_b.Name = "textBox_cail_cell8_b";
            this.textBox_cail_cell8_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell8_b.TabIndex = 3;
            this.label82.AutoSize = true;
            this.label82.Location = new Point(8, 0x59);
            this.label82.Name = "label82";
            this.label82.Size = new Size(0x1d, 12);
            this.label82.TabIndex = 2;
            this.label82.Text = "B值:";
            this.label83.AutoSize = true;
            this.label83.Location = new Point(8, 0x45);
            this.label83.Name = "label83";
            this.label83.Size = new Size(0x1d, 12);
            this.label83.TabIndex = 1;
            this.label83.Text = "K值:";
            this.textBox_cail_cell8_k.Location = new Point(0x2b, 0x41);
            this.textBox_cail_cell8_k.Name = "textBox_cail_cell8_k";
            this.textBox_cail_cell8_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell8_k.TabIndex = 0;
            this.button_Reset_Vcell.Location = new Point(0x4b7, 0x1f6);
            this.button_Reset_Vcell.Name = "button_Reset_Vcell";
            this.button_Reset_Vcell.Size = new Size(0x4e, 0x17);
            this.button_Reset_Vcell.TabIndex = 11;
            this.button_Reset_Vcell.Text = "Vcell复位";
            this.button_Reset_Vcell.UseVisualStyleBackColor = true;
            this.button_Reset_Vcell.Click += new EventHandler(this.button_reset_Click);
            this.groupBox_Vcell7.Controls.Add(this.textBox_Vy2_7);
            this.groupBox_Vcell7.Controls.Add(this.textBox_Vx2_7);
            this.groupBox_Vcell7.Controls.Add(this.textBox_Vy1_7);
            this.groupBox_Vcell7.Controls.Add(this.textBox_Vx1_7);
            this.groupBox_Vcell7.Controls.Add(this.button_calc_cell7);
            this.groupBox_Vcell7.Controls.Add(this.label178);
            this.groupBox_Vcell7.Controls.Add(this.button_cali_cell7);
            this.groupBox_Vcell7.Controls.Add(this.textBox_cail_cell7_b);
            this.groupBox_Vcell7.Controls.Add(this.label179);
            this.groupBox_Vcell7.Controls.Add(this.label84);
            this.groupBox_Vcell7.Controls.Add(this.label85);
            this.groupBox_Vcell7.Controls.Add(this.textBox_cail_cell7_k);
            this.groupBox_Vcell7.Location = new Point(0x40d, 0x13);
            this.groupBox_Vcell7.Name = "groupBox_Vcell7";
            this.groupBox_Vcell7.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell7.TabIndex = 13;
            this.groupBox_Vcell7.TabStop = false;
            this.groupBox_Vcell7.Text = "Cell_7";
            this.textBox_Vy2_7.Location = new Point(0x6d, 0x26);
            this.textBox_Vy2_7.Name = "textBox_Vy2_7";
            this.textBox_Vy2_7.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_7.TabIndex = 20;
            this.textBox_Vx2_7.Location = new Point(0x6d, 0x10);
            this.textBox_Vx2_7.Name = "textBox_Vx2_7";
            this.textBox_Vx2_7.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_7.TabIndex = 0x13;
            this.textBox_Vy1_7.Location = new Point(0x3d, 0x26);
            this.textBox_Vy1_7.Name = "textBox_Vy1_7";
            this.textBox_Vy1_7.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_7.TabIndex = 0x12;
            this.textBox_Vx1_7.Location = new Point(0x3d, 0x10);
            this.textBox_Vx1_7.Name = "textBox_Vx1_7";
            this.textBox_Vx1_7.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_7.TabIndex = 0x11;
            this.button_calc_cell7.Location = new Point(0x65, 0x41);
            this.button_calc_cell7.Name = "button_calc_cell7";
            this.button_calc_cell7.Size = new Size(0x3a, 0x17);
            this.button_calc_cell7.TabIndex = 10;
            this.button_calc_cell7.Text = "计算";
            this.button_calc_cell7.UseVisualStyleBackColor = true;
            this.button_calc_cell7.Click += new EventHandler(this.button_calc_cell7_Click);
            this.label178.AutoSize = true;
            this.label178.Location = new Point(4, 0x29);
            this.label178.Name = "label178";
            this.label178.Size = new Size(0x3b, 12);
            this.label178.TabIndex = 13;
            this.label178.Text = "目标电压:";
            this.button_cali_cell7.Location = new Point(0x65, 0x59);
            this.button_cali_cell7.Name = "button_cali_cell7";
            this.button_cali_cell7.Size = new Size(0x3a, 0x17);
            this.button_cali_cell7.TabIndex = 4;
            this.button_cali_cell7.Text = "写入";
            this.button_cali_cell7.UseVisualStyleBackColor = true;
            this.button_cali_cell7.Click += new EventHandler(this.button_cali_cell7_Click);
            this.textBox_cail_cell7_b.Location = new Point(0x27, 0x59);
            this.textBox_cail_cell7_b.Name = "textBox_cail_cell7_b";
            this.textBox_cail_cell7_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell7_b.TabIndex = 3;
            this.label179.AutoSize = true;
            this.label179.Location = new Point(4, 20);
            this.label179.Name = "label179";
            this.label179.Size = new Size(0x3b, 12);
            this.label179.TabIndex = 11;
            this.label179.Text = "当前电压:";
            this.label84.AutoSize = true;
            this.label84.Location = new Point(4, 0x5d);
            this.label84.Name = "label84";
            this.label84.Size = new Size(0x1d, 12);
            this.label84.TabIndex = 2;
            this.label84.Text = "B值:";
            this.label85.AutoSize = true;
            this.label85.Location = new Point(4, 0x48);
            this.label85.Name = "label85";
            this.label85.Size = new Size(0x1d, 12);
            this.label85.TabIndex = 1;
            this.label85.Text = "K值:";
            this.textBox_cail_cell7_k.Location = new Point(0x27, 0x45);
            this.textBox_cail_cell7_k.Name = "textBox_cail_cell7_k";
            this.textBox_cail_cell7_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell7_k.TabIndex = 0;
            this.groupBox_Vcell9.Controls.Add(this.textBox_Vy2_9);
            this.groupBox_Vcell9.Controls.Add(this.textBox_Vx2_9);
            this.groupBox_Vcell9.Controls.Add(this.textBox_Vy1_9);
            this.groupBox_Vcell9.Controls.Add(this.textBox_Vx1_9);
            this.groupBox_Vcell9.Controls.Add(this.label198);
            this.groupBox_Vcell9.Controls.Add(this.button_calc_cell9);
            this.groupBox_Vcell9.Controls.Add(this.button_cali_cell9);
            this.groupBox_Vcell9.Controls.Add(this.label199);
            this.groupBox_Vcell9.Controls.Add(this.textBox_cail_cell9_b);
            this.groupBox_Vcell9.Controls.Add(this.label86);
            this.groupBox_Vcell9.Controls.Add(this.label87);
            this.groupBox_Vcell9.Controls.Add(this.textBox_cail_cell9_k);
            this.groupBox_Vcell9.Location = new Point(0xb6, 0x91);
            this.groupBox_Vcell9.Name = "groupBox_Vcell9";
            this.groupBox_Vcell9.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell9.TabIndex = 0x11;
            this.groupBox_Vcell9.TabStop = false;
            this.groupBox_Vcell9.Text = "Cell_9";
            this.textBox_Vy2_9.Location = new Point(0x75, 0x27);
            this.textBox_Vy2_9.Name = "textBox_Vy2_9";
            this.textBox_Vy2_9.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_9.TabIndex = 0x16;
            this.textBox_Vx2_9.Location = new Point(0x75, 0x11);
            this.textBox_Vx2_9.Name = "textBox_Vx2_9";
            this.textBox_Vx2_9.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_9.TabIndex = 0x15;
            this.textBox_Vy1_9.Location = new Point(0x45, 0x27);
            this.textBox_Vy1_9.Name = "textBox_Vy1_9";
            this.textBox_Vy1_9.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_9.TabIndex = 20;
            this.textBox_Vx1_9.Location = new Point(0x45, 0x11);
            this.textBox_Vx1_9.Name = "textBox_Vx1_9";
            this.textBox_Vx1_9.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_9.TabIndex = 0x13;
            this.label198.AutoSize = true;
            this.label198.Location = new Point(6, 0x29);
            this.label198.Name = "label198";
            this.label198.Size = new Size(0x3b, 12);
            this.label198.TabIndex = 0x12;
            this.label198.Text = "目标电压:";
            this.button_calc_cell9.Location = new Point(0x67, 0x44);
            this.button_calc_cell9.Name = "button_calc_cell9";
            this.button_calc_cell9.Size = new Size(0x3a, 0x17);
            this.button_calc_cell9.TabIndex = 15;
            this.button_calc_cell9.Text = "计算";
            this.button_calc_cell9.UseVisualStyleBackColor = true;
            this.button_calc_cell9.Click += new EventHandler(this.button_calc_cell9_Click);
            this.button_cali_cell9.Location = new Point(0x67, 0x59);
            this.button_cali_cell9.Name = "button_cali_cell9";
            this.button_cali_cell9.Size = new Size(0x3a, 0x17);
            this.button_cali_cell9.TabIndex = 4;
            this.button_cali_cell9.Text = "写入";
            this.button_cali_cell9.UseVisualStyleBackColor = true;
            this.button_cali_cell9.Click += new EventHandler(this.button_cali_cell9_Click);
            this.label199.AutoSize = true;
            this.label199.Location = new Point(6, 20);
            this.label199.Name = "label199";
            this.label199.Size = new Size(0x3b, 12);
            this.label199.TabIndex = 0x10;
            this.label199.Text = "当前电压:";
            this.textBox_cail_cell9_b.Location = new Point(0x29, 0x59);
            this.textBox_cail_cell9_b.Name = "textBox_cail_cell9_b";
            this.textBox_cail_cell9_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell9_b.TabIndex = 3;
            this.label86.AutoSize = true;
            this.label86.Location = new Point(6, 0x5d);
            this.label86.Name = "label86";
            this.label86.Size = new Size(0x1d, 12);
            this.label86.TabIndex = 2;
            this.label86.Text = "B值:";
            this.label87.AutoSize = true;
            this.label87.Location = new Point(6, 0x48);
            this.label87.Name = "label87";
            this.label87.Size = new Size(0x1d, 12);
            this.label87.TabIndex = 1;
            this.label87.Text = "K值:";
            this.textBox_cail_cell9_k.Location = new Point(0x29, 0x45);
            this.textBox_cail_cell9_k.Name = "textBox_cail_cell9_k";
            this.textBox_cail_cell9_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell9_k.TabIndex = 0;
            this.groupBox_Vcell3.Controls.Add(this.textBox_Vy2_3);
            this.groupBox_Vcell3.Controls.Add(this.label194);
            this.groupBox_Vcell3.Controls.Add(this.textBox_Vx2_3);
            this.groupBox_Vcell3.Controls.Add(this.button_calc_cell3);
            this.groupBox_Vcell3.Controls.Add(this.textBox_Vy1_3);
            this.groupBox_Vcell3.Controls.Add(this.button_cali_cell3);
            this.groupBox_Vcell3.Controls.Add(this.textBox_Vx1_3);
            this.groupBox_Vcell3.Controls.Add(this.label195);
            this.groupBox_Vcell3.Controls.Add(this.textBox_cail_cell3_b);
            this.groupBox_Vcell3.Controls.Add(this.label42);
            this.groupBox_Vcell3.Controls.Add(this.label62);
            this.groupBox_Vcell3.Controls.Add(this.textBox_cail_cell3_k);
            this.groupBox_Vcell3.Location = new Point(0x15f, 0x11);
            this.groupBox_Vcell3.Name = "groupBox_Vcell3";
            this.groupBox_Vcell3.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell3.TabIndex = 7;
            this.groupBox_Vcell3.TabStop = false;
            this.groupBox_Vcell3.Text = "Cell_3";
            this.textBox_Vy2_3.Location = new Point(0x75, 0x26);
            this.textBox_Vy2_3.Name = "textBox_Vy2_3";
            this.textBox_Vy2_3.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_3.TabIndex = 0x1a;
            this.label194.AutoSize = true;
            this.label194.Location = new Point(4, 0x2c);
            this.label194.Name = "label194";
            this.label194.Size = new Size(0x3b, 12);
            this.label194.TabIndex = 0x12;
            this.label194.Text = "目标电压:";
            this.textBox_Vx2_3.Location = new Point(0x75, 0x12);
            this.textBox_Vx2_3.Name = "textBox_Vx2_3";
            this.textBox_Vx2_3.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_3.TabIndex = 0x19;
            this.button_calc_cell3.Location = new Point(0x65, 0x40);
            this.button_calc_cell3.Name = "button_calc_cell3";
            this.button_calc_cell3.Size = new Size(0x3a, 0x17);
            this.button_calc_cell3.TabIndex = 15;
            this.button_calc_cell3.Text = "计算";
            this.button_calc_cell3.UseVisualStyleBackColor = true;
            this.button_calc_cell3.Click += new EventHandler(this.button_calc_cell3_Click);
            this.textBox_Vy1_3.Location = new Point(0x45, 0x26);
            this.textBox_Vy1_3.Name = "textBox_Vy1_3";
            this.textBox_Vy1_3.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_3.TabIndex = 0x18;
            this.button_cali_cell3.Location = new Point(0x65, 0x57);
            this.button_cali_cell3.Name = "button_cali_cell3";
            this.button_cali_cell3.Size = new Size(0x3a, 0x17);
            this.button_cali_cell3.TabIndex = 4;
            this.button_cali_cell3.Text = "写入";
            this.button_cali_cell3.UseVisualStyleBackColor = true;
            this.button_cali_cell3.Click += new EventHandler(this.button_cali_cell3_Click);
            this.textBox_Vx1_3.Location = new Point(0x45, 0x12);
            this.textBox_Vx1_3.Name = "textBox_Vx1_3";
            this.textBox_Vx1_3.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_3.TabIndex = 0x17;
            this.label195.AutoSize = true;
            this.label195.Location = new Point(4, 0x15);
            this.label195.Name = "label195";
            this.label195.Size = new Size(0x3b, 12);
            this.label195.TabIndex = 0x10;
            this.label195.Text = "当前电压:";
            this.textBox_cail_cell3_b.Location = new Point(0x27, 0x57);
            this.textBox_cail_cell3_b.Name = "textBox_cail_cell3_b";
            this.textBox_cail_cell3_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell3_b.TabIndex = 3;
            this.label42.AutoSize = true;
            this.label42.Location = new Point(4, 0x59);
            this.label42.Name = "label42";
            this.label42.Size = new Size(0x1d, 12);
            this.label42.TabIndex = 2;
            this.label42.Text = "B值:";
            this.label62.AutoSize = true;
            this.label62.Location = new Point(4, 0x45);
            this.label62.Name = "label62";
            this.label62.Size = new Size(0x1d, 12);
            this.label62.TabIndex = 1;
            this.label62.Text = "K值:";
            this.textBox_cail_cell3_k.Location = new Point(0x27, 0x41);
            this.textBox_cail_cell3_k.Name = "textBox_cail_cell3_k";
            this.textBox_cail_cell3_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell3_k.TabIndex = 0;
            this.groupBox_Vcell2.Controls.Add(this.textBox_Vy2_2);
            this.groupBox_Vcell2.Controls.Add(this.textBox_Vx2_2);
            this.groupBox_Vcell2.Controls.Add(this.textBox_Vy1_2);
            this.groupBox_Vcell2.Controls.Add(this.textBox_Vx1_2);
            this.groupBox_Vcell2.Controls.Add(this.label184);
            this.groupBox_Vcell2.Controls.Add(this.button_calc_cell2);
            this.groupBox_Vcell2.Controls.Add(this.button_cali_cell2);
            this.groupBox_Vcell2.Controls.Add(this.label185);
            this.groupBox_Vcell2.Controls.Add(this.textBox_cail_cell2_b);
            this.groupBox_Vcell2.Controls.Add(this.label35);
            this.groupBox_Vcell2.Controls.Add(this.label37);
            this.groupBox_Vcell2.Controls.Add(this.textBox_cail_cell2_k);
            this.groupBox_Vcell2.Location = new Point(0xb6, 0x11);
            this.groupBox_Vcell2.Name = "groupBox_Vcell2";
            this.groupBox_Vcell2.Size = new Size(0xa5, 0x7a);
            this.groupBox_Vcell2.TabIndex = 6;
            this.groupBox_Vcell2.TabStop = false;
            this.groupBox_Vcell2.Text = "Cell_2";
            this.textBox_Vy2_2.Location = new Point(0x70, 40);
            this.textBox_Vy2_2.Name = "textBox_Vy2_2";
            this.textBox_Vy2_2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_2.TabIndex = 0x16;
            this.textBox_Vx2_2.Location = new Point(0x70, 20);
            this.textBox_Vx2_2.Name = "textBox_Vx2_2";
            this.textBox_Vx2_2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_2.TabIndex = 0x15;
            this.textBox_Vy1_2.Location = new Point(0x40, 40);
            this.textBox_Vy1_2.Name = "textBox_Vy1_2";
            this.textBox_Vy1_2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_2.TabIndex = 20;
            this.textBox_Vx1_2.Location = new Point(0x40, 20);
            this.textBox_Vx1_2.Name = "textBox_Vx1_2";
            this.textBox_Vx1_2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_2.TabIndex = 0x13;
            this.label184.AutoSize = true;
            this.label184.Location = new Point(8, 0x2c);
            this.label184.Name = "label184";
            this.label184.Size = new Size(0x3b, 12);
            this.label184.TabIndex = 0x12;
            this.label184.Text = "目标电压:";
            this.button_calc_cell2.Location = new Point(0x69, 0x44);
            this.button_calc_cell2.Name = "button_calc_cell2";
            this.button_calc_cell2.Size = new Size(0x3a, 0x17);
            this.button_calc_cell2.TabIndex = 15;
            this.button_calc_cell2.Text = "计算";
            this.button_calc_cell2.UseVisualStyleBackColor = true;
            this.button_calc_cell2.Click += new EventHandler(this.button_calc_cell2_Click);
            this.button_cali_cell2.Location = new Point(0x69, 0x59);
            this.button_cali_cell2.Name = "button_cali_cell2";
            this.button_cali_cell2.Size = new Size(0x3a, 0x17);
            this.button_cali_cell2.TabIndex = 4;
            this.button_cali_cell2.Text = "写入";
            this.button_cali_cell2.UseVisualStyleBackColor = true;
            this.button_cali_cell2.Click += new EventHandler(this.button_cali_cell2_Click);
            this.label185.AutoSize = true;
            this.label185.Location = new Point(8, 0x16);
            this.label185.Name = "label185";
            this.label185.Size = new Size(0x3b, 12);
            this.label185.TabIndex = 0x10;
            this.label185.Text = "当前电压:";
            this.textBox_cail_cell2_b.Location = new Point(0x2b, 0x59);
            this.textBox_cail_cell2_b.Name = "textBox_cail_cell2_b";
            this.textBox_cail_cell2_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell2_b.TabIndex = 3;
            this.label35.AutoSize = true;
            this.label35.Location = new Point(8, 0x5d);
            this.label35.Name = "label35";
            this.label35.Size = new Size(0x1d, 12);
            this.label35.TabIndex = 2;
            this.label35.Text = "B值:";
            this.label37.AutoSize = true;
            this.label37.Location = new Point(8, 0x48);
            this.label37.Name = "label37";
            this.label37.Size = new Size(0x1d, 12);
            this.label37.TabIndex = 1;
            this.label37.Text = "K值:";
            this.textBox_cail_cell2_k.Location = new Point(0x2b, 0x45);
            this.textBox_cail_cell2_k.Name = "textBox_cail_cell2_k";
            this.textBox_cail_cell2_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_cell2_k.TabIndex = 0;
            this.button_Read_Vcell.Location = new Point(0x4b7, 470);
            this.button_Read_Vcell.Name = "button_Read_Vcell";
            this.button_Read_Vcell.Size = new Size(0x4e, 0x17);
            this.button_Read_Vcell.TabIndex = 6;
            this.button_Read_Vcell.Text = "Vcell读取";
            this.button_Read_Vcell.UseVisualStyleBackColor = true;
            this.button_Read_Vcell.Click += new EventHandler(this.button_read_all_Click);
            this.tabPage5.Controls.Add(this.toolStrip_Protect);
            this.tabPage5.Controls.Add(this.groupBox_Vall_I);
            this.tabPage5.Controls.Add(this.groupBox_temp_cal);
            this.tabPage5.Location = new Point(4, 0x16);
            this.tabPage5.Name = "tabPage5";
            this.tabPage5.Size = new Size(0x521, 0x2df);
            this.tabPage5.TabIndex = 4;
            this.tabPage5.Text = "Calibration2";
            this.tabPage5.UseVisualStyleBackColor = true;
            this.toolStrip_Protect.BackColor = Color.Gainsboro;
            this.toolStrip_Protect.Dock = DockStyle.Bottom;
            this.toolStrip_Protect.ImageScalingSize = new Size(20, 20);
            ToolStripItem[] itemArray4 = new ToolStripItem[] { this.toolStripLabel_RxCnt4, this.toolStripLabel19, this.toolStripLabel_TxCnt4 };
            this.toolStrip_Protect.Items.AddRange(itemArray4);
            this.toolStrip_Protect.LayoutStyle = ToolStripLayoutStyle.HorizontalStackWithOverflow;
            this.toolStrip_Protect.Location = new Point(0, 710);
            this.toolStrip_Protect.Name = "toolStrip_Protect";
            this.toolStrip_Protect.Size = new Size(0x521, 0x19);
            this.toolStrip_Protect.TabIndex = 0x69;
            this.toolStrip_Protect.Text = "aaaaa";
            this.toolStripLabel_RxCnt4.Name = "toolStripLabel_RxCnt4";
            this.toolStripLabel_RxCnt4.Overflow = ToolStripItemOverflow.Never;
            this.toolStripLabel_RxCnt4.Size = new Size(15, 0x16);
            this.toolStripLabel_RxCnt4.Text = "0";
            this.toolStripLabel19.Name = "toolStripLabel19";
            this.toolStripLabel19.Size = new Size(0x30, 0x16);
            this.toolStripLabel19.Text = "          ";
            this.toolStripLabel_TxCnt4.Name = "toolStripLabel_TxCnt4";
            this.toolStripLabel_TxCnt4.Size = new Size(15, 0x16);
            this.toolStripLabel_TxCnt4.Text = "0";
            this.groupBox_Vall_I.Controls.Add(this.button_Ichg_reset);
            this.groupBox_Vall_I.Controls.Add(this.button_Idsg_reset);
            this.groupBox_Vall_I.Controls.Add(this.button_Current_read);
            this.groupBox_Vall_I.Controls.Add(this.groupBox_Idsg);
            this.groupBox_Vall_I.Controls.Add(this.groupBox_Ichg);
            this.groupBox_Vall_I.Location = new Point(0x236, 14);
            this.groupBox_Vall_I.Name = "groupBox_Vall_I";
            this.groupBox_Vall_I.Size = new Size(0x1c8, 0x95);
            this.groupBox_Vall_I.TabIndex = 0x68;
            this.groupBox_Vall_I.TabStop = false;
            this.groupBox_Vall_I.Text = "Current";
            this.button_Ichg_reset.Location = new Point(0x166, 100);
            this.button_Ichg_reset.Name = "button_Ichg_reset";
            this.button_Ichg_reset.Size = new Size(0x55, 0x17);
            this.button_Ichg_reset.TabIndex = 0x17;
            this.button_Ichg_reset.Text = "Ichg参数复位";
            this.button_Ichg_reset.UseVisualStyleBackColor = true;
            this.button_Ichg_reset.Click += new EventHandler(this.button_Ichg_reset_Click);
            this.button_Idsg_reset.Location = new Point(0x166, 0x45);
            this.button_Idsg_reset.Name = "button_Idsg_reset";
            this.button_Idsg_reset.Size = new Size(0x55, 0x17);
            this.button_Idsg_reset.TabIndex = 0x16;
            this.button_Idsg_reset.Text = "Idsg参数复位";
            this.button_Idsg_reset.UseVisualStyleBackColor = true;
            this.button_Idsg_reset.Click += new EventHandler(this.button_Idsg_reset_Click);
            this.button_Current_read.Location = new Point(0x166, 40);
            this.button_Current_read.Name = "button_Current_read";
            this.button_Current_read.Size = new Size(0x55, 0x17);
            this.button_Current_read.TabIndex = 0x15;
            this.button_Current_read.Text = "Current读取";
            this.button_Current_read.UseVisualStyleBackColor = true;
            this.button_Current_read.Click += new EventHandler(this.button_Current_read_Click);
            this.groupBox_Idsg.Controls.Add(this.button_calc_Idsg);
            this.groupBox_Idsg.Controls.Add(this.textBox_Vy2_Idsg);
            this.groupBox_Idsg.Controls.Add(this.button_cali_Idsg);
            this.groupBox_Idsg.Controls.Add(this.textBox_Vx2_Idsg);
            this.groupBox_Idsg.Controls.Add(this.textBox_cail_Idsg_b);
            this.groupBox_Idsg.Controls.Add(this.label206);
            this.groupBox_Idsg.Controls.Add(this.label67);
            this.groupBox_Idsg.Controls.Add(this.textBox_Vy1_Idsg);
            this.groupBox_Idsg.Controls.Add(this.label68);
            this.groupBox_Idsg.Controls.Add(this.label207);
            this.groupBox_Idsg.Controls.Add(this.textBox_Vx1_Idsg);
            this.groupBox_Idsg.Controls.Add(this.textBox_cail_Idsg_k);
            this.groupBox_Idsg.Location = new Point(0x13, 20);
            this.groupBox_Idsg.Name = "groupBox_Idsg";
            this.groupBox_Idsg.Size = new Size(0xa5, 0x7b);
            this.groupBox_Idsg.TabIndex = 10;
            this.groupBox_Idsg.TabStop = false;
            this.groupBox_Idsg.Text = "Idsg(B_unit_A)";
            this.button_calc_Idsg.Location = new Point(0x65, 0x45);
            this.button_calc_Idsg.Name = "button_calc_Idsg";
            this.button_calc_Idsg.Size = new Size(0x3a, 0x17);
            this.button_calc_Idsg.TabIndex = 0x11;
            this.button_calc_Idsg.Text = "计算";
            this.button_calc_Idsg.UseVisualStyleBackColor = true;
            this.button_calc_Idsg.Click += new EventHandler(this.button_calc_Idsg_Click);
            this.textBox_Vy2_Idsg.Location = new Point(0x73, 40);
            this.textBox_Vy2_Idsg.Name = "textBox_Vy2_Idsg";
            this.textBox_Vy2_Idsg.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_Idsg.TabIndex = 0x16;
            this.button_cali_Idsg.Location = new Point(0x65, 0x5c);
            this.button_cali_Idsg.Name = "button_cali_Idsg";
            this.button_cali_Idsg.Size = new Size(0x3a, 0x17);
            this.button_cali_Idsg.TabIndex = 4;
            this.button_cali_Idsg.Text = "写入";
            this.button_cali_Idsg.UseVisualStyleBackColor = true;
            this.button_cali_Idsg.Click += new EventHandler(this.button_cali_Idsg_Click);
            this.textBox_Vx2_Idsg.Location = new Point(0x73, 20);
            this.textBox_Vx2_Idsg.Name = "textBox_Vx2_Idsg";
            this.textBox_Vx2_Idsg.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_Idsg.TabIndex = 0x15;
            this.textBox_cail_Idsg_b.Location = new Point(0x2b, 0x5d);
            this.textBox_cail_Idsg_b.Name = "textBox_cail_Idsg_b";
            this.textBox_cail_Idsg_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_Idsg_b.TabIndex = 3;
            this.label206.AutoSize = true;
            this.label206.Location = new Point(6, 0x2c);
            this.label206.Name = "label206";
            this.label206.Size = new Size(0x3b, 12);
            this.label206.TabIndex = 20;
            this.label206.Text = "目标电流:";
            this.label67.AutoSize = true;
            this.label67.Location = new Point(8, 0x60);
            this.label67.Name = "label67";
            this.label67.Size = new Size(0x1d, 12);
            this.label67.TabIndex = 2;
            this.label67.Text = "B值:";
            this.textBox_Vy1_Idsg.Location = new Point(0x43, 40);
            this.textBox_Vy1_Idsg.Name = "textBox_Vy1_Idsg";
            this.textBox_Vy1_Idsg.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_Idsg.TabIndex = 0x13;
            this.label68.AutoSize = true;
            this.label68.Location = new Point(8, 0x4b);
            this.label68.Name = "label68";
            this.label68.Size = new Size(0x1d, 12);
            this.label68.TabIndex = 1;
            this.label68.Text = "K值:";
            this.label207.AutoSize = true;
            this.label207.Location = new Point(6, 0x16);
            this.label207.Name = "label207";
            this.label207.Size = new Size(0x3b, 12);
            this.label207.TabIndex = 0x12;
            this.label207.Text = "当前电流:";
            this.textBox_Vx1_Idsg.Location = new Point(0x43, 20);
            this.textBox_Vx1_Idsg.Name = "textBox_Vx1_Idsg";
            this.textBox_Vx1_Idsg.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_Idsg.TabIndex = 0x11;
            this.textBox_cail_Idsg_k.Location = new Point(0x2b, 0x48);
            this.textBox_cail_Idsg_k.Name = "textBox_cail_Idsg_k";
            this.textBox_cail_Idsg_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_Idsg_k.TabIndex = 0;
            this.groupBox_Ichg.Controls.Add(this.button_calc_Ichg);
            this.groupBox_Ichg.Controls.Add(this.textBox_Vy2_Ichg);
            this.groupBox_Ichg.Controls.Add(this.button_cali_Ichg);
            this.groupBox_Ichg.Controls.Add(this.textBox_Vx2_Ichg);
            this.groupBox_Ichg.Controls.Add(this.textBox_cail_Ichg_b);
            this.groupBox_Ichg.Controls.Add(this.label204);
            this.groupBox_Ichg.Controls.Add(this.label65);
            this.groupBox_Ichg.Controls.Add(this.textBox_Vy1_Ichg);
            this.groupBox_Ichg.Controls.Add(this.label66);
            this.groupBox_Ichg.Controls.Add(this.label205);
            this.groupBox_Ichg.Controls.Add(this.textBox_Vx1_Ichg);
            this.groupBox_Ichg.Controls.Add(this.textBox_cail_Ichg_k);
            this.groupBox_Ichg.Location = new Point(0xbb, 20);
            this.groupBox_Ichg.Name = "groupBox_Ichg";
            this.groupBox_Ichg.Size = new Size(0xa5, 0x7b);
            this.groupBox_Ichg.TabIndex = 9;
            this.groupBox_Ichg.TabStop = false;
            this.groupBox_Ichg.Text = "Ichg(B_unit_A)";
            this.button_calc_Ichg.Location = new Point(0x69, 0x44);
            this.button_calc_Ichg.Name = "button_calc_Ichg";
            this.button_calc_Ichg.Size = new Size(0x3a, 0x17);
            this.button_calc_Ichg.TabIndex = 0x11;
            this.button_calc_Ichg.Text = "计算";
            this.button_calc_Ichg.UseVisualStyleBackColor = true;
            this.button_calc_Ichg.Click += new EventHandler(this.button_calc_Ichg_Click);
            this.textBox_Vy2_Ichg.Location = new Point(0x73, 0x29);
            this.textBox_Vy2_Ichg.Name = "textBox_Vy2_Ichg";
            this.textBox_Vy2_Ichg.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_Ichg.TabIndex = 0x16;
            this.button_cali_Ichg.Location = new Point(0x69, 0x59);
            this.button_cali_Ichg.Name = "button_cali_Ichg";
            this.button_cali_Ichg.Size = new Size(0x3a, 0x17);
            this.button_cali_Ichg.TabIndex = 4;
            this.button_cali_Ichg.Text = "写入";
            this.button_cali_Ichg.UseVisualStyleBackColor = true;
            this.button_cali_Ichg.Click += new EventHandler(this.button_cali_Ichg_Click);
            this.textBox_Vx2_Ichg.Location = new Point(0x73, 0x15);
            this.textBox_Vx2_Ichg.Name = "textBox_Vx2_Ichg";
            this.textBox_Vx2_Ichg.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_Ichg.TabIndex = 0x15;
            this.textBox_cail_Ichg_b.Location = new Point(0x2b, 0x59);
            this.textBox_cail_Ichg_b.Name = "textBox_cail_Ichg_b";
            this.textBox_cail_Ichg_b.Size = new Size(0x38, 0x15);
            this.textBox_cail_Ichg_b.TabIndex = 3;
            this.label204.AutoSize = true;
            this.label204.Location = new Point(6, 0x2d);
            this.label204.Name = "label204";
            this.label204.Size = new Size(0x3b, 12);
            this.label204.TabIndex = 20;
            this.label204.Text = "目标电流:";
            this.label65.AutoSize = true;
            this.label65.Location = new Point(8, 0x5d);
            this.label65.Name = "label65";
            this.label65.Size = new Size(0x1d, 12);
            this.label65.TabIndex = 2;
            this.label65.Text = "B值:";
            this.textBox_Vy1_Ichg.Location = new Point(0x43, 0x29);
            this.textBox_Vy1_Ichg.Name = "textBox_Vy1_Ichg";
            this.textBox_Vy1_Ichg.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_Ichg.TabIndex = 0x13;
            this.label66.AutoSize = true;
            this.label66.Location = new Point(8, 0x48);
            this.label66.Name = "label66";
            this.label66.Size = new Size(0x1d, 12);
            this.label66.TabIndex = 1;
            this.label66.Text = "K值:";
            this.label205.AutoSize = true;
            this.label205.Location = new Point(6, 0x17);
            this.label205.Name = "label205";
            this.label205.Size = new Size(0x3b, 12);
            this.label205.TabIndex = 0x12;
            this.label205.Text = "当前电流:";
            this.textBox_Vx1_Ichg.Location = new Point(0x43, 0x15);
            this.textBox_Vx1_Ichg.Name = "textBox_Vx1_Ichg";
            this.textBox_Vx1_Ichg.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_Ichg.TabIndex = 0x11;
            this.textBox_cail_Ichg_k.Location = new Point(0x2b, 0x45);
            this.textBox_cail_Ichg_k.Name = "textBox_cail_Ichg_k";
            this.textBox_cail_Ichg_k.Size = new Size(0x38, 0x15);
            this.textBox_cail_Ichg_k.TabIndex = 0;
            this.groupBox_temp_cal.Controls.Add(this.groupBox28);
            this.groupBox_temp_cal.Controls.Add(this.groupBox25);
            this.groupBox_temp_cal.Controls.Add(this.groupBox29);
            this.groupBox_temp_cal.Controls.Add(this.button_temp_reset);
            this.groupBox_temp_cal.Controls.Add(this.groupBox26);
            this.groupBox_temp_cal.Controls.Add(this.button_temp_read);
            this.groupBox_temp_cal.Controls.Add(this.groupBox27);
            this.groupBox_temp_cal.Controls.Add(this.groupBox_temp_mos);
            this.groupBox_temp_cal.Controls.Add(this.groupBox_temp3);
            this.groupBox_temp_cal.Controls.Add(this.groupBox_temp_env);
            this.groupBox_temp_cal.Controls.Add(this.groupBox_temp1);
            this.groupBox_temp_cal.Controls.Add(this.groupBox_temp2);
            this.groupBox_temp_cal.Location = new Point(8, 14);
            this.groupBox_temp_cal.Name = "groupBox_temp_cal";
            this.groupBox_temp_cal.Size = new Size(0x21f, 0x21b);
            this.groupBox_temp_cal.TabIndex = 0x67;
            this.groupBox_temp_cal.TabStop = false;
            this.groupBox_temp_cal.Text = "温度校准(B值单位为℃)";
            this.groupBox28.Controls.Add(this.textBox_Vy2_tempEnv3);
            this.groupBox28.Controls.Add(this.button_calc_tempEnv3);
            this.groupBox28.Controls.Add(this.textBox_Vx2_tempEnv3);
            this.groupBox28.Controls.Add(this.button_cali_tempEnv3);
            this.groupBox28.Controls.Add(this.label402);
            this.groupBox28.Controls.Add(this.textBox_tempEnv3_b);
            this.groupBox28.Controls.Add(this.textBox_Vy1_tempEnv3);
            this.groupBox28.Controls.Add(this.label403);
            this.groupBox28.Controls.Add(this.label404);
            this.groupBox28.Controls.Add(this.textBox_Vx1_tempEnv3);
            this.groupBox28.Controls.Add(this.label405);
            this.groupBox28.Controls.Add(this.textBox_tempEnv3_k);
            this.groupBox28.Location = new Point(0x16b, 0x110);
            this.groupBox28.Name = "groupBox28";
            this.groupBox28.Size = new Size(0xa5, 0x7b);
            this.groupBox28.TabIndex = 0x1a;
            this.groupBox28.TabStop = false;
            this.groupBox28.Text = "Temp_env3";
            this.textBox_Vy2_tempEnv3.Location = new Point(0x73, 0x2c);
            this.textBox_Vy2_tempEnv3.Name = "textBox_Vy2_tempEnv3";
            this.textBox_Vy2_tempEnv3.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_tempEnv3.TabIndex = 0x16;
            this.button_calc_tempEnv3.Location = new Point(0x65, 70);
            this.button_calc_tempEnv3.Name = "button_calc_tempEnv3";
            this.button_calc_tempEnv3.Size = new Size(0x3a, 0x17);
            this.button_calc_tempEnv3.TabIndex = 0x11;
            this.button_calc_tempEnv3.Text = "计算";
            this.button_calc_tempEnv3.UseVisualStyleBackColor = true;
            this.button_calc_tempEnv3.Click += new EventHandler(this.button_calc_tempEnv3_Click);
            this.textBox_Vx2_tempEnv3.Location = new Point(0x73, 0x17);
            this.textBox_Vx2_tempEnv3.Name = "textBox_Vx2_tempEnv3";
            this.textBox_Vx2_tempEnv3.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_tempEnv3.TabIndex = 0x15;
            this.button_cali_tempEnv3.Location = new Point(0x65, 0x5c);
            this.button_cali_tempEnv3.Name = "button_cali_tempEnv3";
            this.button_cali_tempEnv3.Size = new Size(0x3a, 0x17);
            this.button_cali_tempEnv3.TabIndex = 4;
            this.button_cali_tempEnv3.Text = "写入";
            this.button_cali_tempEnv3.UseVisualStyleBackColor = true;
            this.button_cali_tempEnv3.Click += new EventHandler(this.button_cali_tempEnv3_Click);
            this.label402.AutoSize = true;
            this.label402.Location = new Point(6, 0x2f);
            this.label402.Name = "label402";
            this.label402.Size = new Size(0x3b, 12);
            this.label402.TabIndex = 20;
            this.label402.Text = "目标温度:";
            this.textBox_tempEnv3_b.Location = new Point(0x26, 0x5e);
            this.textBox_tempEnv3_b.Name = "textBox_tempEnv3_b";
            this.textBox_tempEnv3_b.Size = new Size(0x38, 0x15);
            this.textBox_tempEnv3_b.TabIndex = 3;
            this.textBox_Vy1_tempEnv3.Location = new Point(0x43, 0x2c);
            this.textBox_Vy1_tempEnv3.Name = "textBox_Vy1_tempEnv3";
            this.textBox_Vy1_tempEnv3.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_tempEnv3.TabIndex = 0x13;
            this.label403.AutoSize = true;
            this.label403.Location = new Point(3, 0x61);
            this.label403.Name = "label403";
            this.label403.Size = new Size(0x1d, 12);
            this.label403.TabIndex = 2;
            this.label403.Text = "B值:";
            this.label404.AutoSize = true;
            this.label404.Location = new Point(6, 0x19);
            this.label404.Name = "label404";
            this.label404.Size = new Size(0x3b, 12);
            this.label404.TabIndex = 0x12;
            this.label404.Text = "当前温度:";
            this.textBox_Vx1_tempEnv3.Location = new Point(0x43, 0x17);
            this.textBox_Vx1_tempEnv3.Name = "textBox_Vx1_tempEnv3";
            this.textBox_Vx1_tempEnv3.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_tempEnv3.TabIndex = 0x11;
            this.label405.AutoSize = true;
            this.label405.Location = new Point(3, 0x4c);
            this.label405.Name = "label405";
            this.label405.Size = new Size(0x1d, 12);
            this.label405.TabIndex = 1;
            this.label405.Text = "K值:";
            this.textBox_tempEnv3_k.Location = new Point(0x26, 0x49);
            this.textBox_tempEnv3_k.Name = "textBox_tempEnv3_k";
            this.textBox_tempEnv3_k.Size = new Size(0x38, 0x15);
            this.textBox_tempEnv3_k.TabIndex = 0;
            this.groupBox25.Controls.Add(this.textBox_Vy2_temp6);
            this.groupBox25.Controls.Add(this.button_calc_temp6);
            this.groupBox25.Controls.Add(this.textBox_Vx2_temp6);
            this.groupBox25.Controls.Add(this.button_cali_temp6);
            this.groupBox25.Controls.Add(this.label63);
            this.groupBox25.Controls.Add(this.textBox_temp6_b);
            this.groupBox25.Controls.Add(this.textBox_Vy1_temp6);
            this.groupBox25.Controls.Add(this.label64);
            this.groupBox25.Controls.Add(this.label202);
            this.groupBox25.Controls.Add(this.textBox_Vx1_temp6);
            this.groupBox25.Controls.Add(this.label203);
            this.groupBox25.Controls.Add(this.textBox_temp6_k);
            this.groupBox25.Location = new Point(0x16d, 0x8b);
            this.groupBox25.Name = "groupBox25";
            this.groupBox25.Size = new Size(0xa5, 0x7b);
            this.groupBox25.TabIndex = 0x17;
            this.groupBox25.TabStop = false;
            this.groupBox25.Text = "Temp6";
            this.textBox_Vy2_temp6.Location = new Point(0x73, 0x2c);
            this.textBox_Vy2_temp6.Name = "textBox_Vy2_temp6";
            this.textBox_Vy2_temp6.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_temp6.TabIndex = 0x16;
            this.button_calc_temp6.Location = new Point(0x65, 70);
            this.button_calc_temp6.Name = "button_calc_temp6";
            this.button_calc_temp6.Size = new Size(0x3a, 0x17);
            this.button_calc_temp6.TabIndex = 0x11;
            this.button_calc_temp6.Text = "计算";
            this.button_calc_temp6.UseVisualStyleBackColor = true;
            this.button_calc_temp6.Click += new EventHandler(this.button_calc_temp6_Click);
            this.textBox_Vx2_temp6.Location = new Point(0x73, 0x17);
            this.textBox_Vx2_temp6.Name = "textBox_Vx2_temp6";
            this.textBox_Vx2_temp6.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_temp6.TabIndex = 0x15;
            this.button_cali_temp6.Location = new Point(0x65, 0x5c);
            this.button_cali_temp6.Name = "button_cali_temp6";
            this.button_cali_temp6.Size = new Size(0x3a, 0x17);
            this.button_cali_temp6.TabIndex = 4;
            this.button_cali_temp6.Text = "写入";
            this.button_cali_temp6.UseVisualStyleBackColor = true;
            this.button_cali_temp6.Click += new EventHandler(this.button_cali_temp6_Click);
            this.label63.AutoSize = true;
            this.label63.Location = new Point(6, 0x2f);
            this.label63.Name = "label63";
            this.label63.Size = new Size(0x3b, 12);
            this.label63.TabIndex = 20;
            this.label63.Text = "目标温度:";
            this.textBox_temp6_b.Location = new Point(0x26, 0x5e);
            this.textBox_temp6_b.Name = "textBox_temp6_b";
            this.textBox_temp6_b.Size = new Size(0x38, 0x15);
            this.textBox_temp6_b.TabIndex = 3;
            this.textBox_Vy1_temp6.Location = new Point(0x43, 0x2c);
            this.textBox_Vy1_temp6.Name = "textBox_Vy1_temp6";
            this.textBox_Vy1_temp6.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_temp6.TabIndex = 0x13;
            this.label64.AutoSize = true;
            this.label64.Location = new Point(3, 0x61);
            this.label64.Name = "label64";
            this.label64.Size = new Size(0x1d, 12);
            this.label64.TabIndex = 2;
            this.label64.Text = "B值:";
            this.label202.AutoSize = true;
            this.label202.Location = new Point(6, 0x19);
            this.label202.Name = "label202";
            this.label202.Size = new Size(0x3b, 12);
            this.label202.TabIndex = 0x12;
            this.label202.Text = "当前温度:";
            this.textBox_Vx1_temp6.Location = new Point(0x43, 0x17);
            this.textBox_Vx1_temp6.Name = "textBox_Vx1_temp6";
            this.textBox_Vx1_temp6.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_temp6.TabIndex = 0x11;
            this.label203.AutoSize = true;
            this.label203.Location = new Point(3, 0x4c);
            this.label203.Name = "label203";
            this.label203.Size = new Size(0x1d, 12);
            this.label203.TabIndex = 1;
            this.label203.Text = "K值:";
            this.textBox_temp6_k.Location = new Point(0x26, 0x49);
            this.textBox_temp6_k.Name = "textBox_temp6_k";
            this.textBox_temp6_k.Size = new Size(0x38, 0x15);
            this.textBox_temp6_k.TabIndex = 0;
            this.groupBox29.Controls.Add(this.textBox_Vy2_tempEnv2);
            this.groupBox29.Controls.Add(this.button_calc_tempEnv2);
            this.groupBox29.Controls.Add(this.textBox_Vx2_tempEnv2);
            this.groupBox29.Controls.Add(this.button_cali_tempEnv2);
            this.groupBox29.Controls.Add(this.label406);
            this.groupBox29.Controls.Add(this.textBox_tempEnv2_b);
            this.groupBox29.Controls.Add(this.textBox_Vy1_tempEnv2);
            this.groupBox29.Controls.Add(this.label407);
            this.groupBox29.Controls.Add(this.label408);
            this.groupBox29.Controls.Add(this.textBox_Vx1_tempEnv2);
            this.groupBox29.Controls.Add(this.label409);
            this.groupBox29.Controls.Add(this.textBox_tempEnv2_k);
            this.groupBox29.Location = new Point(0xb7, 0x110);
            this.groupBox29.Name = "groupBox29";
            this.groupBox29.Size = new Size(0xa5, 0x7a);
            this.groupBox29.TabIndex = 0x1b;
            this.groupBox29.TabStop = false;
            this.groupBox29.Text = "Temp_env2";
            this.textBox_Vy2_tempEnv2.Location = new Point(0x73, 0x2c);
            this.textBox_Vy2_tempEnv2.Name = "textBox_Vy2_tempEnv2";
            this.textBox_Vy2_tempEnv2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_tempEnv2.TabIndex = 0x16;
            this.button_calc_tempEnv2.Location = new Point(0x65, 0x44);
            this.button_calc_tempEnv2.Name = "button_calc_tempEnv2";
            this.button_calc_tempEnv2.Size = new Size(0x3a, 0x17);
            this.button_calc_tempEnv2.TabIndex = 0x11;
            this.button_calc_tempEnv2.Text = "计算";
            this.button_calc_tempEnv2.UseVisualStyleBackColor = true;
            this.button_calc_tempEnv2.Click += new EventHandler(this.button_calc_tempEnv2_Click);
            this.textBox_Vx2_tempEnv2.Location = new Point(0x73, 0x16);
            this.textBox_Vx2_tempEnv2.Name = "textBox_Vx2_tempEnv2";
            this.textBox_Vx2_tempEnv2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_tempEnv2.TabIndex = 0x15;
            this.button_cali_tempEnv2.Location = new Point(0x65, 0x58);
            this.button_cali_tempEnv2.Name = "button_cali_tempEnv2";
            this.button_cali_tempEnv2.Size = new Size(0x3a, 0x17);
            this.button_cali_tempEnv2.TabIndex = 4;
            this.button_cali_tempEnv2.Text = "写入";
            this.button_cali_tempEnv2.UseVisualStyleBackColor = true;
            this.button_cali_tempEnv2.Click += new EventHandler(this.button_cali_tempEnv2_Click);
            this.label406.AutoSize = true;
            this.label406.Location = new Point(6, 0x2e);
            this.label406.Name = "label406";
            this.label406.Size = new Size(0x3b, 12);
            this.label406.TabIndex = 20;
            this.label406.Text = "目标温度:";
            this.textBox_tempEnv2_b.Location = new Point(0x2a, 0x5c);
            this.textBox_tempEnv2_b.Name = "textBox_tempEnv2_b";
            this.textBox_tempEnv2_b.Size = new Size(0x38, 0x15);
            this.textBox_tempEnv2_b.TabIndex = 3;
            this.textBox_Vy1_tempEnv2.Location = new Point(0x43, 0x2c);
            this.textBox_Vy1_tempEnv2.Name = "textBox_Vy1_tempEnv2";
            this.textBox_Vy1_tempEnv2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_tempEnv2.TabIndex = 0x13;
            this.label407.AutoSize = true;
            this.label407.Location = new Point(7, 0x5e);
            this.label407.Name = "label407";
            this.label407.Size = new Size(0x1d, 12);
            this.label407.TabIndex = 2;
            this.label407.Text = "B值:";
            this.label408.AutoSize = true;
            this.label408.Location = new Point(6, 0x18);
            this.label408.Name = "label408";
            this.label408.Size = new Size(0x3b, 12);
            this.label408.TabIndex = 0x12;
            this.label408.Text = "当前温度:";
            this.textBox_Vx1_tempEnv2.Location = new Point(0x43, 0x16);
            this.textBox_Vx1_tempEnv2.Name = "textBox_Vx1_tempEnv2";
            this.textBox_Vx1_tempEnv2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_tempEnv2.TabIndex = 0x11;
            this.label409.AutoSize = true;
            this.label409.Location = new Point(7, 0x49);
            this.label409.Name = "label409";
            this.label409.Size = new Size(0x1d, 12);
            this.label409.TabIndex = 1;
            this.label409.Text = "K值:";
            this.textBox_tempEnv2_k.Location = new Point(0x2a, 70);
            this.textBox_tempEnv2_k.Name = "textBox_tempEnv2_k";
            this.textBox_tempEnv2_k.Size = new Size(0x38, 0x15);
            this.textBox_tempEnv2_k.TabIndex = 0;
            this.button_temp_reset.Location = new Point(0xc2, 0x1d5);
            this.button_temp_reset.Name = "button_temp_reset";
            this.button_temp_reset.Size = new Size(0x57, 0x17);
            this.button_temp_reset.TabIndex = 0x15;
            this.button_temp_reset.Text = "Temp参数复位";
            this.button_temp_reset.UseVisualStyleBackColor = true;
            this.button_temp_reset.Click += new EventHandler(this.button_temp_reset_Click);
            this.groupBox26.Controls.Add(this.textBox_Vy2_temp4);
            this.groupBox26.Controls.Add(this.button_calc_temp4);
            this.groupBox26.Controls.Add(this.textBox_Vx2_temp4);
            this.groupBox26.Controls.Add(this.button_cali_temp4);
            this.groupBox26.Controls.Add(this.label392);
            this.groupBox26.Controls.Add(this.textBox_temp4_b);
            this.groupBox26.Controls.Add(this.textBox_Vy1_temp4);
            this.groupBox26.Controls.Add(this.label393);
            this.groupBox26.Controls.Add(this.label396);
            this.groupBox26.Controls.Add(this.textBox_Vx1_temp4);
            this.groupBox26.Controls.Add(this.label397);
            this.groupBox26.Controls.Add(this.textBox_temp4_k);
            this.groupBox26.Location = new Point(12, 0x8b);
            this.groupBox26.Name = "groupBox26";
            this.groupBox26.Size = new Size(0xa5, 0x7a);
            this.groupBox26.TabIndex = 0x18;
            this.groupBox26.TabStop = false;
            this.groupBox26.Text = "Temp4";
            this.textBox_Vy2_temp4.Location = new Point(0x73, 40);
            this.textBox_Vy2_temp4.Name = "textBox_Vy2_temp4";
            this.textBox_Vy2_temp4.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_temp4.TabIndex = 0x16;
            this.button_calc_temp4.Location = new Point(0x67, 0x41);
            this.button_calc_temp4.Name = "button_calc_temp4";
            this.button_calc_temp4.Size = new Size(0x3a, 0x17);
            this.button_calc_temp4.TabIndex = 0x11;
            this.button_calc_temp4.Text = "计算";
            this.button_calc_temp4.UseVisualStyleBackColor = true;
            this.button_calc_temp4.Click += new EventHandler(this.button_calc_temp4_Click);
            this.textBox_Vx2_temp4.Location = new Point(0x73, 20);
            this.textBox_Vx2_temp4.Name = "textBox_Vx2_temp4";
            this.textBox_Vx2_temp4.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_temp4.TabIndex = 0x15;
            this.button_cali_temp4.Location = new Point(0x67, 0x58);
            this.button_cali_temp4.Name = "button_cali_temp4";
            this.button_cali_temp4.Size = new Size(0x3a, 0x17);
            this.button_cali_temp4.TabIndex = 4;
            this.button_cali_temp4.Text = "写入";
            this.button_cali_temp4.UseVisualStyleBackColor = true;
            this.button_cali_temp4.Click += new EventHandler(this.button_cali_temp4_Click);
            this.label392.AutoSize = true;
            this.label392.Location = new Point(6, 0x2c);
            this.label392.Name = "label392";
            this.label392.Size = new Size(0x3b, 12);
            this.label392.TabIndex = 20;
            this.label392.Text = "目标温度:";
            this.textBox_temp4_b.Location = new Point(0x29, 0x58);
            this.textBox_temp4_b.Name = "textBox_temp4_b";
            this.textBox_temp4_b.Size = new Size(0x38, 0x15);
            this.textBox_temp4_b.TabIndex = 3;
            this.textBox_Vy1_temp4.Location = new Point(0x43, 40);
            this.textBox_Vy1_temp4.Name = "textBox_Vy1_temp4";
            this.textBox_Vy1_temp4.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_temp4.TabIndex = 0x13;
            this.label393.AutoSize = true;
            this.label393.Location = new Point(6, 0x5c);
            this.label393.Name = "label393";
            this.label393.Size = new Size(0x1d, 12);
            this.label393.TabIndex = 2;
            this.label393.Text = "B值:";
            this.label396.AutoSize = true;
            this.label396.Location = new Point(6, 0x15);
            this.label396.Name = "label396";
            this.label396.Size = new Size(0x3b, 12);
            this.label396.TabIndex = 0x12;
            this.label396.Text = "当前温度:";
            this.textBox_Vx1_temp4.Location = new Point(0x43, 20);
            this.textBox_Vx1_temp4.Name = "textBox_Vx1_temp4";
            this.textBox_Vx1_temp4.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_temp4.TabIndex = 0x11;
            this.label397.AutoSize = true;
            this.label397.Location = new Point(6, 0x47);
            this.label397.Name = "label397";
            this.label397.Size = new Size(0x1d, 12);
            this.label397.TabIndex = 1;
            this.label397.Text = "K值:";
            this.textBox_temp4_k.Location = new Point(0x29, 0x44);
            this.textBox_temp4_k.Name = "textBox_temp4_k";
            this.textBox_temp4_k.Size = new Size(0x38, 0x15);
            this.textBox_temp4_k.TabIndex = 0;
            this.button_temp_read.Location = new Point(0xc2, 0x1af);
            this.button_temp_read.Name = "button_temp_read";
            this.button_temp_read.Size = new Size(0x57, 0x17);
            this.button_temp_read.TabIndex = 5;
            this.button_temp_read.Text = "Temp读取";
            this.button_temp_read.UseVisualStyleBackColor = true;
            this.button_temp_read.Click += new EventHandler(this.button_temp_read_Click);
            this.groupBox27.Controls.Add(this.textBox_Vy2_temp5);
            this.groupBox27.Controls.Add(this.button_calc_temp5);
            this.groupBox27.Controls.Add(this.textBox_Vx2_temp5);
            this.groupBox27.Controls.Add(this.button_cali_temp5);
            this.groupBox27.Controls.Add(this.label398);
            this.groupBox27.Controls.Add(this.textBox_temp5_b);
            this.groupBox27.Controls.Add(this.textBox_Vy1_temp5);
            this.groupBox27.Controls.Add(this.label399);
            this.groupBox27.Controls.Add(this.label400);
            this.groupBox27.Controls.Add(this.textBox_Vx1_temp5);
            this.groupBox27.Controls.Add(this.label401);
            this.groupBox27.Controls.Add(this.textBox_temp5_k);
            this.groupBox27.Location = new Point(0xb9, 0x8b);
            this.groupBox27.Name = "groupBox27";
            this.groupBox27.Size = new Size(0xa5, 0x7a);
            this.groupBox27.TabIndex = 0x19;
            this.groupBox27.TabStop = false;
            this.groupBox27.Text = "Temp5";
            this.textBox_Vy2_temp5.Location = new Point(0x73, 0x2c);
            this.textBox_Vy2_temp5.Name = "textBox_Vy2_temp5";
            this.textBox_Vy2_temp5.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_temp5.TabIndex = 0x16;
            this.button_calc_temp5.Location = new Point(0x65, 0x44);
            this.button_calc_temp5.Name = "button_calc_temp5";
            this.button_calc_temp5.Size = new Size(0x3a, 0x17);
            this.button_calc_temp5.TabIndex = 0x11;
            this.button_calc_temp5.Text = "计算";
            this.button_calc_temp5.UseVisualStyleBackColor = true;
            this.button_calc_temp5.Click += new EventHandler(this.button_calc_temp5_Click);
            this.textBox_Vx2_temp5.Location = new Point(0x73, 0x16);
            this.textBox_Vx2_temp5.Name = "textBox_Vx2_temp5";
            this.textBox_Vx2_temp5.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_temp5.TabIndex = 0x15;
            this.button_cali_temp5.Location = new Point(0x65, 0x58);
            this.button_cali_temp5.Name = "button_cali_temp5";
            this.button_cali_temp5.Size = new Size(0x3a, 0x17);
            this.button_cali_temp5.TabIndex = 4;
            this.button_cali_temp5.Text = "写入";
            this.button_cali_temp5.UseVisualStyleBackColor = true;
            this.button_cali_temp5.Click += new EventHandler(this.button_cali_temp5_Click);
            this.label398.AutoSize = true;
            this.label398.Location = new Point(6, 0x2e);
            this.label398.Name = "label398";
            this.label398.Size = new Size(0x3b, 12);
            this.label398.TabIndex = 20;
            this.label398.Text = "目标温度:";
            this.textBox_temp5_b.Location = new Point(0x2a, 0x5c);
            this.textBox_temp5_b.Name = "textBox_temp5_b";
            this.textBox_temp5_b.Size = new Size(0x38, 0x15);
            this.textBox_temp5_b.TabIndex = 3;
            this.textBox_Vy1_temp5.Location = new Point(0x43, 0x2c);
            this.textBox_Vy1_temp5.Name = "textBox_Vy1_temp5";
            this.textBox_Vy1_temp5.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_temp5.TabIndex = 0x13;
            this.label399.AutoSize = true;
            this.label399.Location = new Point(7, 0x5e);
            this.label399.Name = "label399";
            this.label399.Size = new Size(0x1d, 12);
            this.label399.TabIndex = 2;
            this.label399.Text = "B值:";
            this.label400.AutoSize = true;
            this.label400.Location = new Point(6, 0x18);
            this.label400.Name = "label400";
            this.label400.Size = new Size(0x3b, 12);
            this.label400.TabIndex = 0x12;
            this.label400.Text = "当前温度:";
            this.textBox_Vx1_temp5.Location = new Point(0x43, 0x16);
            this.textBox_Vx1_temp5.Name = "textBox_Vx1_temp5";
            this.textBox_Vx1_temp5.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_temp5.TabIndex = 0x11;
            this.label401.AutoSize = true;
            this.label401.Location = new Point(7, 0x49);
            this.label401.Name = "label401";
            this.label401.Size = new Size(0x1d, 12);
            this.label401.TabIndex = 1;
            this.label401.Text = "K值:";
            this.textBox_temp5_k.Location = new Point(0x2a, 70);
            this.textBox_temp5_k.Name = "textBox_temp5_k";
            this.textBox_temp5_k.Size = new Size(0x38, 0x15);
            this.textBox_temp5_k.TabIndex = 0;
            this.groupBox_temp_mos.Controls.Add(this.textBox_Vy2_tempMos);
            this.groupBox_temp_mos.Controls.Add(this.button_calc_tempmos);
            this.groupBox_temp_mos.Controls.Add(this.textBox_Vx2_tempMos);
            this.groupBox_temp_mos.Controls.Add(this.button_cali_temp_mos);
            this.groupBox_temp_mos.Controls.Add(this.label212);
            this.groupBox_temp_mos.Controls.Add(this.textBox_temp_mos_b);
            this.groupBox_temp_mos.Controls.Add(this.textBox_Vy1_tempMos);
            this.groupBox_temp_mos.Controls.Add(this.label130);
            this.groupBox_temp_mos.Controls.Add(this.label213);
            this.groupBox_temp_mos.Controls.Add(this.textBox_Vx1_tempMos);
            this.groupBox_temp_mos.Controls.Add(this.label131);
            this.groupBox_temp_mos.Controls.Add(this.textBox_temp_mos_k);
            this.groupBox_temp_mos.Location = new Point(12, 0x198);
            this.groupBox_temp_mos.Name = "groupBox_temp_mos";
            this.groupBox_temp_mos.Size = new Size(0xa5, 0x7b);
            this.groupBox_temp_mos.TabIndex = 7;
            this.groupBox_temp_mos.TabStop = false;
            this.groupBox_temp_mos.Text = "Temp_mos";
            this.textBox_Vy2_tempMos.Location = new Point(0x72, 0x29);
            this.textBox_Vy2_tempMos.Name = "textBox_Vy2_tempMos";
            this.textBox_Vy2_tempMos.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_tempMos.TabIndex = 0x16;
            this.button_calc_tempmos.Location = new Point(0x65, 0x41);
            this.button_calc_tempmos.Name = "button_calc_tempmos";
            this.button_calc_tempmos.Size = new Size(0x3a, 0x17);
            this.button_calc_tempmos.TabIndex = 0x11;
            this.button_calc_tempmos.Text = "计算";
            this.button_calc_tempmos.UseVisualStyleBackColor = true;
            this.button_calc_tempmos.Click += new EventHandler(this.button_calc_tempmos_Click);
            this.textBox_Vx2_tempMos.Location = new Point(0x72, 0x15);
            this.textBox_Vx2_tempMos.Name = "textBox_Vx2_tempMos";
            this.textBox_Vx2_tempMos.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_tempMos.TabIndex = 0x15;
            this.button_cali_temp_mos.Location = new Point(0x65, 0x58);
            this.button_cali_temp_mos.Name = "button_cali_temp_mos";
            this.button_cali_temp_mos.Size = new Size(0x3a, 0x17);
            this.button_cali_temp_mos.TabIndex = 4;
            this.button_cali_temp_mos.Text = "写入";
            this.button_cali_temp_mos.UseVisualStyleBackColor = true;
            this.button_cali_temp_mos.Click += new EventHandler(this.button_cali_temp_mos_Click);
            this.label212.AutoSize = true;
            this.label212.Location = new Point(5, 0x2d);
            this.label212.Name = "label212";
            this.label212.Size = new Size(0x3b, 12);
            this.label212.TabIndex = 20;
            this.label212.Text = "目标温度:";
            this.textBox_temp_mos_b.Location = new Point(40, 0x58);
            this.textBox_temp_mos_b.Name = "textBox_temp_mos_b";
            this.textBox_temp_mos_b.Size = new Size(0x38, 0x15);
            this.textBox_temp_mos_b.TabIndex = 3;
            this.textBox_Vy1_tempMos.Location = new Point(0x42, 0x29);
            this.textBox_Vy1_tempMos.Name = "textBox_Vy1_tempMos";
            this.textBox_Vy1_tempMos.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_tempMos.TabIndex = 0x13;
            this.label130.AutoSize = true;
            this.label130.Location = new Point(5, 0x5c);
            this.label130.Name = "label130";
            this.label130.Size = new Size(0x1d, 12);
            this.label130.TabIndex = 2;
            this.label130.Text = "B值:";
            this.label213.AutoSize = true;
            this.label213.Location = new Point(5, 0x17);
            this.label213.Name = "label213";
            this.label213.Size = new Size(0x3b, 12);
            this.label213.TabIndex = 0x12;
            this.label213.Text = "当前温度:";
            this.textBox_Vx1_tempMos.Location = new Point(0x42, 0x15);
            this.textBox_Vx1_tempMos.Name = "textBox_Vx1_tempMos";
            this.textBox_Vx1_tempMos.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_tempMos.TabIndex = 0x11;
            this.label131.AutoSize = true;
            this.label131.Location = new Point(5, 0x47);
            this.label131.Name = "label131";
            this.label131.Size = new Size(0x1d, 12);
            this.label131.TabIndex = 1;
            this.label131.Text = "K值:";
            this.textBox_temp_mos_k.Location = new Point(40, 0x44);
            this.textBox_temp_mos_k.Name = "textBox_temp_mos_k";
            this.textBox_temp_mos_k.Size = new Size(0x38, 0x15);
            this.textBox_temp_mos_k.TabIndex = 0;
            this.groupBox_temp3.Controls.Add(this.textBox_Vy2_temp3);
            this.groupBox_temp3.Controls.Add(this.button_calc_temp3);
            this.groupBox_temp3.Controls.Add(this.textBox_Vx2_temp3);
            this.groupBox_temp3.Controls.Add(this.button_cali_temp3);
            this.groupBox_temp3.Controls.Add(this.label210);
            this.groupBox_temp3.Controls.Add(this.textBox_temp3_b);
            this.groupBox_temp3.Controls.Add(this.textBox_Vy1_temp3);
            this.groupBox_temp3.Controls.Add(this.label126);
            this.groupBox_temp3.Controls.Add(this.label211);
            this.groupBox_temp3.Controls.Add(this.textBox_Vx1_temp3);
            this.groupBox_temp3.Controls.Add(this.label127);
            this.groupBox_temp3.Controls.Add(this.textBox_temp3_k);
            this.groupBox_temp3.Location = new Point(0x16d, 14);
            this.groupBox_temp3.Name = "groupBox_temp3";
            this.groupBox_temp3.Size = new Size(0xa5, 0x7b);
            this.groupBox_temp3.TabIndex = 7;
            this.groupBox_temp3.TabStop = false;
            this.groupBox_temp3.Text = "Temp3";
            this.textBox_Vy2_temp3.Location = new Point(0x73, 0x2c);
            this.textBox_Vy2_temp3.Name = "textBox_Vy2_temp3";
            this.textBox_Vy2_temp3.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_temp3.TabIndex = 0x16;
            this.button_calc_temp3.Location = new Point(0x65, 70);
            this.button_calc_temp3.Name = "button_calc_temp3";
            this.button_calc_temp3.Size = new Size(0x3a, 0x17);
            this.button_calc_temp3.TabIndex = 0x11;
            this.button_calc_temp3.Text = "计算";
            this.button_calc_temp3.UseVisualStyleBackColor = true;
            this.button_calc_temp3.Click += new EventHandler(this.button_calc_temp3_Click);
            this.textBox_Vx2_temp3.Location = new Point(0x73, 0x17);
            this.textBox_Vx2_temp3.Name = "textBox_Vx2_temp3";
            this.textBox_Vx2_temp3.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_temp3.TabIndex = 0x15;
            this.button_cali_temp3.Location = new Point(0x65, 0x5c);
            this.button_cali_temp3.Name = "button_cali_temp3";
            this.button_cali_temp3.Size = new Size(0x3a, 0x17);
            this.button_cali_temp3.TabIndex = 4;
            this.button_cali_temp3.Text = "写入";
            this.button_cali_temp3.UseVisualStyleBackColor = true;
            this.button_cali_temp3.Click += new EventHandler(this.button_cali_temp3_Click);
            this.label210.AutoSize = true;
            this.label210.Location = new Point(6, 0x2f);
            this.label210.Name = "label210";
            this.label210.Size = new Size(0x3b, 12);
            this.label210.TabIndex = 20;
            this.label210.Text = "目标温度:";
            this.textBox_temp3_b.Location = new Point(0x26, 0x5e);
            this.textBox_temp3_b.Name = "textBox_temp3_b";
            this.textBox_temp3_b.Size = new Size(0x38, 0x15);
            this.textBox_temp3_b.TabIndex = 3;
            this.textBox_Vy1_temp3.Location = new Point(0x43, 0x2c);
            this.textBox_Vy1_temp3.Name = "textBox_Vy1_temp3";
            this.textBox_Vy1_temp3.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_temp3.TabIndex = 0x13;
            this.label126.AutoSize = true;
            this.label126.Location = new Point(3, 0x61);
            this.label126.Name = "label126";
            this.label126.Size = new Size(0x1d, 12);
            this.label126.TabIndex = 2;
            this.label126.Text = "B值:";
            this.label211.AutoSize = true;
            this.label211.Location = new Point(6, 0x19);
            this.label211.Name = "label211";
            this.label211.Size = new Size(0x3b, 12);
            this.label211.TabIndex = 0x12;
            this.label211.Text = "当前温度:";
            this.textBox_Vx1_temp3.Location = new Point(0x43, 0x17);
            this.textBox_Vx1_temp3.Name = "textBox_Vx1_temp3";
            this.textBox_Vx1_temp3.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_temp3.TabIndex = 0x11;
            this.label127.AutoSize = true;
            this.label127.Location = new Point(3, 0x4c);
            this.label127.Name = "label127";
            this.label127.Size = new Size(0x1d, 12);
            this.label127.TabIndex = 1;
            this.label127.Text = "K值:";
            this.textBox_temp3_k.Location = new Point(0x26, 0x49);
            this.textBox_temp3_k.Name = "textBox_temp3_k";
            this.textBox_temp3_k.Size = new Size(0x38, 0x15);
            this.textBox_temp3_k.TabIndex = 0;
            this.groupBox_temp_env.Controls.Add(this.button_calc_tempEnv1);
            this.groupBox_temp_env.Controls.Add(this.textBox_Vy2_tempEnv1);
            this.groupBox_temp_env.Controls.Add(this.button_cali_tempEnv1);
            this.groupBox_temp_env.Controls.Add(this.textBox_Vx2_tempEnv1);
            this.groupBox_temp_env.Controls.Add(this.textBox_tempEnv1_b);
            this.groupBox_temp_env.Controls.Add(this.label216);
            this.groupBox_temp_env.Controls.Add(this.label128);
            this.groupBox_temp_env.Controls.Add(this.textBox_Vy1_tempEnv1);
            this.groupBox_temp_env.Controls.Add(this.label129);
            this.groupBox_temp_env.Controls.Add(this.label217);
            this.groupBox_temp_env.Controls.Add(this.textBox_Vx1_tempEnv1);
            this.groupBox_temp_env.Controls.Add(this.textBox_tempEnv1_k);
            this.groupBox_temp_env.Location = new Point(12, 0x110);
            this.groupBox_temp_env.Name = "groupBox_temp_env";
            this.groupBox_temp_env.Size = new Size(0xa5, 0x79);
            this.groupBox_temp_env.TabIndex = 7;
            this.groupBox_temp_env.TabStop = false;
            this.groupBox_temp_env.Text = "Temp_env1";
            this.button_calc_tempEnv1.Location = new Point(100, 0x41);
            this.button_calc_tempEnv1.Name = "button_calc_tempEnv1";
            this.button_calc_tempEnv1.Size = new Size(0x3a, 0x17);
            this.button_calc_tempEnv1.TabIndex = 0x11;
            this.button_calc_tempEnv1.Text = "计算";
            this.button_calc_tempEnv1.UseVisualStyleBackColor = true;
            this.button_calc_tempEnv1.Click += new EventHandler(this.button_calc_tempEnv1_Click);
            this.textBox_Vy2_tempEnv1.Location = new Point(0x70, 0x2c);
            this.textBox_Vy2_tempEnv1.Name = "textBox_Vy2_tempEnv1";
            this.textBox_Vy2_tempEnv1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_tempEnv1.TabIndex = 0x16;
            this.button_cali_tempEnv1.Location = new Point(100, 0x58);
            this.button_cali_tempEnv1.Name = "button_cali_tempEnv1";
            this.button_cali_tempEnv1.Size = new Size(0x3a, 0x17);
            this.button_cali_tempEnv1.TabIndex = 4;
            this.button_cali_tempEnv1.Text = "写入";
            this.button_cali_tempEnv1.UseVisualStyleBackColor = true;
            this.button_cali_tempEnv1.Click += new EventHandler(this.button_cali_tempEnv1_Click);
            this.textBox_Vx2_tempEnv1.Location = new Point(0x70, 0x16);
            this.textBox_Vx2_tempEnv1.Name = "textBox_Vx2_tempEnv1";
            this.textBox_Vx2_tempEnv1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_tempEnv1.TabIndex = 0x15;
            this.textBox_tempEnv1_b.Location = new Point(0x26, 0x59);
            this.textBox_tempEnv1_b.Name = "textBox_tempEnv1_b";
            this.textBox_tempEnv1_b.Size = new Size(0x38, 0x15);
            this.textBox_tempEnv1_b.TabIndex = 3;
            this.label216.AutoSize = true;
            this.label216.Location = new Point(3, 0x2e);
            this.label216.Name = "label216";
            this.label216.Size = new Size(0x3b, 12);
            this.label216.TabIndex = 20;
            this.label216.Text = "目标温度:";
            this.label128.AutoSize = true;
            this.label128.Location = new Point(3, 0x5d);
            this.label128.Name = "label128";
            this.label128.Size = new Size(0x1d, 12);
            this.label128.TabIndex = 2;
            this.label128.Text = "B值:";
            this.textBox_Vy1_tempEnv1.Location = new Point(0x40, 0x2c);
            this.textBox_Vy1_tempEnv1.Name = "textBox_Vy1_tempEnv1";
            this.textBox_Vy1_tempEnv1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_tempEnv1.TabIndex = 0x13;
            this.label129.AutoSize = true;
            this.label129.Location = new Point(3, 0x48);
            this.label129.Name = "label129";
            this.label129.Size = new Size(0x1d, 12);
            this.label129.TabIndex = 1;
            this.label129.Text = "K值:";
            this.label217.AutoSize = true;
            this.label217.Location = new Point(3, 0x18);
            this.label217.Name = "label217";
            this.label217.Size = new Size(0x3b, 12);
            this.label217.TabIndex = 0x12;
            this.label217.Text = "当前温度:";
            this.textBox_Vx1_tempEnv1.Location = new Point(0x40, 0x16);
            this.textBox_Vx1_tempEnv1.Name = "textBox_Vx1_tempEnv1";
            this.textBox_Vx1_tempEnv1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_tempEnv1.TabIndex = 0x11;
            this.textBox_tempEnv1_k.Location = new Point(0x26, 0x45);
            this.textBox_tempEnv1_k.Name = "textBox_tempEnv1_k";
            this.textBox_tempEnv1_k.Size = new Size(0x38, 0x15);
            this.textBox_tempEnv1_k.TabIndex = 0;
            this.groupBox_temp1.Controls.Add(this.textBox_Vy2_temp1);
            this.groupBox_temp1.Controls.Add(this.button_calc_temp1);
            this.groupBox_temp1.Controls.Add(this.textBox_Vx2_temp1);
            this.groupBox_temp1.Controls.Add(this.button_cali_temp1);
            this.groupBox_temp1.Controls.Add(this.label208);
            this.groupBox_temp1.Controls.Add(this.textBox_temp1_b);
            this.groupBox_temp1.Controls.Add(this.textBox_Vy1_temp1);
            this.groupBox_temp1.Controls.Add(this.label112);
            this.groupBox_temp1.Controls.Add(this.label209);
            this.groupBox_temp1.Controls.Add(this.textBox_Vx1_temp1);
            this.groupBox_temp1.Controls.Add(this.label115);
            this.groupBox_temp1.Controls.Add(this.textBox_temp1_k);
            this.groupBox_temp1.Location = new Point(12, 14);
            this.groupBox_temp1.Name = "groupBox_temp1";
            this.groupBox_temp1.Size = new Size(0xa5, 0x7a);
            this.groupBox_temp1.TabIndex = 7;
            this.groupBox_temp1.TabStop = false;
            this.groupBox_temp1.Text = "Temp1";
            this.textBox_Vy2_temp1.Location = new Point(0x73, 40);
            this.textBox_Vy2_temp1.Name = "textBox_Vy2_temp1";
            this.textBox_Vy2_temp1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_temp1.TabIndex = 0x16;
            this.button_calc_temp1.Location = new Point(0x67, 0x41);
            this.button_calc_temp1.Name = "button_calc_temp1";
            this.button_calc_temp1.Size = new Size(0x3a, 0x17);
            this.button_calc_temp1.TabIndex = 0x11;
            this.button_calc_temp1.Text = "计算";
            this.button_calc_temp1.UseVisualStyleBackColor = true;
            this.button_calc_temp1.Click += new EventHandler(this.button_calc_temp1_Click);
            this.textBox_Vx2_temp1.Location = new Point(0x73, 20);
            this.textBox_Vx2_temp1.Name = "textBox_Vx2_temp1";
            this.textBox_Vx2_temp1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_temp1.TabIndex = 0x15;
            this.button_cali_temp1.Location = new Point(0x67, 0x58);
            this.button_cali_temp1.Name = "button_cali_temp1";
            this.button_cali_temp1.Size = new Size(0x3a, 0x17);
            this.button_cali_temp1.TabIndex = 4;
            this.button_cali_temp1.Text = "写入";
            this.button_cali_temp1.UseVisualStyleBackColor = true;
            this.button_cali_temp1.Click += new EventHandler(this.button_cali_temp1_Click);
            this.label208.AutoSize = true;
            this.label208.Location = new Point(6, 0x2c);
            this.label208.Name = "label208";
            this.label208.Size = new Size(0x3b, 12);
            this.label208.TabIndex = 20;
            this.label208.Text = "目标温度:";
            this.textBox_temp1_b.Location = new Point(0x29, 0x58);
            this.textBox_temp1_b.Name = "textBox_temp1_b";
            this.textBox_temp1_b.Size = new Size(0x38, 0x15);
            this.textBox_temp1_b.TabIndex = 3;
            this.textBox_Vy1_temp1.Location = new Point(0x43, 40);
            this.textBox_Vy1_temp1.Name = "textBox_Vy1_temp1";
            this.textBox_Vy1_temp1.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_temp1.TabIndex = 0x13;
            this.label112.AutoSize = true;
            this.label112.Location = new Point(6, 0x5c);
            this.label112.Name = "label112";
            this.label112.Size = new Size(0x1d, 12);
            this.label112.TabIndex = 2;
            this.label112.Text = "B值:";
            this.label209.AutoSize = true;
            this.label209.Location = new Point(6, 0x15);
            this.label209.Name = "label209";
            this.label209.Size = new Size(0x3b, 12);
            this.label209.TabIndex = 0x12;
            this.label209.Text = "当前温度:";
            this.textBox_Vx1_temp1.Location = new Point(0x43, 20);
            this.textBox_Vx1_temp1.Name = "textBox_Vx1_temp1";
            this.textBox_Vx1_temp1.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_temp1.TabIndex = 0x11;
            this.label115.AutoSize = true;
            this.label115.Location = new Point(6, 0x47);
            this.label115.Name = "label115";
            this.label115.Size = new Size(0x1d, 12);
            this.label115.TabIndex = 1;
            this.label115.Text = "K值:";
            this.textBox_temp1_k.Location = new Point(0x29, 0x44);
            this.textBox_temp1_k.Name = "textBox_temp1_k";
            this.textBox_temp1_k.Size = new Size(0x38, 0x15);
            this.textBox_temp1_k.TabIndex = 0;
            this.groupBox_temp2.Controls.Add(this.textBox_Vy2_temp2);
            this.groupBox_temp2.Controls.Add(this.button_calc_temp2);
            this.groupBox_temp2.Controls.Add(this.textBox_Vx2_temp2);
            this.groupBox_temp2.Controls.Add(this.button_cali_temp2);
            this.groupBox_temp2.Controls.Add(this.label214);
            this.groupBox_temp2.Controls.Add(this.textBox_temp2_b);
            this.groupBox_temp2.Controls.Add(this.textBox_Vy1_temp2);
            this.groupBox_temp2.Controls.Add(this.label116);
            this.groupBox_temp2.Controls.Add(this.label215);
            this.groupBox_temp2.Controls.Add(this.textBox_Vx1_temp2);
            this.groupBox_temp2.Controls.Add(this.label125);
            this.groupBox_temp2.Controls.Add(this.textBox_temp2_k);
            this.groupBox_temp2.Location = new Point(0xb9, 14);
            this.groupBox_temp2.Name = "groupBox_temp2";
            this.groupBox_temp2.Size = new Size(0xa5, 0x7a);
            this.groupBox_temp2.TabIndex = 7;
            this.groupBox_temp2.TabStop = false;
            this.groupBox_temp2.Text = "Temp2";
            this.textBox_Vy2_temp2.Location = new Point(0x73, 0x2c);
            this.textBox_Vy2_temp2.Name = "textBox_Vy2_temp2";
            this.textBox_Vy2_temp2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy2_temp2.TabIndex = 0x16;
            this.button_calc_temp2.Location = new Point(0x65, 0x44);
            this.button_calc_temp2.Name = "button_calc_temp2";
            this.button_calc_temp2.Size = new Size(0x3a, 0x17);
            this.button_calc_temp2.TabIndex = 0x11;
            this.button_calc_temp2.Text = "计算";
            this.button_calc_temp2.UseVisualStyleBackColor = true;
            this.button_calc_temp2.Click += new EventHandler(this.button_calc_temp2_Click);
            this.textBox_Vx2_temp2.Location = new Point(0x73, 0x16);
            this.textBox_Vx2_temp2.Name = "textBox_Vx2_temp2";
            this.textBox_Vx2_temp2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx2_temp2.TabIndex = 0x15;
            this.button_cali_temp2.Location = new Point(0x65, 0x58);
            this.button_cali_temp2.Name = "button_cali_temp2";
            this.button_cali_temp2.Size = new Size(0x3a, 0x17);
            this.button_cali_temp2.TabIndex = 4;
            this.button_cali_temp2.Text = "写入";
            this.button_cali_temp2.UseVisualStyleBackColor = true;
            this.button_cali_temp2.Click += new EventHandler(this.button_cali_temp2_Click);
            this.label214.AutoSize = true;
            this.label214.Location = new Point(6, 0x2e);
            this.label214.Name = "label214";
            this.label214.Size = new Size(0x3b, 12);
            this.label214.TabIndex = 20;
            this.label214.Text = "目标温度:";
            this.textBox_temp2_b.Location = new Point(0x2a, 0x5c);
            this.textBox_temp2_b.Name = "textBox_temp2_b";
            this.textBox_temp2_b.Size = new Size(0x38, 0x15);
            this.textBox_temp2_b.TabIndex = 3;
            this.textBox_Vy1_temp2.Location = new Point(0x43, 0x2c);
            this.textBox_Vy1_temp2.Name = "textBox_Vy1_temp2";
            this.textBox_Vy1_temp2.Size = new Size(0x2e, 0x15);
            this.textBox_Vy1_temp2.TabIndex = 0x13;
            this.label116.AutoSize = true;
            this.label116.Location = new Point(7, 0x5e);
            this.label116.Name = "label116";
            this.label116.Size = new Size(0x1d, 12);
            this.label116.TabIndex = 2;
            this.label116.Text = "B值:";
            this.label215.AutoSize = true;
            this.label215.Location = new Point(6, 0x18);
            this.label215.Name = "label215";
            this.label215.Size = new Size(0x3b, 12);
            this.label215.TabIndex = 0x12;
            this.label215.Text = "当前温度:";
            this.textBox_Vx1_temp2.Location = new Point(0x43, 0x16);
            this.textBox_Vx1_temp2.Name = "textBox_Vx1_temp2";
            this.textBox_Vx1_temp2.Size = new Size(0x2e, 0x15);
            this.textBox_Vx1_temp2.TabIndex = 0x11;
            this.label125.AutoSize = true;
            this.label125.Location = new Point(7, 0x49);
            this.label125.Name = "label125";
            this.label125.Size = new Size(0x1d, 12);
            this.label125.TabIndex = 1;
            this.label125.Text = "K值:";
            this.textBox_temp2_k.Location = new Point(0x2a, 70);
            this.textBox_temp2_k.Name = "textBox_temp2_k";
            this.textBox_temp2_k.Size = new Size(0x38, 0x15);
            this.textBox_temp2_k.TabIndex = 0;
            this.tabPage3.Controls.Add(this.groupBox37);
            this.tabPage3.Controls.Add(this.groupBox33);
            this.tabPage3.Controls.Add(this.groupBox32);
            this.tabPage3.Controls.Add(this.toolStrip_Calib2);
            this.tabPage3.Location = new Point(4, 0x16);
            this.tabPage3.Name = "tabPage3";
            this.tabPage3.Size = new Size(0x521, 0x2df);
            this.tabPage3.TabIndex = 2;
            this.tabPage3.Text = "Protection";
            this.tabPage3.UseVisualStyleBackColor = true;
            this.groupBox37.Controls.Add(this.button_HeatCool_Reset);
            this.groupBox37.Controls.Add(this.button_HeatCool_Set);
            this.groupBox37.Controls.Add(this.button_HeatCool_Read);
            this.groupBox37.Controls.Add(this.textBox_Cool_Res2);
            this.groupBox37.Controls.Add(this.textBox_Cool_Res3);
            this.groupBox37.Controls.Add(this.textBox_Cool_Res4);
            this.groupBox37.Controls.Add(this.label463);
            this.groupBox37.Controls.Add(this.label465);
            this.groupBox37.Controls.Add(this.label471);
            this.groupBox37.Controls.Add(this.label473);
            this.groupBox37.Controls.Add(this.textBox_Cool_Res1);
            this.groupBox37.Controls.Add(this.label464);
            this.groupBox37.Controls.Add(this.textBox_Heat_Res2);
            this.groupBox37.Controls.Add(this.label466);
            this.groupBox37.Controls.Add(this.textBox_Heat_Res3);
            this.groupBox37.Controls.Add(this.textBox_Heat_Res4);
            this.groupBox37.Controls.Add(this.textBox_Heat_Res6);
            this.groupBox37.Controls.Add(this.label467);
            this.groupBox37.Controls.Add(this.textBox_Heat_Res5);
            this.groupBox37.Controls.Add(this.label468);
            this.groupBox37.Controls.Add(this.label469);
            this.groupBox37.Controls.Add(this.label437);
            this.groupBox37.Controls.Add(this.label439);
            this.groupBox37.Controls.Add(this.textBox_CoolDSG_High);
            this.groupBox37.Controls.Add(this.label441);
            this.groupBox37.Controls.Add(this.textBox_CoolDSG_Low);
            this.groupBox37.Controls.Add(this.label443);
            this.groupBox37.Controls.Add(this.textBox_CoolCHG_High);
            this.groupBox37.Controls.Add(this.textBox_CoolCHG_Low);
            this.groupBox37.Controls.Add(this.textBox_CoolTime_Max);
            this.groupBox37.Controls.Add(this.label4441);
            this.groupBox37.Controls.Add(this.textBox_CoolCur_Min);
            this.groupBox37.Controls.Add(this.label457);
            this.groupBox37.Controls.Add(this.textBox_CoolCur_Max);
            this.groupBox37.Controls.Add(this.label460);
            this.groupBox37.Controls.Add(this.label461);
            this.groupBox37.Controls.Add(this.label281);
            this.groupBox37.Controls.Add(this.label434);
            this.groupBox37.Controls.Add(this.label285);
            this.groupBox37.Controls.Add(this.textBox_HeatDSG_High);
            this.groupBox37.Controls.Add(this.label289);
            this.groupBox37.Controls.Add(this.textBox_HeatDSG_Low);
            this.groupBox37.Controls.Add(this.label313);
            this.groupBox37.Controls.Add(this.textBox_HeatCHG_High);
            this.groupBox37.Controls.Add(this.textBox_Heat_Res1);
            this.groupBox37.Controls.Add(this.textBox_HeatCHG_Low);
            this.groupBox37.Controls.Add(this.textBox_HeatTime_Max);
            this.groupBox37.Controls.Add(this.label433);
            this.groupBox37.Controls.Add(this.textBox_HeatCur_Min);
            this.groupBox37.Controls.Add(this.label432);
            this.groupBox37.Controls.Add(this.textBox_HeatCur_Max);
            this.groupBox37.Controls.Add(this.label422);
            this.groupBox37.Controls.Add(this.label321);
            this.groupBox37.Location = new Point(970, 11);
            this.groupBox37.Name = "groupBox37";
            this.groupBox37.Size = new Size(0x142, 0x1d3);
            this.groupBox37.TabIndex = 0xe7;
            this.groupBox37.TabStop = false;
            this.groupBox37.Text = "HeatCool_Element";
            this.button_HeatCool_Reset.Location = new Point(0xb0, 0x176);
            this.button_HeatCool_Reset.Name = "button_HeatCool_Reset";
            this.button_HeatCool_Reset.Size = new Size(50, 0x17);
            this.button_HeatCool_Reset.TabIndex = 0x12e;
            this.button_HeatCool_Reset.Text = "Reset";
            this.button_HeatCool_Reset.UseVisualStyleBackColor = true;
            this.button_HeatCool_Reset.Click += new EventHandler(this.button_HeatCool_Reset_Click);
            this.button_HeatCool_Set.Location = new Point(120, 0x176);
            this.button_HeatCool_Set.Name = "button_HeatCool_Set";
            this.button_HeatCool_Set.Size = new Size(50, 0x17);
            this.button_HeatCool_Set.TabIndex = 0x12d;
            this.button_HeatCool_Set.Text = "Set";
            this.button_HeatCool_Set.UseVisualStyleBackColor = true;
            this.button_HeatCool_Set.Click += new EventHandler(this.button_HeatCool_Set_Click);
            this.button_HeatCool_Read.Location = new Point(0x40, 0x176);
            this.button_HeatCool_Read.Name = "button_HeatCool_Read";
            this.button_HeatCool_Read.Size = new Size(50, 0x17);
            this.button_HeatCool_Read.TabIndex = 300;
            this.button_HeatCool_Read.Text = "Read";
            this.button_HeatCool_Read.UseVisualStyleBackColor = true;
            this.button_HeatCool_Read.Click += new EventHandler(this.button_HeatCool_Read_Click);
            this.textBox_Cool_Res2.Location = new Point(0xf3, 0xec);
            this.textBox_Cool_Res2.Name = "textBox_Cool_Res2";
            this.textBox_Cool_Res2.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_Res2.TabIndex = 0x126;
            this.textBox_Cool_Res3.Location = new Point(0xf3, 0x107);
            this.textBox_Cool_Res3.Name = "textBox_Cool_Res3";
            this.textBox_Cool_Res3.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_Res3.TabIndex = 0x127;
            this.textBox_Cool_Res4.Location = new Point(0xf3, 0x120);
            this.textBox_Cool_Res4.Name = "textBox_Cool_Res4";
            this.textBox_Cool_Res4.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_Res4.TabIndex = 0x128;
            this.label463.AutoSize = true;
            this.label463.Location = new Point(0xa4, 0x10b);
            this.label463.Name = "label463";
            this.label463.Size = new Size(0x41, 12);
            this.label463.TabIndex = 0x129;
            this.label463.Text = "Cool_Res3:";
            this.label465.AutoSize = true;
            this.label465.Location = new Point(0xa5, 240);
            this.label465.Name = "label465";
            this.label465.Size = new Size(0x41, 12);
            this.label465.TabIndex = 0x12a;
            this.label465.Text = "Cool_Res2:";
            this.label471.AutoSize = true;
            this.label471.Location = new Point(0xa5, 0x123);
            this.label471.Name = "label471";
            this.label471.Size = new Size(0x41, 12);
            this.label471.TabIndex = 0x12b;
            this.label471.Text = "Cool_Res4:";
            this.label473.AutoSize = true;
            this.label473.Location = new Point(0xa5, 0xd6);
            this.label473.Name = "label473";
            this.label473.Size = new Size(0x41, 12);
            this.label473.TabIndex = 0x125;
            this.label473.Text = "Cool_Res1:";
            this.textBox_Cool_Res1.Location = new Point(0xf3, 210);
            this.textBox_Cool_Res1.Name = "textBox_Cool_Res1";
            this.textBox_Cool_Res1.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_Res1.TabIndex = 0x124;
            this.label464.AutoSize = true;
            this.label464.Location = new Point(8, 340);
            this.label464.Name = "label464";
            this.label464.Size = new Size(0x41, 12);
            this.label464.TabIndex = 0x123;
            this.label464.Text = "Heat_Res6:";
            this.textBox_Heat_Res2.Location = new Point(0x57, 0xeb);
            this.textBox_Heat_Res2.Name = "textBox_Heat_Res2";
            this.textBox_Heat_Res2.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_Res2.TabIndex = 0x117;
            this.label466.AutoSize = true;
            this.label466.Location = new Point(7, 0x13b);
            this.label466.Name = "label466";
            this.label466.Size = new Size(0x41, 12);
            this.label466.TabIndex = 0x121;
            this.label466.Text = "Heat_Res5:";
            this.textBox_Heat_Res3.Location = new Point(0x57, 0x106);
            this.textBox_Heat_Res3.Name = "textBox_Heat_Res3";
            this.textBox_Heat_Res3.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_Res3.TabIndex = 280;
            this.textBox_Heat_Res4.Location = new Point(0x57, 0x11f);
            this.textBox_Heat_Res4.Name = "textBox_Heat_Res4";
            this.textBox_Heat_Res4.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_Res4.TabIndex = 0x119;
            this.textBox_Heat_Res6.Location = new Point(0x57, 0x14f);
            this.textBox_Heat_Res6.Name = "textBox_Heat_Res6";
            this.textBox_Heat_Res6.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_Res6.TabIndex = 0x11e;
            this.label467.AutoSize = true;
            this.label467.Location = new Point(8, 0x10a);
            this.label467.Name = "label467";
            this.label467.Size = new Size(0x41, 12);
            this.label467.TabIndex = 0x11a;
            this.label467.Text = "Heat_Res3:";
            this.textBox_Heat_Res5.Location = new Point(0x57, 0x138);
            this.textBox_Heat_Res5.Name = "textBox_Heat_Res5";
            this.textBox_Heat_Res5.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_Res5.TabIndex = 0x11d;
            this.label468.AutoSize = true;
            this.label468.Location = new Point(8, 0xef);
            this.label468.Name = "label468";
            this.label468.Size = new Size(0x41, 12);
            this.label468.TabIndex = 0x11b;
            this.label468.Text = "Heat_Res2:";
            this.label469.AutoSize = true;
            this.label469.Location = new Point(8, 290);
            this.label469.Name = "label469";
            this.label469.Size = new Size(0x41, 12);
            this.label469.TabIndex = 0x11c;
            this.label469.Text = "Heat_Res4:";
            this.label437.AutoSize = true;
            this.label437.Location = new Point(0xf1, 0x10);
            this.label437.Name = "label437";
            this.label437.Size = new Size(0x35, 12);
            this.label437.TabIndex = 0x108;
            this.label437.Text = "Cool(℃)";
            this.label439.AutoSize = true;
            this.label439.Location = new Point(0xa1, 0xa4);
            this.label439.Name = "label439";
            this.label439.Size = new Size(0x4d, 12);
            this.label439.TabIndex = 0x115;
            this.label439.Text = "CoolCur_Min:";
            this.textBox_CoolDSG_High.Location = new Point(0xf3, 0x24);
            this.textBox_CoolDSG_High.Name = "textBox_CoolDSG_High";
            this.textBox_CoolDSG_High.Size = new Size(0x3a, 0x15);
            this.textBox_CoolDSG_High.TabIndex = 0x106;
            this.label441.AutoSize = true;
            this.label441.Location = new Point(0x9f, 190);
            this.label441.Name = "label441";
            this.label441.Size = new Size(0x53, 12);
            this.label441.TabIndex = 0x114;
            this.label441.Text = "CoolTime_Max:";
            this.textBox_CoolDSG_Low.Location = new Point(0xf3, 0x3b);
            this.textBox_CoolDSG_Low.Name = "textBox_CoolDSG_Low";
            this.textBox_CoolDSG_Low.Size = new Size(0x3a, 0x15);
            this.textBox_CoolDSG_Low.TabIndex = 0x107;
            this.label443.AutoSize = true;
            this.label443.Location = new Point(0x9f, 0x8b);
            this.label443.Name = "label443";
            this.label443.Size = new Size(0x4d, 12);
            this.label443.TabIndex = 0x113;
            this.label443.Text = "CoolCur_Max:";
            this.textBox_CoolCHG_High.Location = new Point(0xf3, 0x56);
            this.textBox_CoolCHG_High.Name = "textBox_CoolCHG_High";
            this.textBox_CoolCHG_High.Size = new Size(0x3a, 0x15);
            this.textBox_CoolCHG_High.TabIndex = 0x109;
            this.textBox_CoolCHG_Low.Location = new Point(0xf3, 0x6f);
            this.textBox_CoolCHG_Low.Name = "textBox_CoolCHG_Low";
            this.textBox_CoolCHG_Low.Size = new Size(0x3a, 0x15);
            this.textBox_CoolCHG_Low.TabIndex = 0x10a;
            this.textBox_CoolTime_Max.Location = new Point(0xf3, 0xba);
            this.textBox_CoolTime_Max.Name = "textBox_CoolTime_Max";
            this.textBox_CoolTime_Max.Size = new Size(0x3a, 0x15);
            this.textBox_CoolTime_Max.TabIndex = 0x111;
            this.label4441.AutoSize = true;
            this.label4441.Location = new Point(160, 0x27);
            this.label4441.Name = "label4441";
            this.label4441.Size = new Size(0x53, 12);
            this.label4441.TabIndex = 0x10b;
            this.label4441.Text = "CoolDSG_High:";
            this.textBox_CoolCur_Min.Location = new Point(0xf3, 0x9f);
            this.textBox_CoolCur_Min.Name = "textBox_CoolCur_Min";
            this.textBox_CoolCur_Min.Size = new Size(0x3a, 0x15);
            this.textBox_CoolCur_Min.TabIndex = 0x110;
            this.label457.AutoSize = true;
            this.label457.Location = new Point(160, 90);
            this.label457.Name = "label457";
            this.label457.Size = new Size(0x53, 12);
            this.label457.TabIndex = 0x10c;
            this.label457.Text = "CoolCHG_High:";
            this.textBox_CoolCur_Max.Location = new Point(0xf3, 0x88);
            this.textBox_CoolCur_Max.Name = "textBox_CoolCur_Max";
            this.textBox_CoolCur_Max.Size = new Size(0x3a, 0x15);
            this.textBox_CoolCur_Max.TabIndex = 0x10f;
            this.label460.AutoSize = true;
            this.label460.Location = new Point(0xa6, 0x3f);
            this.label460.Name = "label460";
            this.label460.Size = new Size(0x4d, 12);
            this.label460.TabIndex = 0x10d;
            this.label460.Text = "CoolDSG_Low:";
            this.label461.AutoSize = true;
            this.label461.Location = new Point(0xa2, 0x72);
            this.label461.Name = "label461";
            this.label461.Size = new Size(0x4d, 12);
            this.label461.TabIndex = 270;
            this.label461.Text = "CoolCHG_Low:";
            this.label281.AutoSize = true;
            this.label281.Location = new Point(8, 0xd5);
            this.label281.Name = "label281";
            this.label281.Size = new Size(0x41, 12);
            this.label281.TabIndex = 0x105;
            this.label281.Text = "Heat_Res1:";
            this.label434.AutoSize = true;
            this.label434.Location = new Point(0x55, 0x10);
            this.label434.Name = "label434";
            this.label434.Size = new Size(0x35, 12);
            this.label434.TabIndex = 0xf7;
            this.label434.Text = "Heat(℃)";
            this.label285.AutoSize = true;
            this.label285.Location = new Point(5, 0xa4);
            this.label285.Name = "label285";
            this.label285.Size = new Size(0x4d, 12);
            this.label285.TabIndex = 260;
            this.label285.Text = "HeatCur_Min:";
            this.textBox_HeatDSG_High.Location = new Point(0x57, 0x24);
            this.textBox_HeatDSG_High.Name = "textBox_HeatDSG_High";
            this.textBox_HeatDSG_High.Size = new Size(0x3a, 0x15);
            this.textBox_HeatDSG_High.TabIndex = 0xf5;
            this.label289.AutoSize = true;
            this.label289.Location = new Point(3, 190);
            this.label289.Name = "label289";
            this.label289.Size = new Size(0x53, 12);
            this.label289.TabIndex = 0x103;
            this.label289.Text = "HeatTime_Max:";
            this.textBox_HeatDSG_Low.Location = new Point(0x57, 0x3b);
            this.textBox_HeatDSG_Low.Name = "textBox_HeatDSG_Low";
            this.textBox_HeatDSG_Low.Size = new Size(0x3a, 0x15);
            this.textBox_HeatDSG_Low.TabIndex = 0xf6;
            this.label313.AutoSize = true;
            this.label313.Location = new Point(3, 0x8b);
            this.label313.Name = "label313";
            this.label313.Size = new Size(0x4d, 12);
            this.label313.TabIndex = 0x102;
            this.label313.Text = "HeatCur_Max:";
            this.textBox_HeatCHG_High.Location = new Point(0x57, 0x56);
            this.textBox_HeatCHG_High.Name = "textBox_HeatCHG_High";
            this.textBox_HeatCHG_High.Size = new Size(0x3a, 0x15);
            this.textBox_HeatCHG_High.TabIndex = 0xf8;
            this.textBox_Heat_Res1.Location = new Point(0x57, 0xd1);
            this.textBox_Heat_Res1.Name = "textBox_Heat_Res1";
            this.textBox_Heat_Res1.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_Res1.TabIndex = 0x101;
            this.textBox_HeatCHG_Low.Location = new Point(0x57, 0x6f);
            this.textBox_HeatCHG_Low.Name = "textBox_HeatCHG_Low";
            this.textBox_HeatCHG_Low.Size = new Size(0x3a, 0x15);
            this.textBox_HeatCHG_Low.TabIndex = 0xf9;
            this.textBox_HeatTime_Max.Location = new Point(0x57, 0xba);
            this.textBox_HeatTime_Max.Name = "textBox_HeatTime_Max";
            this.textBox_HeatTime_Max.Size = new Size(0x3a, 0x15);
            this.textBox_HeatTime_Max.TabIndex = 0x100;
            this.label433.AutoSize = true;
            this.label433.Location = new Point(4, 0x27);
            this.label433.Name = "label433";
            this.label433.Size = new Size(0x53, 12);
            this.label433.TabIndex = 250;
            this.label433.Text = "HeatDSG_High:";
            this.textBox_HeatCur_Min.Location = new Point(0x57, 0x9f);
            this.textBox_HeatCur_Min.Name = "textBox_HeatCur_Min";
            this.textBox_HeatCur_Min.Size = new Size(0x3a, 0x15);
            this.textBox_HeatCur_Min.TabIndex = 0xff;
            this.label432.AutoSize = true;
            this.label432.Location = new Point(4, 90);
            this.label432.Name = "label432";
            this.label432.Size = new Size(0x53, 12);
            this.label432.TabIndex = 0xfb;
            this.label432.Text = "HeatCHG_High:";
            this.textBox_HeatCur_Max.Location = new Point(0x57, 0x88);
            this.textBox_HeatCur_Max.Name = "textBox_HeatCur_Max";
            this.textBox_HeatCur_Max.Size = new Size(0x3a, 0x15);
            this.textBox_HeatCur_Max.TabIndex = 0xfe;
            this.label422.AutoSize = true;
            this.label422.Location = new Point(10, 0x3f);
            this.label422.Name = "label422";
            this.label422.Size = new Size(0x4d, 12);
            this.label422.TabIndex = 0xfc;
            this.label422.Text = "HeatDSG_Low:";
            this.label321.AutoSize = true;
            this.label321.Location = new Point(6, 0x72);
            this.label321.Name = "label321";
            this.label321.Size = new Size(0x4d, 12);
            this.label321.TabIndex = 0xfd;
            this.label321.Text = "HeatCHG_Low:";
            this.groupBox33.Controls.Add(this.button_Protect_Reset);
            this.groupBox33.Controls.Add(this.label40);
            this.groupBox33.Controls.Add(this.label44);
            this.groupBox33.Controls.Add(this.label39);
            this.groupBox33.Controls.Add(this.label24);
            this.groupBox33.Controls.Add(this.button_SocUp_set);
            this.groupBox33.Controls.Add(this.textBox_SocUp_DelayT);
            this.groupBox33.Controls.Add(this.textBox_SocUp_Rec);
            this.groupBox33.Controls.Add(this.textBox_SocUp_Second);
            this.groupBox33.Controls.Add(this.textBox_SocUp_Third);
            this.groupBox33.Controls.Add(this.textBox_SocUp_First);
            this.groupBox33.Controls.Add(this.button_VdeltaOVP_set);
            this.groupBox33.Controls.Add(this.textBox_VdeltaOVP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_VdeltaOVP_Rec);
            this.groupBox33.Controls.Add(this.textBox_VdeltaOVP_Second);
            this.groupBox33.Controls.Add(this.textBox_VdeltaOVP_Third);
            this.groupBox33.Controls.Add(this.textBox_VdeltaOVP_First);
            this.groupBox33.Controls.Add(this.button_TmosOTP_set);
            this.groupBox33.Controls.Add(this.textBox_TmosOTP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_TmosOTP_Rec);
            this.groupBox33.Controls.Add(this.textBox_TmosOTP_Second);
            this.groupBox33.Controls.Add(this.textBox_TmosOTP_Third);
            this.groupBox33.Controls.Add(this.textBox_TmosOTP_First);
            this.groupBox33.Controls.Add(this.button_TdsgUTP_set);
            this.groupBox33.Controls.Add(this.textBox_TdsgUTP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_TdsgUTP_Rec);
            this.groupBox33.Controls.Add(this.textBox_TdsgUTP_Second);
            this.groupBox33.Controls.Add(this.textBox_TdsgUTP_Third);
            this.groupBox33.Controls.Add(this.textBox_TdsgUTP_First);
            this.groupBox33.Controls.Add(this.button_TdsgOTP_set);
            this.groupBox33.Controls.Add(this.textBox_TdsgOTP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_TdsgOTP_Rec);
            this.groupBox33.Controls.Add(this.textBox_TdsgOTP_Second);
            this.groupBox33.Controls.Add(this.textBox_TdsgOTP_Third);
            this.groupBox33.Controls.Add(this.textBox_TdsgOTP_First);
            this.groupBox33.Controls.Add(this.button_TchgUTP_set);
            this.groupBox33.Controls.Add(this.textBox_TchgUTP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_TchgUTP_Rec);
            this.groupBox33.Controls.Add(this.textBox_TchgUTP_Second);
            this.groupBox33.Controls.Add(this.textBox_TchgUTP_Third);
            this.groupBox33.Controls.Add(this.textBox_TchgUTP_First);
            this.groupBox33.Controls.Add(this.button_TchgOTP_set);
            this.groupBox33.Controls.Add(this.textBox_TchgOTP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_TchgOTP_Rec);
            this.groupBox33.Controls.Add(this.textBox_TchgOTP_Second);
            this.groupBox33.Controls.Add(this.textBox_TchgOTP_Third);
            this.groupBox33.Controls.Add(this.textBox_TchgOTP_First);
            this.groupBox33.Controls.Add(this.button_IdsgOCP_set);
            this.groupBox33.Controls.Add(this.textBox_IdsgOCP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_IdsgOCP_Rec);
            this.groupBox33.Controls.Add(this.textBox_IdsgOCP_Second);
            this.groupBox33.Controls.Add(this.textBox_IdsgOCP_Third);
            this.groupBox33.Controls.Add(this.textBox_IdsgOCP_First);
            this.groupBox33.Controls.Add(this.button_IchgOCP_set);
            this.groupBox33.Controls.Add(this.textBox_IchgOCP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_IchgOCP_Rec);
            this.groupBox33.Controls.Add(this.textBox_IchgOCP_Second);
            this.groupBox33.Controls.Add(this.textBox_IchgOCP_Third);
            this.groupBox33.Controls.Add(this.textBox_IchgOCP_First);
            this.groupBox33.Controls.Add(this.button_VbusUVP_set);
            this.groupBox33.Controls.Add(this.textBox_VbusUVP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_VbusUVP_Rec);
            this.groupBox33.Controls.Add(this.textBox_VbusUVP_Second);
            this.groupBox33.Controls.Add(this.textBox_VbusUVP_Third);
            this.groupBox33.Controls.Add(this.textBox_VbusUVP_First);
            this.groupBox33.Controls.Add(this.button_VbusOVP_set);
            this.groupBox33.Controls.Add(this.textBox_VbusOVP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_VbusOVP_Rec);
            this.groupBox33.Controls.Add(this.textBox_VbusOVP_Second);
            this.groupBox33.Controls.Add(this.textBox_VbusOVP_Third);
            this.groupBox33.Controls.Add(this.textBox_VbusOVP_First);
            this.groupBox33.Controls.Add(this.button_VcellUVP_set);
            this.groupBox33.Controls.Add(this.textBox_VcellUVP_DelayT);
            this.groupBox33.Controls.Add(this.textBox_VcellUVP_Rec);
            this.groupBox33.Controls.Add(this.textBox_VcellUVP_Second);
            this.groupBox33.Controls.Add(this.textBox_VcellUVP_Third);
            this.groupBox33.Controls.Add(this.textBox_VcellUVP_First);
            this.groupBox33.Controls.Add(this.label22);
            this.groupBox33.Controls.Add(this.label23);
            this.groupBox33.Controls.Add(this.label_Tmos_OTP);
            this.groupBox33.Controls.Add(this.label_Tcell_DsgUTP);
            this.groupBox33.Controls.Add(this.label_Tcell_DsgOTP);
            this.groupBox33.Controls.Add(this.label_Tcell_ChgUTP);
            this.groupBox33.Controls.Add(this.label_Tcell_ChgOTP);
            this.groupBox33.Controls.Add(this.label_Idsg_OCP);
            this.groupBox33.Controls.Add(this.label_Ichg_OCP);
            this.groupBox33.Controls.Add(this.button_VcellOVP_set);
            this.groupBox33.Controls.Add(this.button_Protect_read);
            this.groupBox33.Controls.Add(this.label_Vcell_DT);
            this.groupBox33.Controls.Add(this.label_Vbus_UVP);
            this.groupBox33.Controls.Add(this.textBox_VcellOVP_DelayT);
            this.groupBox33.Controls.Add(this.label_Vbus_OVP);
            this.groupBox33.Controls.Add(this.label_Vcell_UVP);
            this.groupBox33.Controls.Add(this.textBox_VcellOVP_Rec);
            this.groupBox33.Controls.Add(this.textBox_VcellOVP_Second);
            this.groupBox33.Controls.Add(this.textBox_VcellOVP_Third);
            this.groupBox33.Controls.Add(this.textBox_VcellOVP_First);
            this.groupBox33.Controls.Add(this.lable_VcellOVP);
            this.groupBox33.Location = new Point(12, 10);
            this.groupBox33.Name = "groupBox33";
            this.groupBox33.Size = new Size(0x1f2, 0x209);
            this.groupBox33.TabIndex = 230;
            this.groupBox33.TabStop = false;
            this.groupBox33.Text = "Protect_Element";
            this.button_Protect_Reset.Location = new Point(0x182, 0x1e3);
            this.button_Protect_Reset.Name = "button_Protect_Reset";
            this.button_Protect_Reset.Size = new Size(0x5d, 0x17);
            this.button_Protect_Reset.TabIndex = 0xe3;
            this.button_Protect_Reset.Text = "Reset_Protect";
            this.button_Protect_Reset.UseVisualStyleBackColor = true;
            this.button_Protect_Reset.Click += new EventHandler(this.button_Protect_Reset_Click);
            this.label40.AutoSize = true;
            this.label40.Location = new Point(0x12a, 0x10);
            this.label40.Name = "label40";
            this.label40.Size = new Size(0x35, 12);
            this.label40.TabIndex = 0xa2;
            this.label40.Text = "Recover:";
            this.label44.AutoSize = true;
            this.label44.Location = new Point(0xea, 0x11);
            this.label44.Name = "label44";
            this.label44.Size = new Size(0x29, 12);
            this.label44.TabIndex = 0xa1;
            this.label44.Text = "Third:";
            this.label39.AutoSize = true;
            this.label39.Location = new Point(0xa8, 0x11);
            this.label39.Name = "label39";
            this.label39.Size = new Size(0x2f, 12);
            this.label39.TabIndex = 160;
            this.label39.Text = "Second:";
            this.label24.AutoSize = true;
            this.label24.Location = new Point(0x68, 0x11);
            this.label24.Name = "label24";
            this.label24.Size = new Size(0x29, 12);
            this.label24.TabIndex = 0x9f;
            this.label24.Text = "First:";
            this.button_SocUp_set.Location = new Point(0x1b9, 0x1bb);
            this.button_SocUp_set.Name = "button_SocUp_set";
            this.button_SocUp_set.Size = new Size(50, 0x17);
            this.button_SocUp_set.TabIndex = 0x9e;
            this.button_SocUp_set.Text = "Set";
            this.button_SocUp_set.UseVisualStyleBackColor = true;
            this.button_SocUp_set.Click += new EventHandler(this.button_SocUp_set_Click);
            this.textBox_SocUp_DelayT.Location = new Point(0x169, 0x1be);
            this.textBox_SocUp_DelayT.Name = "textBox_SocUp_DelayT";
            this.textBox_SocUp_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_SocUp_DelayT.TabIndex = 0x9d;
            this.textBox_SocUp_Rec.Location = new Point(0x125, 0x1be);
            this.textBox_SocUp_Rec.Name = "textBox_SocUp_Rec";
            this.textBox_SocUp_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_SocUp_Rec.TabIndex = 0x9c;
            this.textBox_SocUp_Second.Location = new Point(0xa3, 0x1bf);
            this.textBox_SocUp_Second.Name = "textBox_SocUp_Second";
            this.textBox_SocUp_Second.Size = new Size(0x3a, 0x15);
            this.textBox_SocUp_Second.TabIndex = 0x9b;
            this.textBox_SocUp_Third.Location = new Point(0xe5, 0x1bf);
            this.textBox_SocUp_Third.Name = "textBox_SocUp_Third";
            this.textBox_SocUp_Third.Size = new Size(0x3a, 0x15);
            this.textBox_SocUp_Third.TabIndex = 0x9a;
            this.textBox_SocUp_First.Location = new Point(0x63, 0x1bf);
            this.textBox_SocUp_First.Name = "textBox_SocUp_First";
            this.textBox_SocUp_First.Size = new Size(0x3a, 0x15);
            this.textBox_SocUp_First.TabIndex = 0x99;
            this.button_VdeltaOVP_set.Location = new Point(0x1b9, 0x194);
            this.button_VdeltaOVP_set.Name = "button_VdeltaOVP_set";
            this.button_VdeltaOVP_set.Size = new Size(50, 0x17);
            this.button_VdeltaOVP_set.TabIndex = 0x97;
            this.button_VdeltaOVP_set.Text = "Set";
            this.button_VdeltaOVP_set.UseVisualStyleBackColor = true;
            this.button_VdeltaOVP_set.Click += new EventHandler(this.button_VdeltaOVP_set_Click);
            this.textBox_VdeltaOVP_DelayT.Location = new Point(0x169, 0x197);
            this.textBox_VdeltaOVP_DelayT.Name = "textBox_VdeltaOVP_DelayT";
            this.textBox_VdeltaOVP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_VdeltaOVP_DelayT.TabIndex = 150;
            this.textBox_VdeltaOVP_Rec.Location = new Point(0x125, 0x197);
            this.textBox_VdeltaOVP_Rec.Name = "textBox_VdeltaOVP_Rec";
            this.textBox_VdeltaOVP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_VdeltaOVP_Rec.TabIndex = 0x95;
            this.textBox_VdeltaOVP_Second.Location = new Point(0xa3, 0x198);
            this.textBox_VdeltaOVP_Second.Name = "textBox_VdeltaOVP_Second";
            this.textBox_VdeltaOVP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_VdeltaOVP_Second.TabIndex = 0x94;
            this.textBox_VdeltaOVP_Third.Location = new Point(0xe5, 0x198);
            this.textBox_VdeltaOVP_Third.Name = "textBox_VdeltaOVP_Third";
            this.textBox_VdeltaOVP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_VdeltaOVP_Third.TabIndex = 0x93;
            this.textBox_VdeltaOVP_First.Location = new Point(0x63, 0x198);
            this.textBox_VdeltaOVP_First.Name = "textBox_VdeltaOVP_First";
            this.textBox_VdeltaOVP_First.Size = new Size(0x3a, 0x15);
            this.textBox_VdeltaOVP_First.TabIndex = 0x92;
            this.button_TmosOTP_set.Location = new Point(0x1b9, 0x171);
            this.button_TmosOTP_set.Name = "button_TmosOTP_set";
            this.button_TmosOTP_set.Size = new Size(50, 0x17);
            this.button_TmosOTP_set.TabIndex = 0x90;
            this.button_TmosOTP_set.Text = "Set";
            this.button_TmosOTP_set.UseVisualStyleBackColor = true;
            this.button_TmosOTP_set.Click += new EventHandler(this.button_TmosOTP_set_Click);
            this.textBox_TmosOTP_DelayT.Location = new Point(0x169, 0x175);
            this.textBox_TmosOTP_DelayT.Name = "textBox_TmosOTP_DelayT";
            this.textBox_TmosOTP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_TmosOTP_DelayT.TabIndex = 0x8f;
            this.textBox_TmosOTP_Rec.Location = new Point(0x125, 0x175);
            this.textBox_TmosOTP_Rec.Name = "textBox_TmosOTP_Rec";
            this.textBox_TmosOTP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_TmosOTP_Rec.TabIndex = 0x8e;
            this.textBox_TmosOTP_Second.Location = new Point(0xa3, 0x176);
            this.textBox_TmosOTP_Second.Name = "textBox_TmosOTP_Second";
            this.textBox_TmosOTP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_TmosOTP_Second.TabIndex = 0x8d;
            this.textBox_TmosOTP_Third.Location = new Point(0xe5, 0x176);
            this.textBox_TmosOTP_Third.Name = "textBox_TmosOTP_Third";
            this.textBox_TmosOTP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_TmosOTP_Third.TabIndex = 140;
            this.textBox_TmosOTP_First.Location = new Point(0x63, 0x176);
            this.textBox_TmosOTP_First.Name = "textBox_TmosOTP_First";
            this.textBox_TmosOTP_First.Size = new Size(0x3a, 0x15);
            this.textBox_TmosOTP_First.TabIndex = 0x8b;
            this.button_TdsgUTP_set.Location = new Point(0x1b9, 0x150);
            this.button_TdsgUTP_set.Name = "button_TdsgUTP_set";
            this.button_TdsgUTP_set.Size = new Size(50, 0x17);
            this.button_TdsgUTP_set.TabIndex = 0x89;
            this.button_TdsgUTP_set.Text = "Set";
            this.button_TdsgUTP_set.UseVisualStyleBackColor = true;
            this.button_TdsgUTP_set.Click += new EventHandler(this.button_TdsgUTP_set_Click);
            this.textBox_TdsgUTP_DelayT.Location = new Point(0x169, 0x156);
            this.textBox_TdsgUTP_DelayT.Name = "textBox_TdsgUTP_DelayT";
            this.textBox_TdsgUTP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgUTP_DelayT.TabIndex = 0x88;
            this.textBox_TdsgUTP_Rec.Location = new Point(0x125, 0x156);
            this.textBox_TdsgUTP_Rec.Name = "textBox_TdsgUTP_Rec";
            this.textBox_TdsgUTP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgUTP_Rec.TabIndex = 0x87;
            this.textBox_TdsgUTP_Second.Location = new Point(0xa3, 0x157);
            this.textBox_TdsgUTP_Second.Name = "textBox_TdsgUTP_Second";
            this.textBox_TdsgUTP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgUTP_Second.TabIndex = 0x86;
            this.textBox_TdsgUTP_Third.Location = new Point(0xe5, 0x157);
            this.textBox_TdsgUTP_Third.Name = "textBox_TdsgUTP_Third";
            this.textBox_TdsgUTP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgUTP_Third.TabIndex = 0x85;
            this.textBox_TdsgUTP_First.Location = new Point(0x63, 0x157);
            this.textBox_TdsgUTP_First.Name = "textBox_TdsgUTP_First";
            this.textBox_TdsgUTP_First.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgUTP_First.TabIndex = 0x84;
            this.button_TdsgOTP_set.Location = new Point(0x1b9, 0x132);
            this.button_TdsgOTP_set.Name = "button_TdsgOTP_set";
            this.button_TdsgOTP_set.Size = new Size(50, 0x17);
            this.button_TdsgOTP_set.TabIndex = 130;
            this.button_TdsgOTP_set.Text = "Set";
            this.button_TdsgOTP_set.UseVisualStyleBackColor = true;
            this.button_TdsgOTP_set.Click += new EventHandler(this.button_TdsgOTP_set_Click);
            this.textBox_TdsgOTP_DelayT.Location = new Point(0x169, 0x135);
            this.textBox_TdsgOTP_DelayT.Name = "textBox_TdsgOTP_DelayT";
            this.textBox_TdsgOTP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgOTP_DelayT.TabIndex = 0x81;
            this.textBox_TdsgOTP_Rec.Location = new Point(0x125, 0x135);
            this.textBox_TdsgOTP_Rec.Name = "textBox_TdsgOTP_Rec";
            this.textBox_TdsgOTP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgOTP_Rec.TabIndex = 0x80;
            this.textBox_TdsgOTP_Second.Location = new Point(0xa3, 310);
            this.textBox_TdsgOTP_Second.Name = "textBox_TdsgOTP_Second";
            this.textBox_TdsgOTP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgOTP_Second.TabIndex = 0x7f;
            this.textBox_TdsgOTP_Third.Location = new Point(0xe5, 310);
            this.textBox_TdsgOTP_Third.Name = "textBox_TdsgOTP_Third";
            this.textBox_TdsgOTP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgOTP_Third.TabIndex = 0x7e;
            this.textBox_TdsgOTP_First.Location = new Point(0x63, 310);
            this.textBox_TdsgOTP_First.Name = "textBox_TdsgOTP_First";
            this.textBox_TdsgOTP_First.Size = new Size(0x3a, 0x15);
            this.textBox_TdsgOTP_First.TabIndex = 0x7d;
            this.button_TchgUTP_set.Location = new Point(0x1b9, 0x10c);
            this.button_TchgUTP_set.Name = "button_TchgUTP_set";
            this.button_TchgUTP_set.Size = new Size(50, 0x17);
            this.button_TchgUTP_set.TabIndex = 0x7b;
            this.button_TchgUTP_set.Text = "Set";
            this.button_TchgUTP_set.UseVisualStyleBackColor = true;
            this.button_TchgUTP_set.Click += new EventHandler(this.button_TchgUTP_set_Click);
            this.textBox_TchgUTP_DelayT.Location = new Point(0x169, 0x10f);
            this.textBox_TchgUTP_DelayT.Name = "textBox_TchgUTP_DelayT";
            this.textBox_TchgUTP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_TchgUTP_DelayT.TabIndex = 0x7a;
            this.textBox_TchgUTP_Rec.Location = new Point(0x125, 0x10f);
            this.textBox_TchgUTP_Rec.Name = "textBox_TchgUTP_Rec";
            this.textBox_TchgUTP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_TchgUTP_Rec.TabIndex = 0x79;
            this.textBox_TchgUTP_Second.Location = new Point(0xa3, 0x110);
            this.textBox_TchgUTP_Second.Name = "textBox_TchgUTP_Second";
            this.textBox_TchgUTP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_TchgUTP_Second.TabIndex = 120;
            this.textBox_TchgUTP_Third.Location = new Point(0xe5, 0x110);
            this.textBox_TchgUTP_Third.Name = "textBox_TchgUTP_Third";
            this.textBox_TchgUTP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_TchgUTP_Third.TabIndex = 0x77;
            this.textBox_TchgUTP_First.Location = new Point(0x63, 0x110);
            this.textBox_TchgUTP_First.Name = "textBox_TchgUTP_First";
            this.textBox_TchgUTP_First.Size = new Size(0x3a, 0x15);
            this.textBox_TchgUTP_First.TabIndex = 0x76;
            this.button_TchgOTP_set.Location = new Point(0x1b9, 0xec);
            this.button_TchgOTP_set.Name = "button_TchgOTP_set";
            this.button_TchgOTP_set.Size = new Size(50, 0x17);
            this.button_TchgOTP_set.TabIndex = 0x74;
            this.button_TchgOTP_set.Text = "Set";
            this.button_TchgOTP_set.UseVisualStyleBackColor = true;
            this.button_TchgOTP_set.Click += new EventHandler(this.button_TchgOTP_set_Click);
            this.textBox_TchgOTP_DelayT.Location = new Point(0x169, 0xef);
            this.textBox_TchgOTP_DelayT.Name = "textBox_TchgOTP_DelayT";
            this.textBox_TchgOTP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_TchgOTP_DelayT.TabIndex = 0x73;
            this.textBox_TchgOTP_Rec.Location = new Point(0x125, 0xef);
            this.textBox_TchgOTP_Rec.Name = "textBox_TchgOTP_Rec";
            this.textBox_TchgOTP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_TchgOTP_Rec.TabIndex = 0x72;
            this.textBox_TchgOTP_Second.Location = new Point(0xa3, 240);
            this.textBox_TchgOTP_Second.Name = "textBox_TchgOTP_Second";
            this.textBox_TchgOTP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_TchgOTP_Second.TabIndex = 0x71;
            this.textBox_TchgOTP_Third.Location = new Point(0xe5, 240);
            this.textBox_TchgOTP_Third.Name = "textBox_TchgOTP_Third";
            this.textBox_TchgOTP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_TchgOTP_Third.TabIndex = 0x70;
            this.textBox_TchgOTP_First.Location = new Point(0x63, 240);
            this.textBox_TchgOTP_First.Name = "textBox_TchgOTP_First";
            this.textBox_TchgOTP_First.Size = new Size(0x3a, 0x15);
            this.textBox_TchgOTP_First.TabIndex = 0x6f;
            this.button_IdsgOCP_set.Location = new Point(0x1b9, 0xcb);
            this.button_IdsgOCP_set.Name = "button_IdsgOCP_set";
            this.button_IdsgOCP_set.Size = new Size(50, 0x17);
            this.button_IdsgOCP_set.TabIndex = 0x6d;
            this.button_IdsgOCP_set.Text = "Set";
            this.button_IdsgOCP_set.UseVisualStyleBackColor = true;
            this.button_IdsgOCP_set.Click += new EventHandler(this.button_IdsgOCP_set_Click);
            this.textBox_IdsgOCP_DelayT.Location = new Point(0x169, 0xce);
            this.textBox_IdsgOCP_DelayT.Name = "textBox_IdsgOCP_DelayT";
            this.textBox_IdsgOCP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_IdsgOCP_DelayT.TabIndex = 0x6c;
            this.textBox_IdsgOCP_Rec.Location = new Point(0x125, 0xce);
            this.textBox_IdsgOCP_Rec.Name = "textBox_IdsgOCP_Rec";
            this.textBox_IdsgOCP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_IdsgOCP_Rec.TabIndex = 0x6b;
            this.textBox_IdsgOCP_Second.Location = new Point(0xa3, 0xcf);
            this.textBox_IdsgOCP_Second.Name = "textBox_IdsgOCP_Second";
            this.textBox_IdsgOCP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_IdsgOCP_Second.TabIndex = 0x6a;
            this.textBox_IdsgOCP_Third.Location = new Point(0xe5, 0xcf);
            this.textBox_IdsgOCP_Third.Name = "textBox_IdsgOCP_Third";
            this.textBox_IdsgOCP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_IdsgOCP_Third.TabIndex = 0x69;
            this.textBox_IdsgOCP_First.Location = new Point(0x63, 0xcf);
            this.textBox_IdsgOCP_First.Name = "textBox_IdsgOCP_First";
            this.textBox_IdsgOCP_First.Size = new Size(0x3a, 0x15);
            this.textBox_IdsgOCP_First.TabIndex = 0x68;
            this.button_IchgOCP_set.Location = new Point(0x1b9, 0xa8);
            this.button_IchgOCP_set.Name = "button_IchgOCP_set";
            this.button_IchgOCP_set.Size = new Size(50, 0x17);
            this.button_IchgOCP_set.TabIndex = 0x66;
            this.button_IchgOCP_set.Text = "Set";
            this.button_IchgOCP_set.UseVisualStyleBackColor = true;
            this.button_IchgOCP_set.Click += new EventHandler(this.button_IchgOCP_set_Click);
            this.textBox_IchgOCP_DelayT.Location = new Point(0x169, 0xab);
            this.textBox_IchgOCP_DelayT.Name = "textBox_IchgOCP_DelayT";
            this.textBox_IchgOCP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_IchgOCP_DelayT.TabIndex = 0x65;
            this.textBox_IchgOCP_Rec.Location = new Point(0x125, 0xab);
            this.textBox_IchgOCP_Rec.Name = "textBox_IchgOCP_Rec";
            this.textBox_IchgOCP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_IchgOCP_Rec.TabIndex = 100;
            this.textBox_IchgOCP_Second.Location = new Point(0xa3, 0xac);
            this.textBox_IchgOCP_Second.Name = "textBox_IchgOCP_Second";
            this.textBox_IchgOCP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_IchgOCP_Second.TabIndex = 0x63;
            this.textBox_IchgOCP_Third.Location = new Point(0xe5, 0xac);
            this.textBox_IchgOCP_Third.Name = "textBox_IchgOCP_Third";
            this.textBox_IchgOCP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_IchgOCP_Third.TabIndex = 0x62;
            this.textBox_IchgOCP_First.Location = new Point(0x63, 0xac);
            this.textBox_IchgOCP_First.Name = "textBox_IchgOCP_First";
            this.textBox_IchgOCP_First.Size = new Size(0x3a, 0x15);
            this.textBox_IchgOCP_First.TabIndex = 0x61;
            this.button_VbusUVP_set.Location = new Point(0x1b9, 0x87);
            this.button_VbusUVP_set.Name = "button_VbusUVP_set";
            this.button_VbusUVP_set.Size = new Size(50, 0x17);
            this.button_VbusUVP_set.TabIndex = 0x5f;
            this.button_VbusUVP_set.Text = "Set";
            this.button_VbusUVP_set.UseVisualStyleBackColor = true;
            this.button_VbusUVP_set.Click += new EventHandler(this.button_VbusUVP_set_Click);
            this.textBox_VbusUVP_DelayT.Location = new Point(0x169, 0x8a);
            this.textBox_VbusUVP_DelayT.Name = "textBox_VbusUVP_DelayT";
            this.textBox_VbusUVP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_VbusUVP_DelayT.TabIndex = 0x5e;
            this.textBox_VbusUVP_Rec.Location = new Point(0x125, 0x8a);
            this.textBox_VbusUVP_Rec.Name = "textBox_VbusUVP_Rec";
            this.textBox_VbusUVP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_VbusUVP_Rec.TabIndex = 0x5d;
            this.textBox_VbusUVP_Second.Location = new Point(0xa3, 0x8b);
            this.textBox_VbusUVP_Second.Name = "textBox_VbusUVP_Second";
            this.textBox_VbusUVP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_VbusUVP_Second.TabIndex = 0x5c;
            this.textBox_VbusUVP_Third.Location = new Point(0xe5, 0x8b);
            this.textBox_VbusUVP_Third.Name = "textBox_VbusUVP_Third";
            this.textBox_VbusUVP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_VbusUVP_Third.TabIndex = 0x5b;
            this.textBox_VbusUVP_First.Location = new Point(0x63, 0x8b);
            this.textBox_VbusUVP_First.Name = "textBox_VbusUVP_First";
            this.textBox_VbusUVP_First.Size = new Size(0x3a, 0x15);
            this.textBox_VbusUVP_First.TabIndex = 90;
            this.button_VbusOVP_set.Location = new Point(0x1b9, 0x66);
            this.button_VbusOVP_set.Name = "button_VbusOVP_set";
            this.button_VbusOVP_set.Size = new Size(50, 0x17);
            this.button_VbusOVP_set.TabIndex = 0x58;
            this.button_VbusOVP_set.Text = "Set";
            this.button_VbusOVP_set.UseVisualStyleBackColor = true;
            this.button_VbusOVP_set.Click += new EventHandler(this.button_VbusOVP_set_Click);
            this.textBox_VbusOVP_DelayT.Location = new Point(0x169, 0x69);
            this.textBox_VbusOVP_DelayT.Name = "textBox_VbusOVP_DelayT";
            this.textBox_VbusOVP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_VbusOVP_DelayT.TabIndex = 0x57;
            this.textBox_VbusOVP_Rec.Location = new Point(0x125, 0x69);
            this.textBox_VbusOVP_Rec.Name = "textBox_VbusOVP_Rec";
            this.textBox_VbusOVP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_VbusOVP_Rec.TabIndex = 0x56;
            this.textBox_VbusOVP_Second.Location = new Point(0xa3, 0x6a);
            this.textBox_VbusOVP_Second.Name = "textBox_VbusOVP_Second";
            this.textBox_VbusOVP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_VbusOVP_Second.TabIndex = 0x55;
            this.textBox_VbusOVP_Third.Location = new Point(0xe5, 0x6a);
            this.textBox_VbusOVP_Third.Name = "textBox_VbusOVP_Third";
            this.textBox_VbusOVP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_VbusOVP_Third.TabIndex = 0x54;
            this.textBox_VbusOVP_First.Location = new Point(0x63, 0x6a);
            this.textBox_VbusOVP_First.Name = "textBox_VbusOVP_First";
            this.textBox_VbusOVP_First.Size = new Size(0x3a, 0x15);
            this.textBox_VbusOVP_First.TabIndex = 0x53;
            this.button_VcellUVP_set.Location = new Point(0x1b9, 0x43);
            this.button_VcellUVP_set.Name = "button_VcellUVP_set";
            this.button_VcellUVP_set.Size = new Size(50, 0x17);
            this.button_VcellUVP_set.TabIndex = 0x51;
            this.button_VcellUVP_set.Text = "Set";
            this.button_VcellUVP_set.UseVisualStyleBackColor = true;
            this.button_VcellUVP_set.Click += new EventHandler(this.button_VcellUVP_set_Click);
            this.textBox_VcellUVP_DelayT.Location = new Point(0x169, 70);
            this.textBox_VcellUVP_DelayT.Name = "textBox_VcellUVP_DelayT";
            this.textBox_VcellUVP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_VcellUVP_DelayT.TabIndex = 80;
            this.textBox_VcellUVP_Rec.Location = new Point(0x125, 70);
            this.textBox_VcellUVP_Rec.Name = "textBox_VcellUVP_Rec";
            this.textBox_VcellUVP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_VcellUVP_Rec.TabIndex = 0x4f;
            this.textBox_VcellUVP_Second.Location = new Point(0xa3, 0x47);
            this.textBox_VcellUVP_Second.Name = "textBox_VcellUVP_Second";
            this.textBox_VcellUVP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_VcellUVP_Second.TabIndex = 0x4e;
            this.textBox_VcellUVP_Third.Location = new Point(0xe5, 0x47);
            this.textBox_VcellUVP_Third.Name = "textBox_VcellUVP_Third";
            this.textBox_VcellUVP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_VcellUVP_Third.TabIndex = 0x4d;
            this.textBox_VcellUVP_First.Location = new Point(0x63, 0x47);
            this.textBox_VcellUVP_First.Name = "textBox_VcellUVP_First";
            this.textBox_VcellUVP_First.Size = new Size(0x3a, 0x15);
            this.textBox_VcellUVP_First.TabIndex = 0x4c;
            this.label22.AutoSize = true;
            this.label22.Location = new Point(8, 450);
            this.label22.Name = "label22";
            this.label22.Size = new Size(0x53, 12);
            this.label22.TabIndex = 0x4a;
            this.label22.Text = "CellSocUp(%):";
            this.label23.AutoSize = true;
            this.label23.Location = new Point(8, 0x19d);
            this.label23.Name = "label23";
            this.label23.Size = new Size(0x59, 12);
            this.label23.TabIndex = 0x49;
            this.label23.Text = "VdeltaOvp(mV):";
            this.label_Tmos_OTP.AutoSize = true;
            this.label_Tmos_OTP.Location = new Point(8, 0x17b);
            this.label_Tmos_OTP.Name = "label_Tmos_OTP";
            this.label_Tmos_OTP.Size = new Size(0x3b, 12);
            this.label_Tmos_OTP.TabIndex = 0x48;
            this.label_Tmos_OTP.Text = "Tmos_OTP:";
            this.label_Tcell_DsgUTP.AutoSize = true;
            this.label_Tcell_DsgUTP.Location = new Point(8, 0x15b);
            this.label_Tcell_DsgUTP.Name = "label_Tcell_DsgUTP";
            this.label_Tcell_DsgUTP.Size = new Size(0x53, 12);
            this.label_Tcell_DsgUTP.TabIndex = 0x47;
            this.label_Tcell_DsgUTP.Text = "Tcell_DsgUTP:";
            this.label_Tcell_DsgOTP.AutoSize = true;
            this.label_Tcell_DsgOTP.Location = new Point(8, 0x139);
            this.label_Tcell_DsgOTP.Name = "label_Tcell_DsgOTP";
            this.label_Tcell_DsgOTP.Size = new Size(0x53, 12);
            this.label_Tcell_DsgOTP.TabIndex = 70;
            this.label_Tcell_DsgOTP.Text = "Tcell_DsgOTP:";
            this.label_Tcell_ChgUTP.AutoSize = true;
            this.label_Tcell_ChgUTP.Location = new Point(8, 0x115);
            this.label_Tcell_ChgUTP.Name = "label_Tcell_ChgUTP";
            this.label_Tcell_ChgUTP.Size = new Size(0x53, 12);
            this.label_Tcell_ChgUTP.TabIndex = 0x45;
            this.label_Tcell_ChgUTP.Text = "Tcell_ChgUTP:";
            this.label_Tcell_ChgOTP.AutoSize = true;
            this.label_Tcell_ChgOTP.Location = new Point(8, 0xf3);
            this.label_Tcell_ChgOTP.Name = "label_Tcell_ChgOTP";
            this.label_Tcell_ChgOTP.Size = new Size(0x53, 12);
            this.label_Tcell_ChgOTP.TabIndex = 0x44;
            this.label_Tcell_ChgOTP.Text = "Tcell_ChgOTP:";
            this.label_Idsg_OCP.AutoSize = true;
            this.label_Idsg_OCP.Location = new Point(8, 0xcf);
            this.label_Idsg_OCP.Name = "label_Idsg_OCP";
            this.label_Idsg_OCP.Size = new Size(0x4d, 12);
            this.label_Idsg_OCP.TabIndex = 0x43;
            this.label_Idsg_OCP.Text = "Idsg_OCP(A):";
            this.label_Ichg_OCP.AutoSize = true;
            this.label_Ichg_OCP.Location = new Point(8, 0xaf);
            this.label_Ichg_OCP.Name = "label_Ichg_OCP";
            this.label_Ichg_OCP.Size = new Size(0x4d, 12);
            this.label_Ichg_OCP.TabIndex = 0x42;
            this.label_Ichg_OCP.Text = "Ichg_OCP(A):";
            this.button_VcellOVP_set.Location = new Point(0x1b9, 0x23);
            this.button_VcellOVP_set.Name = "button_VcellOVP_set";
            this.button_VcellOVP_set.Size = new Size(50, 0x17);
            this.button_VcellOVP_set.TabIndex = 0x40;
            this.button_VcellOVP_set.Text = "Set";
            this.button_VcellOVP_set.UseVisualStyleBackColor = true;
            this.button_VcellOVP_set.Click += new EventHandler(this.button_VcellOVP_set_Click);
            this.button_Protect_read.Location = new Point(0x119, 0x1e3);
            this.button_Protect_read.Name = "button_Protect_read";
            this.button_Protect_read.Size = new Size(0x58, 0x17);
            this.button_Protect_read.TabIndex = 0x22;
            this.button_Protect_read.Text = "Read_Protect";
            this.button_Protect_read.UseVisualStyleBackColor = true;
            this.button_Protect_read.Click += new EventHandler(this.button_Protect_read_Click);
            this.label_Vcell_DT.AutoSize = true;
            this.label_Vcell_DT.Location = new Point(0x169, 15);
            this.label_Vcell_DT.Name = "label_Vcell_DT";
            this.label_Vcell_DT.Size = new Size(0x53, 12);
            this.label_Vcell_DT.TabIndex = 60;
            this.label_Vcell_DT.Text = "DelayT(10ms):";
            this.label_Vbus_UVP.AutoSize = true;
            this.label_Vbus_UVP.Location = new Point(8, 0x8e);
            this.label_Vbus_UVP.Name = "label_Vbus_UVP";
            this.label_Vbus_UVP.Size = new Size(0x4d, 12);
            this.label_Vbus_UVP.TabIndex = 0x2a;
            this.label_Vbus_UVP.Text = "Vbus_UVP(V):";
            this.textBox_VcellOVP_DelayT.Location = new Point(0x169, 0x26);
            this.textBox_VcellOVP_DelayT.Name = "textBox_VcellOVP_DelayT";
            this.textBox_VcellOVP_DelayT.Size = new Size(0x3a, 0x15);
            this.textBox_VcellOVP_DelayT.TabIndex = 0x31;
            this.label_Vbus_OVP.AutoSize = true;
            this.label_Vbus_OVP.Location = new Point(8, 0x6d);
            this.label_Vbus_OVP.Name = "label_Vbus_OVP";
            this.label_Vbus_OVP.Size = new Size(0x4d, 12);
            this.label_Vbus_OVP.TabIndex = 0x29;
            this.label_Vbus_OVP.Text = "Vbus_OVP(V):";
            this.label_Vcell_UVP.AutoSize = true;
            this.label_Vcell_UVP.Location = new Point(8, 0x4a);
            this.label_Vcell_UVP.Name = "label_Vcell_UVP";
            this.label_Vcell_UVP.Size = new Size(0x59, 12);
            this.label_Vcell_UVP.TabIndex = 0x30;
            this.label_Vcell_UVP.Text = "Vcell_UVP(mV):";
            this.textBox_VcellOVP_Rec.Location = new Point(0x125, 0x26);
            this.textBox_VcellOVP_Rec.Name = "textBox_VcellOVP_Rec";
            this.textBox_VcellOVP_Rec.Size = new Size(0x3a, 0x15);
            this.textBox_VcellOVP_Rec.TabIndex = 0x27;
            this.textBox_VcellOVP_Second.Location = new Point(0xa3, 0x27);
            this.textBox_VcellOVP_Second.Name = "textBox_VcellOVP_Second";
            this.textBox_VcellOVP_Second.Size = new Size(0x3a, 0x15);
            this.textBox_VcellOVP_Second.TabIndex = 0x26;
            this.textBox_VcellOVP_Third.Location = new Point(0xe5, 0x27);
            this.textBox_VcellOVP_Third.Name = "textBox_VcellOVP_Third";
            this.textBox_VcellOVP_Third.Size = new Size(0x3a, 0x15);
            this.textBox_VcellOVP_Third.TabIndex = 0x25;
            this.textBox_VcellOVP_First.Location = new Point(0x63, 0x27);
            this.textBox_VcellOVP_First.Name = "textBox_VcellOVP_First";
            this.textBox_VcellOVP_First.Size = new Size(0x3a, 0x15);
            this.textBox_VcellOVP_First.TabIndex = 0x24;
            this.lable_VcellOVP.AutoSize = true;
            this.lable_VcellOVP.Location = new Point(8, 0x2a);
            this.lable_VcellOVP.Name = "lable_VcellOVP";
            this.lable_VcellOVP.Size = new Size(0x59, 12);
            this.lable_VcellOVP.TabIndex = 0x21;
            this.lable_VcellOVP.Text = "Vcell_OVP(mV):";
            this.groupBox32.Controls.Add(this.label165);
            this.groupBox32.Controls.Add(this.label252);
            this.groupBox32.Controls.Add(this.label261);
            this.groupBox32.Controls.Add(this.label269);
            this.groupBox32.Controls.Add(this.textBox_Cool_CHGlow);
            this.groupBox32.Controls.Add(this.textBox_Cool_CHGhigh);
            this.groupBox32.Controls.Add(this.textBox_Cool_DSGlow);
            this.groupBox32.Controls.Add(this.textBox_Cool_DSGhigh);
            this.groupBox32.Controls.Add(this.label60);
            this.groupBox32.Controls.Add(this.label240);
            this.groupBox32.Controls.Add(this.textBox_OpenT_Res);
            this.groupBox32.Controls.Add(this.textBox_OpenT_Mos);
            this.groupBox32.Controls.Add(this.label241);
            this.groupBox32.Controls.Add(this.textBox_OpenT_Even);
            this.groupBox32.Controls.Add(this.textBox_OpenT_Odd);
            this.groupBox32.Controls.Add(this.label254);
            this.groupBox32.Controls.Add(this.button_CanAdd_Reset);
            this.groupBox32.Controls.Add(this.label152);
            this.groupBox32.Controls.Add(this.label151);
            this.groupBox32.Controls.Add(this.label147);
            this.groupBox32.Controls.Add(this.textBox_Soc_CycleTime);
            this.groupBox32.Controls.Add(this.label148);
            this.groupBox32.Controls.Add(this.textBox_Soc_Res2);
            this.groupBox32.Controls.Add(this.label149);
            this.groupBox32.Controls.Add(this.textBox_Soc_TabelSelect);
            this.groupBox32.Controls.Add(this.textBox_Soc_set);
            this.groupBox32.Controls.Add(this.textBox_Soc_read);
            this.groupBox32.Controls.Add(this.label150);
            this.groupBox32.Controls.Add(this.textBox_Soc_Ah);
            this.groupBox32.Controls.Add(this.label117);
            this.groupBox32.Controls.Add(this.label122);
            this.groupBox32.Controls.Add(this.label132);
            this.groupBox32.Controls.Add(this.label146);
            this.groupBox32.Controls.Add(this.textBox_PreChgTime);
            this.groupBox32.Controls.Add(this.textBox_PreChgFre);
            this.groupBox32.Controls.Add(this.textBox_I_DsgLimit);
            this.groupBox32.Controls.Add(this.textBox_I_ChgLimit);
            this.groupBox32.Controls.Add(this.label_OverDsgT);
            this.groupBox32.Controls.Add(this.label_OverDsgV);
            this.groupBox32.Controls.Add(this.label_NormalT);
            this.groupBox32.Controls.Add(this.label_SleepElement);
            this.groupBox32.Controls.Add(this.label_NormalV);
            this.groupBox32.Controls.Add(this.button_Sleep_Set);
            this.groupBox32.Controls.Add(this.button_Sleep_Read);
            this.groupBox32.Controls.Add(this.textBox_OverDsgT);
            this.groupBox32.Controls.Add(this.textBox_OverDsgV);
            this.groupBox32.Controls.Add(this.textBox_NormalT);
            this.groupBox32.Controls.Add(this.textBox_NormalV);
            this.groupBox32.Controls.Add(this.label46);
            this.groupBox32.Controls.Add(this.textBox_Sys_CSRes_Num);
            this.groupBox32.Controls.Add(this.label232);
            this.groupBox32.Controls.Add(this.textBox_Sys_PreChg_Time);
            this.groupBox32.Controls.Add(this.label238);
            this.groupBox32.Controls.Add(this.textBox_Sys_SeriesNum);
            this.groupBox32.Controls.Add(this.textBox_Sys_set);
            this.groupBox32.Controls.Add(this.textBox_Sys_read);
            this.groupBox32.Controls.Add(this.label_CS_Res);
            this.groupBox32.Controls.Add(this.textBox_Sys_CSRes);
            this.groupBox32.Controls.Add(this.label_CHG_low);
            this.groupBox32.Controls.Add(this.label_DSG_low);
            this.groupBox32.Controls.Add(this.label_CHG_high);
            this.groupBox32.Controls.Add(this.label_DSG_high);
            this.groupBox32.Controls.Add(this.label_Close_W2);
            this.groupBox32.Controls.Add(this.label_Open_W);
            this.groupBox32.Controls.Add(this.button_Heat_set);
            this.groupBox32.Controls.Add(this.button_Balance_set);
            this.groupBox32.Controls.Add(this.button_Heat_read);
            this.groupBox32.Controls.Add(this.button_Balance_read);
            this.groupBox32.Controls.Add(this.textBox_Heat_CHGlow);
            this.groupBox32.Controls.Add(this.textBox_Heat_CHGhigh);
            this.groupBox32.Controls.Add(this.textBox_closeW2);
            this.groupBox32.Controls.Add(this.textBox_closeW1);
            this.groupBox32.Controls.Add(this.label_Close_W1);
            this.groupBox32.Controls.Add(this.label_Heat_set);
            this.groupBox32.Controls.Add(this.labe_balance);
            this.groupBox32.Controls.Add(this.textBox_Heat_DSGlow);
            this.groupBox32.Controls.Add(this.textBox_Heat_DSGhigh);
            this.groupBox32.Controls.Add(this.textBox_openW);
            this.groupBox32.Controls.Add(this.textBox_openV);
            this.groupBox32.Controls.Add(this.label_Open_V);
            this.groupBox32.Location = new Point(0x204, 11);
            this.groupBox32.Name = "groupBox32";
            this.groupBox32.Size = new Size(0x1c0, 0x1d3);
            this.groupBox32.TabIndex = 0xe5;
            this.groupBox32.TabStop = false;
            this.groupBox32.Text = "OtherCanAdd_Element";
            this.label165.AutoSize = true;
            this.label165.Location = new Point(0x12a, 0x176);
            this.label165.Name = "label165";
            this.label165.Size = new Size(0x4d, 12);
            this.label165.TabIndex = 0xf4;
            this.label165.Text = "CoolCHG_low:";
            this.label252.AutoSize = true;
            this.label252.Location = new Point(0x12a, 0x145);
            this.label252.Name = "label252";
            this.label252.Size = new Size(0x4d, 12);
            this.label252.TabIndex = 0xf3;
            this.label252.Text = "CoolDSG_low:";
            this.label261.AutoSize = true;
            this.label261.Location = new Point(0x128, 0x15f);
            this.label261.Name = "label261";
            this.label261.Size = new Size(0x53, 12);
            this.label261.TabIndex = 0xf2;
            this.label261.Text = "CoolCHG_high:";
            this.label269.AutoSize = true;
            this.label269.Location = new Point(0x128, 300);
            this.label269.Name = "label269";
            this.label269.Size = new Size(0x53, 12);
            this.label269.TabIndex = 0xf1;
            this.label269.Text = "CoolDSG_high:";
            this.textBox_Cool_CHGlow.Location = new Point(380, 370);
            this.textBox_Cool_CHGlow.Name = "textBox_Cool_CHGlow";
            this.textBox_Cool_CHGlow.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_CHGlow.TabIndex = 240;
            this.textBox_Cool_CHGhigh.Location = new Point(380, 0x15b);
            this.textBox_Cool_CHGhigh.Name = "textBox_Cool_CHGhigh";
            this.textBox_Cool_CHGhigh.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_CHGhigh.TabIndex = 0xef;
            this.textBox_Cool_DSGlow.Location = new Point(380, 320);
            this.textBox_Cool_DSGlow.Name = "textBox_Cool_DSGlow";
            this.textBox_Cool_DSGlow.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_DSGlow.TabIndex = 0xee;
            this.textBox_Cool_DSGhigh.Location = new Point(380, 0x129);
            this.textBox_Cool_DSGhigh.Name = "textBox_Cool_DSGhigh";
            this.textBox_Cool_DSGhigh.Size = new Size(0x3a, 0x15);
            this.textBox_Cool_DSGhigh.TabIndex = 0xed;
            this.label60.AutoSize = true;
            this.label60.Location = new Point(0x9c, 380);
            this.label60.Name = "label60";
            this.label60.Size = new Size(0x1d, 12);
            this.label60.TabIndex = 0xec;
            this.label60.Text = "Res:";
            this.label240.AutoSize = true;
            this.label240.Location = new Point(0x94, 330);
            this.label240.Name = "label240";
            this.label240.Size = new Size(0x47, 12);
            this.label240.TabIndex = 0xeb;
            this.label240.Text = "OpenT_Even:";
            this.textBox_OpenT_Res.Location = new Point(0xde, 0x177);
            this.textBox_OpenT_Res.Name = "textBox_OpenT_Res";
            this.textBox_OpenT_Res.Size = new Size(0x3a, 0x15);
            this.textBox_OpenT_Res.TabIndex = 0xea;
            this.textBox_OpenT_Mos.Location = new Point(0xde, 350);
            this.textBox_OpenT_Mos.Name = "textBox_OpenT_Mos";
            this.textBox_OpenT_Mos.Size = new Size(0x3a, 0x15);
            this.textBox_OpenT_Mos.TabIndex = 0xe9;
            this.label241.AutoSize = true;
            this.label241.Location = new Point(0x9b, 0x163);
            this.label241.Name = "label241";
            this.label241.Size = new Size(0x41, 12);
            this.label241.TabIndex = 0xe8;
            this.label241.Text = "OpenT_Mos:";
            this.textBox_OpenT_Even.Location = new Point(0xde, 0x145);
            this.textBox_OpenT_Even.Name = "textBox_OpenT_Even";
            this.textBox_OpenT_Even.Size = new Size(0x3a, 0x15);
            this.textBox_OpenT_Even.TabIndex = 0xe7;
            this.textBox_OpenT_Odd.Location = new Point(0xde, 300);
            this.textBox_OpenT_Odd.Name = "textBox_OpenT_Odd";
            this.textBox_OpenT_Odd.Size = new Size(0x3a, 0x15);
            this.textBox_OpenT_Odd.TabIndex = 230;
            this.label254.AutoSize = true;
            this.label254.Location = new Point(0x9a, 0x131);
            this.label254.Name = "label254";
            this.label254.Size = new Size(0x41, 12);
            this.label254.TabIndex = 0xe5;
            this.label254.Text = "OpenT_Odd:";
            this.button_CanAdd_Reset.Location = new Point(0xc0, 0x1a);
            this.button_CanAdd_Reset.Name = "button_CanAdd_Reset";
            this.button_CanAdd_Reset.Size = new Size(0x58, 0x17);
            this.button_CanAdd_Reset.TabIndex = 0xe4;
            this.button_CanAdd_Reset.Text = "Reset_CanAdd";
            this.button_CanAdd_Reset.UseVisualStyleBackColor = true;
            this.button_CanAdd_Reset.Click += new EventHandler(this.button_CanAdd_Reset_Click);
            this.label152.AutoSize = true;
            this.label152.Location = new Point(0x151, 14);
            this.label152.Margin = new Padding(2, 0, 2, 0);
            this.label152.Name = "label152";
            this.label152.Size = new Size(0x59, 12);
            this.label152.TabIndex = 0xe2;
            this.label152.Text = "System_Element";
            this.label151.AutoSize = true;
            this.label151.Location = new Point(0x37, 0x11);
            this.label151.Margin = new Padding(2, 0, 2, 0);
            this.label151.Name = "label151";
            this.label151.Size = new Size(0x47, 12);
            this.label151.TabIndex = 0xe1;
            this.label151.Text = "Soc_Element";
            this.label147.AutoSize = true;
            this.label147.Location = new Point(5, 0x42);
            this.label147.Margin = new Padding(2, 0, 2, 0);
            this.label147.Name = "label147";
            this.label147.Size = new Size(0x41, 12);
            this.label147.TabIndex = 0xe0;
            this.label147.Text = "CycleTime:";
            this.textBox_Soc_CycleTime.Location = new Point(0x4b, 0x3f);
            this.textBox_Soc_CycleTime.Margin = new Padding(2);
            this.textBox_Soc_CycleTime.Name = "textBox_Soc_CycleTime";
            this.textBox_Soc_CycleTime.Size = new Size(0x3b, 0x15);
            this.textBox_Soc_CycleTime.TabIndex = 0xdf;
            this.label148.AutoSize = true;
            this.label148.Location = new Point(0x1d, 0x73);
            this.label148.Margin = new Padding(2, 0, 2, 0);
            this.label148.Name = "label148";
            this.label148.Size = new Size(0x1d, 12);
            this.label148.TabIndex = 0xde;
            this.label148.Text = "Res:";
            this.textBox_Soc_Res2.Location = new Point(0x4b, 0x71);
            this.textBox_Soc_Res2.Margin = new Padding(2);
            this.textBox_Soc_Res2.Name = "textBox_Soc_Res2";
            this.textBox_Soc_Res2.Size = new Size(0x3b, 0x15);
            this.textBox_Soc_Res2.TabIndex = 0xdd;
            this.label149.AutoSize = true;
            this.label149.Location = new Point(11, 0x5b);
            this.label149.Margin = new Padding(2, 0, 2, 0);
            this.label149.Name = "label149";
            this.label149.Size = new Size(0x3b, 12);
            this.label149.TabIndex = 220;
            this.label149.Text = "TableSet:";
            this.textBox_Soc_TabelSelect.Location = new Point(0x4b, 0x58);
            this.textBox_Soc_TabelSelect.Margin = new Padding(2);
            this.textBox_Soc_TabelSelect.Name = "textBox_Soc_TabelSelect";
            this.textBox_Soc_TabelSelect.Size = new Size(0x3b, 0x15);
            this.textBox_Soc_TabelSelect.TabIndex = 0xdb;
            this.textBox_Soc_set.Location = new Point(0x4f, 0x8d);
            this.textBox_Soc_set.Margin = new Padding(2);
            this.textBox_Soc_set.Name = "textBox_Soc_set";
            this.textBox_Soc_set.Size = new Size(0x30, 0x16);
            this.textBox_Soc_set.TabIndex = 0xda;
            this.textBox_Soc_set.Text = "Set";
            this.textBox_Soc_set.UseVisualStyleBackColor = true;
            this.textBox_Soc_set.Click += new EventHandler(this.textBox_Soc_set_Click);
            this.textBox_Soc_read.Location = new Point(20, 0x8d);
            this.textBox_Soc_read.Margin = new Padding(2);
            this.textBox_Soc_read.Name = "textBox_Soc_read";
            this.textBox_Soc_read.Size = new Size(0x2e, 0x16);
            this.textBox_Soc_read.TabIndex = 0xd9;
            this.textBox_Soc_read.Text = "Read";
            this.textBox_Soc_read.UseVisualStyleBackColor = true;
            this.textBox_Soc_read.Click += new EventHandler(this.textBox_Soc_read_Click);
            this.label150.AutoSize = true;
            this.label150.Location = new Point(0x10, 0x2c);
            this.label150.Margin = new Padding(2, 0, 2, 0);
            this.label150.Name = "label150";
            this.label150.Size = new Size(0x35, 12);
            this.label150.TabIndex = 0xd8;
            this.label150.Text = "Cap(Ah):";
            this.textBox_Soc_Ah.Location = new Point(0x4b, 0x26);
            this.textBox_Soc_Ah.Margin = new Padding(2);
            this.textBox_Soc_Ah.Name = "textBox_Soc_Ah";
            this.textBox_Soc_Ah.Size = new Size(0x3b, 0x15);
            this.textBox_Soc_Ah.TabIndex = 0xd7;
            this.label117.AutoSize = true;
            this.label117.Location = new Point(6, 380);
            this.label117.Margin = new Padding(2, 0, 2, 0);
            this.label117.Name = "label117";
            this.label117.Size = new Size(0x23, 12);
            this.label117.TabIndex = 0xd6;
            this.label117.Text = "Res2:";
            this.label122.AutoSize = true;
            this.label122.Location = new Point(6, 0x163);
            this.label122.Margin = new Padding(2, 0, 2, 0);
            this.label122.Name = "label122";
            this.label122.Size = new Size(0x23, 12);
            this.label122.TabIndex = 0xd5;
            this.label122.Text = "Res1:";
            this.label132.AutoSize = true;
            this.label132.Location = new Point(6, 330);
            this.label132.Margin = new Padding(2, 0, 2, 0);
            this.label132.Name = "label132";
            this.label132.Size = new Size(0x3b, 12);
            this.label132.TabIndex = 0xd4;
            this.label132.Text = "I_Dsg(A):";
            this.label146.AutoSize = true;
            this.label146.Location = new Point(6, 0x131);
            this.label146.Margin = new Padding(2, 0, 2, 0);
            this.label146.Name = "label146";
            this.label146.Size = new Size(0x3b, 12);
            this.label146.TabIndex = 0xd3;
            this.label146.Text = "I_Chg(A):";
            this.textBox_PreChgTime.Location = new Point(0x4f, 0x177);
            this.textBox_PreChgTime.Margin = new Padding(2);
            this.textBox_PreChgTime.Name = "textBox_PreChgTime";
            this.textBox_PreChgTime.Size = new Size(0x3b, 0x15);
            this.textBox_PreChgTime.TabIndex = 210;
            this.textBox_PreChgFre.Location = new Point(0x4f, 350);
            this.textBox_PreChgFre.Margin = new Padding(2);
            this.textBox_PreChgFre.Name = "textBox_PreChgFre";
            this.textBox_PreChgFre.Size = new Size(0x3b, 0x15);
            this.textBox_PreChgFre.TabIndex = 0xd1;
            this.textBox_I_DsgLimit.Location = new Point(0x4f, 0x145);
            this.textBox_I_DsgLimit.Margin = new Padding(2);
            this.textBox_I_DsgLimit.Name = "textBox_I_DsgLimit";
            this.textBox_I_DsgLimit.Size = new Size(0x3b, 0x15);
            this.textBox_I_DsgLimit.TabIndex = 0xd0;
            this.textBox_I_ChgLimit.Location = new Point(0x4f, 300);
            this.textBox_I_ChgLimit.Margin = new Padding(2);
            this.textBox_I_ChgLimit.Name = "textBox_I_ChgLimit";
            this.textBox_I_ChgLimit.Size = new Size(0x3b, 0x15);
            this.textBox_I_ChgLimit.TabIndex = 0xcf;
            this.label_OverDsgT.AutoSize = true;
            this.label_OverDsgT.Location = new Point(6, 280);
            this.label_OverDsgT.Margin = new Padding(2, 0, 2, 0);
            this.label_OverDsgT.Name = "label_OverDsgT";
            this.label_OverDsgT.Size = new Size(0x47, 12);
            this.label_OverDsgT.TabIndex = 0xce;
            this.label_OverDsgT.Text = "T_Low(min):";
            this.label_OverDsgV.AutoSize = true;
            this.label_OverDsgV.Location = new Point(6, 0xff);
            this.label_OverDsgV.Margin = new Padding(2, 0, 2, 0);
            this.label_OverDsgV.Name = "label_OverDsgV";
            this.label_OverDsgV.Size = new Size(0x41, 12);
            this.label_OverDsgV.TabIndex = 0xcd;
            this.label_OverDsgV.Text = "V_low(mV):";
            this.label_NormalT.AutoSize = true;
            this.label_NormalT.Location = new Point(6, 230);
            this.label_NormalT.Margin = new Padding(2, 0, 2, 0);
            this.label_NormalT.Name = "label_NormalT";
            this.label_NormalT.Size = new Size(0x47, 12);
            this.label_NormalT.TabIndex = 0xcc;
            this.label_NormalT.Text = "T_Nor(min):";
            this.label_SleepElement.AutoSize = true;
            this.label_SleepElement.Location = new Point(0x37, 180);
            this.label_SleepElement.Margin = new Padding(2, 0, 2, 0);
            this.label_SleepElement.Name = "label_SleepElement";
            this.label_SleepElement.Size = new Size(0x53, 12);
            this.label_SleepElement.TabIndex = 0xcb;
            this.label_SleepElement.Text = "Sleep_Element";
            this.label_NormalV.AutoSize = true;
            this.label_NormalV.Location = new Point(6, 0xcd);
            this.label_NormalV.Margin = new Padding(2, 0, 2, 0);
            this.label_NormalV.Name = "label_NormalV";
            this.label_NormalV.Size = new Size(0x41, 12);
            this.label_NormalV.TabIndex = 0xca;
            this.label_NormalV.Text = "V_Nor(mV):";
            this.button_Sleep_Set.Location = new Point(80, 0x197);
            this.button_Sleep_Set.Margin = new Padding(2);
            this.button_Sleep_Set.Name = "button_Sleep_Set";
            this.button_Sleep_Set.Size = new Size(0x31, 0x18);
            this.button_Sleep_Set.TabIndex = 0xc9;
            this.button_Sleep_Set.Text = "Set";
            this.button_Sleep_Set.UseVisualStyleBackColor = true;
            this.button_Sleep_Set.Click += new EventHandler(this.button_Sleep_Set_Click);
            this.button_Sleep_Read.Location = new Point(20, 0x197);
            this.button_Sleep_Read.Margin = new Padding(2);
            this.button_Sleep_Read.Name = "button_Sleep_Read";
            this.button_Sleep_Read.Size = new Size(0x33, 0x18);
            this.button_Sleep_Read.TabIndex = 200;
            this.button_Sleep_Read.Text = "Read";
            this.button_Sleep_Read.UseVisualStyleBackColor = true;
            this.button_Sleep_Read.Click += new EventHandler(this.button_Sleep_Read_Click);
            this.textBox_OverDsgT.Location = new Point(0x4f, 0x113);
            this.textBox_OverDsgT.Margin = new Padding(2);
            this.textBox_OverDsgT.Name = "textBox_OverDsgT";
            this.textBox_OverDsgT.Size = new Size(0x3b, 0x15);
            this.textBox_OverDsgT.TabIndex = 0xc7;
            this.textBox_OverDsgV.Location = new Point(0x4f, 250);
            this.textBox_OverDsgV.Margin = new Padding(2);
            this.textBox_OverDsgV.Name = "textBox_OverDsgV";
            this.textBox_OverDsgV.Size = new Size(0x3b, 0x15);
            this.textBox_OverDsgV.TabIndex = 0xc6;
            this.textBox_NormalT.Location = new Point(0x4f, 0xe1);
            this.textBox_NormalT.Margin = new Padding(2);
            this.textBox_NormalT.Name = "textBox_NormalT";
            this.textBox_NormalT.Size = new Size(0x3b, 0x15);
            this.textBox_NormalT.TabIndex = 0xc5;
            this.textBox_NormalV.Location = new Point(0x4f, 200);
            this.textBox_NormalV.Margin = new Padding(2);
            this.textBox_NormalV.Name = "textBox_NormalV";
            this.textBox_NormalV.Size = new Size(0x3b, 0x15);
            this.textBox_NormalV.TabIndex = 0xc4;
            this.label46.AutoSize = true;
            this.label46.Location = new Point(0x13c, 0x58);
            this.label46.Margin = new Padding(2, 0, 2, 0);
            this.label46.Name = "label46";
            this.label46.Size = new Size(0x3b, 12);
            this.label46.TabIndex = 0xc3;
            this.label46.Text = "CSResNum:";
            this.textBox_Sys_CSRes_Num.Location = new Point(0x17b, 0x53);
            this.textBox_Sys_CSRes_Num.Margin = new Padding(2);
            this.textBox_Sys_CSRes_Num.Name = "textBox_Sys_CSRes_Num";
            this.textBox_Sys_CSRes_Num.Size = new Size(0x3b, 0x15);
            this.textBox_Sys_CSRes_Num.TabIndex = 0xc2;
            this.label232.AutoSize = true;
            this.label232.Location = new Point(0x12a, 110);
            this.label232.Margin = new Padding(2, 0, 2, 0);
            this.label232.Name = "label232";
            this.label232.Size = new Size(0x4d, 12);
            this.label232.TabIndex = 0xc1;
            this.label232.Text = "PreChg_T(s):";
            this.textBox_Sys_PreChg_Time.Location = new Point(0x17b, 0x6a);
            this.textBox_Sys_PreChg_Time.Margin = new Padding(2);
            this.textBox_Sys_PreChg_Time.Name = "textBox_Sys_PreChg_Time";
            this.textBox_Sys_PreChg_Time.Size = new Size(0x3b, 0x15);
            this.textBox_Sys_PreChg_Time.TabIndex = 0xc0;
            this.label238.AutoSize = true;
            this.label238.Location = new Point(310, 0x25);
            this.label238.Margin = new Padding(2, 0, 2, 0);
            this.label238.Name = "label238";
            this.label238.Size = new Size(0x41, 12);
            this.label238.TabIndex = 0xbf;
            this.label238.Text = "SeriesNum:";
            this.textBox_Sys_SeriesNum.Location = new Point(0x17b, 0x21);
            this.textBox_Sys_SeriesNum.Margin = new Padding(2);
            this.textBox_Sys_SeriesNum.Name = "textBox_Sys_SeriesNum";
            this.textBox_Sys_SeriesNum.Size = new Size(0x3b, 0x15);
            this.textBox_Sys_SeriesNum.TabIndex = 190;
            this.textBox_Sys_set.Location = new Point(0x17a, 0x8a);
            this.textBox_Sys_set.Margin = new Padding(2);
            this.textBox_Sys_set.Name = "textBox_Sys_set";
            this.textBox_Sys_set.Size = new Size(0x30, 0x16);
            this.textBox_Sys_set.TabIndex = 0xbd;
            this.textBox_Sys_set.Text = "Set";
            this.textBox_Sys_set.UseVisualStyleBackColor = true;
            this.textBox_Sys_set.Click += new EventHandler(this.textBox_Sys_set_Click);
            this.textBox_Sys_read.Location = new Point(0x13f, 0x8a);
            this.textBox_Sys_read.Margin = new Padding(2);
            this.textBox_Sys_read.Name = "textBox_Sys_read";
            this.textBox_Sys_read.Size = new Size(0x2e, 0x16);
            this.textBox_Sys_read.TabIndex = 0xbc;
            this.textBox_Sys_read.Text = "Read";
            this.textBox_Sys_read.UseVisualStyleBackColor = true;
            this.textBox_Sys_read.Click += new EventHandler(this.textBox_Sys_read_Click);
            this.label_CS_Res.AutoSize = true;
            this.label_CS_Res.Location = new Point(0x12a, 0x3b);
            this.label_CS_Res.Margin = new Padding(2, 0, 2, 0);
            this.label_CS_Res.Name = "label_CS_Res";
            this.label_CS_Res.Size = new Size(0x4d, 12);
            this.label_CS_Res.TabIndex = 0xbb;
            this.label_CS_Res.Text = "CS_Res(mΩ):";
            this.textBox_Sys_CSRes.Location = new Point(0x17b, 0x38);
            this.textBox_Sys_CSRes.Margin = new Padding(2);
            this.textBox_Sys_CSRes.Name = "textBox_Sys_CSRes";
            this.textBox_Sys_CSRes.Size = new Size(0x3b, 0x15);
            this.textBox_Sys_CSRes.TabIndex = 0xba;
            this.label_CHG_low.AutoSize = true;
            this.label_CHG_low.Location = new Point(0x12b, 0x113);
            this.label_CHG_low.Name = "label_CHG_low";
            this.label_CHG_low.Size = new Size(0x4d, 12);
            this.label_CHG_low.TabIndex = 0xb9;
            this.label_CHG_low.Text = "HeatCHG_Low:";
            this.label_DSG_low.AutoSize = true;
            this.label_DSG_low.Location = new Point(0x12f, 0xe0);
            this.label_DSG_low.Name = "label_DSG_low";
            this.label_DSG_low.Size = new Size(0x4d, 12);
            this.label_DSG_low.TabIndex = 0xb8;
            this.label_DSG_low.Text = "HeatDSG_Low:";
            this.label_CHG_high.AutoSize = true;
            this.label_CHG_high.Location = new Point(0x129, 0xfb);
            this.label_CHG_high.Name = "label_CHG_high";
            this.label_CHG_high.Size = new Size(0x53, 12);
            this.label_CHG_high.TabIndex = 0xb7;
            this.label_CHG_high.Text = "HeatCHG_High:";
            this.label_DSG_high.AutoSize = true;
            this.label_DSG_high.Location = new Point(0x129, 200);
            this.label_DSG_high.Name = "label_DSG_high";
            this.label_DSG_high.Size = new Size(0x53, 12);
            this.label_DSG_high.TabIndex = 0xb6;
            this.label_DSG_high.Text = "HeatDSG_High:";
            this.label_Close_W2.AutoSize = true;
            this.label_Close_W2.Location = new Point(0x9d, 280);
            this.label_Close_W2.Name = "label_Close_W2";
            this.label_Close_W2.Size = new Size(0x3b, 12);
            this.label_Close_W2.TabIndex = 0xb5;
            this.label_Close_W2.Text = "Close_W2:";
            this.label_Open_W.AutoSize = true;
            this.label_Open_W.Location = new Point(160, 230);
            this.label_Open_W.Name = "label_Open_W";
            this.label_Open_W.Size = new Size(0x2f, 12);
            this.label_Open_W.TabIndex = 180;
            this.label_Open_W.Text = "Open_W:";
            this.button_Heat_set.Location = new Point(0x17e, 0x196);
            this.button_Heat_set.Name = "button_Heat_set";
            this.button_Heat_set.Size = new Size(50, 0x17);
            this.button_Heat_set.TabIndex = 0xb3;
            this.button_Heat_set.Text = "Set";
            this.button_Heat_set.UseVisualStyleBackColor = true;
            this.button_Heat_set.Click += new EventHandler(this.button_Heat_set_Click);
            this.button_Balance_set.Location = new Point(0xdf, 0x196);
            this.button_Balance_set.Name = "button_Balance_set";
            this.button_Balance_set.Size = new Size(50, 0x17);
            this.button_Balance_set.TabIndex = 0xb2;
            this.button_Balance_set.Text = "Set";
            this.button_Balance_set.UseVisualStyleBackColor = true;
            this.button_Balance_set.Click += new EventHandler(this.button_Balance_set_Click);
            this.button_Heat_read.Location = new Point(0x146, 0x196);
            this.button_Heat_read.Name = "button_Heat_read";
            this.button_Heat_read.Size = new Size(50, 0x17);
            this.button_Heat_read.TabIndex = 0xb1;
            this.button_Heat_read.Text = "Read";
            this.button_Heat_read.UseVisualStyleBackColor = true;
            this.button_Heat_read.Click += new EventHandler(this.button_Heat_read_Click);
            this.button_Balance_read.Location = new Point(0xa2, 0x197);
            this.button_Balance_read.Name = "button_Balance_read";
            this.button_Balance_read.Size = new Size(50, 0x17);
            this.button_Balance_read.TabIndex = 0xa5;
            this.button_Balance_read.Text = "Read";
            this.button_Balance_read.UseVisualStyleBackColor = true;
            this.button_Balance_read.Click += new EventHandler(this.button_Balance_read_Click);
            this.textBox_Heat_CHGlow.Location = new Point(380, 0x110);
            this.textBox_Heat_CHGlow.Name = "textBox_Heat_CHGlow";
            this.textBox_Heat_CHGlow.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_CHGlow.TabIndex = 0xb0;
            this.textBox_Heat_CHGhigh.Location = new Point(380, 0xf7);
            this.textBox_Heat_CHGhigh.Name = "textBox_Heat_CHGhigh";
            this.textBox_Heat_CHGhigh.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_CHGhigh.TabIndex = 0xaf;
            this.textBox_closeW2.Location = new Point(0xde, 0x113);
            this.textBox_closeW2.Name = "textBox_closeW2";
            this.textBox_closeW2.Size = new Size(0x3a, 0x15);
            this.textBox_closeW2.TabIndex = 0xae;
            this.textBox_closeW1.Location = new Point(0xde, 250);
            this.textBox_closeW1.Name = "textBox_closeW1";
            this.textBox_closeW1.Size = new Size(0x3a, 0x15);
            this.textBox_closeW1.TabIndex = 0xad;
            this.label_Close_W1.AutoSize = true;
            this.label_Close_W1.Location = new Point(0x9d, 0xff);
            this.label_Close_W1.Name = "label_Close_W1";
            this.label_Close_W1.Size = new Size(0x3b, 12);
            this.label_Close_W1.TabIndex = 0xac;
            this.label_Close_W1.Text = "Close_W1:";
            this.label_Heat_set.AutoSize = true;
            this.label_Heat_set.Location = new Point(0x163, 0xb1);
            this.label_Heat_set.Name = "label_Heat_set";
            this.label_Heat_set.Size = new Size(0x53, 12);
            this.label_Heat_set.TabIndex = 0xab;
            this.label_Heat_set.Text = "Heat_Cool(℃)";
            this.labe_balance.AutoSize = true;
            this.labe_balance.Location = new Point(0xdb, 180);
            this.labe_balance.Name = "labe_balance";
            this.labe_balance.Size = new Size(0x47, 12);
            this.labe_balance.TabIndex = 170;
            this.labe_balance.Text = "Balance(mV)";
            this.textBox_Heat_DSGlow.Location = new Point(380, 220);
            this.textBox_Heat_DSGlow.Name = "textBox_Heat_DSGlow";
            this.textBox_Heat_DSGlow.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_DSGlow.TabIndex = 0xa9;
            this.textBox_Heat_DSGhigh.Location = new Point(380, 0xc5);
            this.textBox_Heat_DSGhigh.Name = "textBox_Heat_DSGhigh";
            this.textBox_Heat_DSGhigh.Size = new Size(0x3a, 0x15);
            this.textBox_Heat_DSGhigh.TabIndex = 0xa8;
            this.textBox_openW.Location = new Point(0xde, 0xe1);
            this.textBox_openW.Name = "textBox_openW";
            this.textBox_openW.Size = new Size(0x3a, 0x15);
            this.textBox_openW.TabIndex = 0xa7;
            this.textBox_openV.Location = new Point(0xde, 200);
            this.textBox_openV.Name = "textBox_openV";
            this.textBox_openV.Size = new Size(0x3a, 0x15);
            this.textBox_openV.TabIndex = 0xa6;
            this.label_Open_V.AutoSize = true;
            this.label_Open_V.Location = new Point(160, 0xcd);
            this.label_Open_V.Name = "label_Open_V";
            this.label_Open_V.Size = new Size(0x2f, 12);
            this.label_Open_V.TabIndex = 0xa4;
            this.label_Open_V.Text = "Open_V:";
            this.toolStrip_Calib2.BackColor = Color.Gainsboro;
            this.toolStrip_Calib2.Dock = DockStyle.Bottom;
            this.toolStrip_Calib2.ImageScalingSize = new Size(20, 20);
            ToolStripItem[] itemArray5 = new ToolStripItem[] { this.toolStripLabel_RxCnt3, this.toolStripLabel36, this.toolStripLabel_TxCnt3 };
            this.toolStrip_Calib2.Items.AddRange(itemArray5);
            this.toolStrip_Calib2.Location = new Point(0, 710);
            this.toolStrip_Calib2.Name = "toolStrip_Calib2";
            this.toolStrip_Calib2.Size = new Size(0x521, 0x19);
            this.toolStrip_Calib2.TabIndex = 0x20;
            this.toolStrip_Calib2.Text = "接收次数:";
            this.toolStripLabel_RxCnt3.Name = "toolStripLabel_RxCnt3";
            this.toolStripLabel_RxCnt3.Size = new Size(15, 0x16);
            this.toolStripLabel_RxCnt3.Text = "0";
            this.toolStripLabel36.Name = "toolStripLabel36";
            this.toolStripLabel36.Size = new Size(0x30, 0x16);
            this.toolStripLabel36.Text = "          ";
            this.toolStripLabel_TxCnt3.Name = "toolStripLabel_TxCnt3";
            this.toolStripLabel_TxCnt3.Size = new Size(15, 0x16);
            this.toolStripLabel_TxCnt3.Text = "0";
            this.tabPage4.Controls.Add(this.label3);
            this.tabPage4.Controls.Add(this.comboBox1);
            this.tabPage4.Controls.Add(this.groupBox45);
            this.tabPage4.Controls.Add(this.toolStrip_OtherEle);
            this.tabPage4.Controls.Add(this.groupBox_CopperLoss);
            this.tabPage4.Controls.Add(this.groupBox24);
            this.tabPage4.Controls.Add(this.groupBox_Daily);
            this.tabPage4.Controls.Add(this.groupBox_upgrate);
            this.tabPage4.Controls.Add(this.groupBox_History);
            this.tabPage4.Controls.Add(this.groupBox2);
            this.tabPage4.Location = new Point(4, 0x16);
            this.tabPage4.Name = "tabPage4";
            this.tabPage4.Size = new Size(0x521, 0x2df);
            this.tabPage4.TabIndex = 3;
            this.tabPage4.Text = "OtherElement";
            this.tabPage4.UseVisualStyleBackColor = true;
            this.label3.AutoSize = true;
            this.label3.Font = new Font("SimSun", 10.5f, FontStyle.Regular, GraphicsUnit.Point, 0x86);
            this.label3.Location = new Point(0x475, 0x4c);
            this.label3.Name = "label3";
            this.label3.Size = new Size(0x3f, 14);
            this.label3.TabIndex = 0x91;
            this.label3.Text = "MCU类型:";
            this.comboBox1.FormattingEnabled = true;
            object[] objArray2 = new object[] { "STM32F0系列", "PIC系列", "STM32F1系列" };
            this.comboBox1.Items.AddRange(objArray2);
            this.comboBox1.Location = new Point(0x4b8, 0x4a);
            this.comboBox1.Name = "comboBox1";
            this.comboBox1.Size = new Size(0x61, 20);
            this.comboBox1.TabIndex = 0x90;
            this.comboBox1.Text = "STM32F0系列";
            this.groupBox45.Controls.Add(this.button_Chinese);
            this.groupBox45.Controls.Add(this.button_English);
            this.groupBox45.Location = new Point(0x46f, 9);
            this.groupBox45.Name = "groupBox45";
            this.groupBox45.Size = new Size(170, 0x36);
            this.groupBox45.TabIndex = 0x8f;
            this.groupBox45.TabStop = false;
            this.groupBox45.Text = "语言(Language)";
            this.button_Chinese.Location = new Point(0x57, 20);
            this.button_Chinese.Name = "button_Chinese";
            this.button_Chinese.Size = new Size(0x3e, 0x17);
            this.button_Chinese.TabIndex = 0x88;
            this.button_Chinese.Text = "中文";
            this.button_Chinese.UseVisualStyleBackColor = true;
            this.button_English.Location = new Point(0x13, 20);
            this.button_English.Name = "button_English";
            this.button_English.Size = new Size(0x3e, 0x17);
            this.button_English.TabIndex = 0x87;
            this.button_English.Text = "English";
            this.button_English.UseVisualStyleBackColor = true;
            this.toolStrip_OtherEle.BackColor = Color.Gainsboro;
            this.toolStrip_OtherEle.Dock = DockStyle.Bottom;
            this.toolStrip_OtherEle.ImageScalingSize = new Size(20, 20);
            ToolStripItem[] itemArray6 = new ToolStripItem[] { this.toolStripLabel_RxCnt5, this.toolStripLabel33, this.toolStripLabel_TxCnt5 };
            this.toolStrip_OtherEle.Items.AddRange(itemArray6);
            this.toolStrip_OtherEle.LayoutStyle = ToolStripLayoutStyle.HorizontalStackWithOverflow;
            this.toolStrip_OtherEle.Location = new Point(0, 710);
            this.toolStrip_OtherEle.Name = "toolStrip_OtherEle";
            this.toolStrip_OtherEle.Size = new Size(0x521, 0x19);
            this.toolStrip_OtherEle.TabIndex = 0x8e;
            this.toolStrip_OtherEle.Text = "aaaaa";
            this.toolStripLabel_RxCnt5.Name = "toolStripLabel_RxCnt5";
            this.toolStripLabel_RxCnt5.Overflow = ToolStripItemOverflow.Never;
            this.toolStripLabel_RxCnt5.Size = new Size(15, 0x16);
            this.toolStripLabel_RxCnt5.Text = "0";
            this.toolStripLabel33.Name = "toolStripLabel33";
            this.toolStripLabel33.Size = new Size(0x30, 0x16);
            this.toolStripLabel33.Text = "          ";
            this.toolStripLabel_TxCnt5.Name = "toolStripLabel_TxCnt5";
            this.toolStripLabel_TxCnt5.Size = new Size(15, 0x16);
            this.toolStripLabel_TxCnt5.Text = "0";
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum16);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss16);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum15);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss15);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum14);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss14);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum13);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss13);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum12);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum11);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum10);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum9);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss12);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss11);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss10);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss9);
            this.groupBox_CopperLoss.Controls.Add(this.label_CellNumNotice);
            this.groupBox_CopperLoss.Controls.Add(this.label_CellNum);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum8);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss8);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum7);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss7);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum6);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss6);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum5);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss5);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum4);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum3);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum2);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CellNum1);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss4);
            this.groupBox_CopperLoss.Controls.Add(this.button_CopperLoss_set);
            this.groupBox_CopperLoss.Controls.Add(this.button_CopperLoss_read);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss3);
            this.groupBox_CopperLoss.Controls.Add(this.label_CopperLoss);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss2);
            this.groupBox_CopperLoss.Controls.Add(this.textBox_CopperLoss1);
            this.groupBox_CopperLoss.Location = new Point(0xc6, 5);
            this.groupBox_CopperLoss.Margin = new Padding(2);
            this.groupBox_CopperLoss.Name = "groupBox_CopperLoss";
            this.groupBox_CopperLoss.Padding = new Padding(2);
            this.groupBox_CopperLoss.Size = new Size(0xde, 0x217);
            this.groupBox_CopperLoss.TabIndex = 0x8d;
            this.groupBox_CopperLoss.TabStop = false;
            this.groupBox_CopperLoss.Text = "CopperLoss";
            this.textBox_CellNum16.Location = new Point(120, 0x1a3);
            this.textBox_CellNum16.Margin = new Padding(2);
            this.textBox_CellNum16.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum16.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum16.Name = "textBox_CellNum16";
            this.textBox_CellNum16.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum16.TabIndex = 0x60;
            this.textBox_CopperLoss16.Location = new Point(0x1c, 0x1a3);
            this.textBox_CopperLoss16.Margin = new Padding(2);
            this.textBox_CopperLoss16.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss16.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss16.Name = "textBox_CopperLoss16";
            this.textBox_CopperLoss16.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss16.TabIndex = 0x5f;
            this.textBox_CellNum15.Location = new Point(120, 0x18a);
            this.textBox_CellNum15.Margin = new Padding(2);
            this.textBox_CellNum15.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum15.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum15.Name = "textBox_CellNum15";
            this.textBox_CellNum15.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum15.TabIndex = 0x5e;
            this.textBox_CopperLoss15.Location = new Point(0x1c, 0x18a);
            this.textBox_CopperLoss15.Margin = new Padding(2);
            this.textBox_CopperLoss15.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss15.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss15.Name = "textBox_CopperLoss15";
            this.textBox_CopperLoss15.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss15.TabIndex = 0x5d;
            this.textBox_CellNum14.Location = new Point(120, 0x170);
            this.textBox_CellNum14.Margin = new Padding(2);
            this.textBox_CellNum14.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum14.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum14.Name = "textBox_CellNum14";
            this.textBox_CellNum14.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum14.TabIndex = 0x5c;
            this.textBox_CopperLoss14.Location = new Point(0x1c, 0x170);
            this.textBox_CopperLoss14.Margin = new Padding(2);
            this.textBox_CopperLoss14.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss14.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss14.Name = "textBox_CopperLoss14";
            this.textBox_CopperLoss14.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss14.TabIndex = 0x5b;
            this.textBox_CellNum13.Location = new Point(120, 0x155);
            this.textBox_CellNum13.Margin = new Padding(2);
            this.textBox_CellNum13.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum13.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum13.Name = "textBox_CellNum13";
            this.textBox_CellNum13.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum13.TabIndex = 90;
            this.textBox_CopperLoss13.Location = new Point(0x1b, 0x155);
            this.textBox_CopperLoss13.Margin = new Padding(2);
            this.textBox_CopperLoss13.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss13.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss13.Name = "textBox_CopperLoss13";
            this.textBox_CopperLoss13.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss13.TabIndex = 0x59;
            this.textBox_CellNum12.Location = new Point(120, 0x13d);
            this.textBox_CellNum12.Margin = new Padding(2);
            this.textBox_CellNum12.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum12.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum12.Name = "textBox_CellNum12";
            this.textBox_CellNum12.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum12.TabIndex = 0x58;
            this.textBox_CellNum11.Location = new Point(120, 290);
            this.textBox_CellNum11.Margin = new Padding(2);
            this.textBox_CellNum11.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum11.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum11.Name = "textBox_CellNum11";
            this.textBox_CellNum11.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum11.TabIndex = 0x57;
            this.textBox_CellNum10.Location = new Point(120, 0x109);
            this.textBox_CellNum10.Margin = new Padding(2);
            this.textBox_CellNum10.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum10.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum10.Name = "textBox_CellNum10";
            this.textBox_CellNum10.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum10.TabIndex = 0x56;
            this.textBox_CellNum9.Location = new Point(120, 0xef);
            this.textBox_CellNum9.Margin = new Padding(2);
            this.textBox_CellNum9.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum9.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum9.Name = "textBox_CellNum9";
            this.textBox_CellNum9.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum9.TabIndex = 0x55;
            this.textBox_CopperLoss12.Location = new Point(0x1b, 0x13d);
            this.textBox_CopperLoss12.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss12.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss12.Name = "textBox_CopperLoss12";
            this.textBox_CopperLoss12.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss12.TabIndex = 0x54;
            this.textBox_CopperLoss11.Location = new Point(0x1b, 290);
            this.textBox_CopperLoss11.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss11.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss11.Name = "textBox_CopperLoss11";
            this.textBox_CopperLoss11.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss11.TabIndex = 0x53;
            this.textBox_CopperLoss10.Location = new Point(0x1b, 0x109);
            this.textBox_CopperLoss10.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss10.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss10.Name = "textBox_CopperLoss10";
            this.textBox_CopperLoss10.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss10.TabIndex = 0x52;
            this.textBox_CopperLoss9.Location = new Point(0x1b, 0xee);
            this.textBox_CopperLoss9.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss9.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss9.Name = "textBox_CopperLoss9";
            this.textBox_CopperLoss9.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss9.TabIndex = 0x51;
            this.label_CellNumNotice.Location = new Point(0x1a, 0x1bd);
            this.label_CellNumNotice.Margin = new Padding(2, 0, 2, 0);
            this.label_CellNumNotice.Name = "label_CellNumNotice";
            this.label_CellNumNotice.Size = new Size(0xab, 0x1b);
            this.label_CellNumNotice.TabIndex = 80;
            this.label_CellNumNotice.Text = "if 'CellNum' equals 0, the row data will be ignored.";
            this.label_CellNum.AutoSize = true;
            this.label_CellNum.Location = new Point(0x84, 0x10);
            this.label_CellNum.Margin = new Padding(2, 0, 2, 0);
            this.label_CellNum.Name = "label_CellNum";
            this.label_CellNum.Size = new Size(0x2f, 12);
            this.label_CellNum.TabIndex = 0x4f;
            this.label_CellNum.Text = "CellNum";
            this.textBox_CellNum8.Location = new Point(120, 0xd5);
            this.textBox_CellNum8.Margin = new Padding(2);
            this.textBox_CellNum8.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum8.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum8.Name = "textBox_CellNum8";
            this.textBox_CellNum8.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum8.TabIndex = 0x4e;
            this.textBox_CopperLoss8.Location = new Point(0x1c, 0xd5);
            this.textBox_CopperLoss8.Margin = new Padding(2);
            this.textBox_CopperLoss8.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss8.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss8.Name = "textBox_CopperLoss8";
            this.textBox_CopperLoss8.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss8.TabIndex = 0x4d;
            this.textBox_CellNum7.Location = new Point(120, 0xbc);
            this.textBox_CellNum7.Margin = new Padding(2);
            this.textBox_CellNum7.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum7.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum7.Name = "textBox_CellNum7";
            this.textBox_CellNum7.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum7.TabIndex = 0x4c;
            this.textBox_CopperLoss7.Location = new Point(0x1c, 0xbc);
            this.textBox_CopperLoss7.Margin = new Padding(2);
            this.textBox_CopperLoss7.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss7.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss7.Name = "textBox_CopperLoss7";
            this.textBox_CopperLoss7.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss7.TabIndex = 0x4b;
            this.textBox_CellNum6.Location = new Point(120, 0xa2);
            this.textBox_CellNum6.Margin = new Padding(2);
            this.textBox_CellNum6.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum6.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum6.Name = "textBox_CellNum6";
            this.textBox_CellNum6.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum6.TabIndex = 0x4a;
            this.textBox_CopperLoss6.Location = new Point(0x1c, 0xa2);
            this.textBox_CopperLoss6.Margin = new Padding(2);
            this.textBox_CopperLoss6.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss6.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss6.Name = "textBox_CopperLoss6";
            this.textBox_CopperLoss6.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss6.TabIndex = 0x49;
            this.textBox_CellNum5.Location = new Point(120, 0x87);
            this.textBox_CellNum5.Margin = new Padding(2);
            this.textBox_CellNum5.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum5.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum5.Name = "textBox_CellNum5";
            this.textBox_CellNum5.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum5.TabIndex = 0x48;
            this.textBox_CopperLoss5.Location = new Point(0x1b, 0x87);
            this.textBox_CopperLoss5.Margin = new Padding(2);
            this.textBox_CopperLoss5.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss5.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss5.Name = "textBox_CopperLoss5";
            this.textBox_CopperLoss5.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss5.TabIndex = 0x47;
            this.textBox_CellNum4.Location = new Point(120, 0x6f);
            this.textBox_CellNum4.Margin = new Padding(2);
            this.textBox_CellNum4.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum4.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum4.Name = "textBox_CellNum4";
            this.textBox_CellNum4.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum4.TabIndex = 70;
            this.textBox_CellNum3.Location = new Point(120, 0x54);
            this.textBox_CellNum3.Margin = new Padding(2);
            this.textBox_CellNum3.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum3.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum3.Name = "textBox_CellNum3";
            this.textBox_CellNum3.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum3.TabIndex = 0x45;
            this.textBox_CellNum2.Location = new Point(120, 0x3d);
            this.textBox_CellNum2.Margin = new Padding(2);
            this.textBox_CellNum2.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum2.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum2.Name = "textBox_CellNum2";
            this.textBox_CellNum2.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum2.TabIndex = 0x44;
            this.textBox_CellNum1.Location = new Point(120, 0x27);
            this.textBox_CellNum1.Margin = new Padding(2);
            this.textBox_CellNum1.MaximumSize = new Size(0x4c, 20);
            this.textBox_CellNum1.MinimumSize = new Size(0x4c, 20);
            this.textBox_CellNum1.Name = "textBox_CellNum1";
            this.textBox_CellNum1.Size = new Size(0x4c, 0x15);
            this.textBox_CellNum1.TabIndex = 0x43;
            this.textBox_CopperLoss4.Location = new Point(0x1b, 0x6f);
            this.textBox_CopperLoss4.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss4.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss4.Name = "textBox_CopperLoss4";
            this.textBox_CopperLoss4.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss4.TabIndex = 0x42;
            this.button_CopperLoss_set.Location = new Point(0x7a, 0x1e8);
            this.button_CopperLoss_set.Name = "button_CopperLoss_set";
            this.button_CopperLoss_set.Size = new Size(50, 0x17);
            this.button_CopperLoss_set.TabIndex = 0x41;
            this.button_CopperLoss_set.Text = "Set";
            this.button_CopperLoss_set.UseVisualStyleBackColor = true;
            this.button_CopperLoss_set.Click += new EventHandler(this.button_CopperLoss_set_Click);
            this.button_CopperLoss_read.Location = new Point(0x42, 0x1e9);
            this.button_CopperLoss_read.Name = "button_CopperLoss_read";
            this.button_CopperLoss_read.Size = new Size(50, 0x17);
            this.button_CopperLoss_read.TabIndex = 0x40;
            this.button_CopperLoss_read.Text = "Read";
            this.button_CopperLoss_read.UseVisualStyleBackColor = true;
            this.button_CopperLoss_read.Click += new EventHandler(this.button_CopperLoss_read_Click);
            this.textBox_CopperLoss3.Location = new Point(0x1b, 0x54);
            this.textBox_CopperLoss3.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss3.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss3.Name = "textBox_CopperLoss3";
            this.textBox_CopperLoss3.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss3.TabIndex = 0x3f;
            this.label_CopperLoss.Anchor = AnchorStyles.Right | AnchorStyles.Left | AnchorStyles.Top;
            this.label_CopperLoss.AutoSize = true;
            this.label_CopperLoss.Location = new Point(0x15, 0x11);
            this.label_CopperLoss.Name = "label_CopperLoss";
            this.label_CopperLoss.Size = new Size(0x5f, 12);
            this.label_CopperLoss.TabIndex = 0x3e;
            this.label_CopperLoss.Text = "CopperLoss(uΩ)";
            this.textBox_CopperLoss2.Location = new Point(0x1b, 0x3d);
            this.textBox_CopperLoss2.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss2.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss2.Name = "textBox_CopperLoss2";
            this.textBox_CopperLoss2.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss2.TabIndex = 0x3d;
            this.textBox_CopperLoss1.Location = new Point(0x1b, 0x26);
            this.textBox_CopperLoss1.MaximumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss1.MinimumSize = new Size(0x4c, 20);
            this.textBox_CopperLoss1.Name = "textBox_CopperLoss1";
            this.textBox_CopperLoss1.Size = new Size(0x4c, 0x15);
            this.textBox_CopperLoss1.TabIndex = 60;
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value21);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt21);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value20);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value19);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value18);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value17);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt20);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt19);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt18);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt17);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value16);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value15);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value14);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value13);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value12);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt16);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt15);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt14);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt13);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt12);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value11);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt11);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value10);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value9);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value8);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value7);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt10);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt9);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt8);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt7);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value6);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value5);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value4);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value3);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value2);
            this.groupBox24.Controls.Add(this.label394);
            this.groupBox24.Controls.Add(this.button_SocTable_Set);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Value1);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt6);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt5);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt4);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt3);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt2);
            this.groupBox24.Controls.Add(this.label395);
            this.groupBox24.Controls.Add(this.button_SocTable_Read);
            this.groupBox24.Controls.Add(this.textBox_SocTable_Volt1);
            this.groupBox24.Location = new Point(8, 5);
            this.groupBox24.Name = "groupBox24";
            this.groupBox24.Size = new Size(0xb3, 630);
            this.groupBox24.TabIndex = 140;
            this.groupBox24.TabStop = false;
            this.groupBox24.Text = "SOC表格设置";
            this.textBox_SocTable_Value21.Location = new Point(0x62, 0x225);
            this.textBox_SocTable_Value21.Margin = new Padding(2);
            this.textBox_SocTable_Value21.Name = "textBox_SocTable_Value21";
            this.textBox_SocTable_Value21.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value21.TabIndex = 0x60;
            this.textBox_SocTable_Volt21.Location = new Point(0x10, 0x225);
            this.textBox_SocTable_Volt21.Margin = new Padding(2);
            this.textBox_SocTable_Volt21.Name = "textBox_SocTable_Volt21";
            this.textBox_SocTable_Volt21.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt21.TabIndex = 0x5f;
            this.textBox_SocTable_Value20.Location = new Point(0x62, 0x209);
            this.textBox_SocTable_Value20.Margin = new Padding(2);
            this.textBox_SocTable_Value20.Name = "textBox_SocTable_Value20";
            this.textBox_SocTable_Value20.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value20.TabIndex = 0x5e;
            this.textBox_SocTable_Value19.Location = new Point(0x62, 0x1f0);
            this.textBox_SocTable_Value19.Margin = new Padding(2);
            this.textBox_SocTable_Value19.Name = "textBox_SocTable_Value19";
            this.textBox_SocTable_Value19.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value19.TabIndex = 0x5d;
            this.textBox_SocTable_Value18.Location = new Point(0x62, 0x1d7);
            this.textBox_SocTable_Value18.Margin = new Padding(2);
            this.textBox_SocTable_Value18.Name = "textBox_SocTable_Value18";
            this.textBox_SocTable_Value18.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value18.TabIndex = 0x5c;
            this.textBox_SocTable_Value17.Location = new Point(0x62, 0x1be);
            this.textBox_SocTable_Value17.Margin = new Padding(2);
            this.textBox_SocTable_Value17.Name = "textBox_SocTable_Value17";
            this.textBox_SocTable_Value17.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value17.TabIndex = 0x5b;
            this.textBox_SocTable_Volt20.Location = new Point(0x10, 0x209);
            this.textBox_SocTable_Volt20.Margin = new Padding(2);
            this.textBox_SocTable_Volt20.Name = "textBox_SocTable_Volt20";
            this.textBox_SocTable_Volt20.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt20.TabIndex = 90;
            this.textBox_SocTable_Volt19.Location = new Point(0x10, 0x1f0);
            this.textBox_SocTable_Volt19.Margin = new Padding(2);
            this.textBox_SocTable_Volt19.Name = "textBox_SocTable_Volt19";
            this.textBox_SocTable_Volt19.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt19.TabIndex = 0x59;
            this.textBox_SocTable_Volt18.Location = new Point(0x10, 0x1d7);
            this.textBox_SocTable_Volt18.Margin = new Padding(2);
            this.textBox_SocTable_Volt18.Name = "textBox_SocTable_Volt18";
            this.textBox_SocTable_Volt18.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt18.TabIndex = 0x58;
            this.textBox_SocTable_Volt17.Location = new Point(0x10, 0x1be);
            this.textBox_SocTable_Volt17.Margin = new Padding(2);
            this.textBox_SocTable_Volt17.Name = "textBox_SocTable_Volt17";
            this.textBox_SocTable_Volt17.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt17.TabIndex = 0x57;
            this.textBox_SocTable_Value16.Location = new Point(0x62, 0x1a5);
            this.textBox_SocTable_Value16.Margin = new Padding(2);
            this.textBox_SocTable_Value16.Name = "textBox_SocTable_Value16";
            this.textBox_SocTable_Value16.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value16.TabIndex = 0x56;
            this.textBox_SocTable_Value15.Location = new Point(0x62, 0x18c);
            this.textBox_SocTable_Value15.Margin = new Padding(2);
            this.textBox_SocTable_Value15.Name = "textBox_SocTable_Value15";
            this.textBox_SocTable_Value15.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value15.TabIndex = 0x55;
            this.textBox_SocTable_Value14.Location = new Point(0x62, 0x173);
            this.textBox_SocTable_Value14.Margin = new Padding(2);
            this.textBox_SocTable_Value14.Name = "textBox_SocTable_Value14";
            this.textBox_SocTable_Value14.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value14.TabIndex = 0x54;
            this.textBox_SocTable_Value13.Location = new Point(0x62, 0x15a);
            this.textBox_SocTable_Value13.Margin = new Padding(2);
            this.textBox_SocTable_Value13.Name = "textBox_SocTable_Value13";
            this.textBox_SocTable_Value13.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value13.TabIndex = 0x53;
            this.textBox_SocTable_Value12.Location = new Point(0x62, 0x141);
            this.textBox_SocTable_Value12.Margin = new Padding(2);
            this.textBox_SocTable_Value12.Name = "textBox_SocTable_Value12";
            this.textBox_SocTable_Value12.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value12.TabIndex = 0x52;
            this.textBox_SocTable_Volt16.Location = new Point(0x10, 0x1a5);
            this.textBox_SocTable_Volt16.Margin = new Padding(2);
            this.textBox_SocTable_Volt16.Name = "textBox_SocTable_Volt16";
            this.textBox_SocTable_Volt16.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt16.TabIndex = 0x51;
            this.textBox_SocTable_Volt15.Location = new Point(0x10, 0x18c);
            this.textBox_SocTable_Volt15.Margin = new Padding(2);
            this.textBox_SocTable_Volt15.Name = "textBox_SocTable_Volt15";
            this.textBox_SocTable_Volt15.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt15.TabIndex = 80;
            this.textBox_SocTable_Volt14.Location = new Point(0x10, 0x173);
            this.textBox_SocTable_Volt14.Margin = new Padding(2);
            this.textBox_SocTable_Volt14.Name = "textBox_SocTable_Volt14";
            this.textBox_SocTable_Volt14.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt14.TabIndex = 0x4f;
            this.textBox_SocTable_Volt13.Location = new Point(0x10, 0x15a);
            this.textBox_SocTable_Volt13.Margin = new Padding(2);
            this.textBox_SocTable_Volt13.Name = "textBox_SocTable_Volt13";
            this.textBox_SocTable_Volt13.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt13.TabIndex = 0x4e;
            this.textBox_SocTable_Volt12.Location = new Point(0x10, 0x141);
            this.textBox_SocTable_Volt12.Margin = new Padding(2);
            this.textBox_SocTable_Volt12.Name = "textBox_SocTable_Volt12";
            this.textBox_SocTable_Volt12.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt12.TabIndex = 0x4d;
            this.textBox_SocTable_Value11.Location = new Point(0x62, 0x127);
            this.textBox_SocTable_Value11.Margin = new Padding(2);
            this.textBox_SocTable_Value11.Name = "textBox_SocTable_Value11";
            this.textBox_SocTable_Value11.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value11.TabIndex = 0x4c;
            this.textBox_SocTable_Volt11.Location = new Point(0x10, 0x127);
            this.textBox_SocTable_Volt11.Margin = new Padding(2);
            this.textBox_SocTable_Volt11.Name = "textBox_SocTable_Volt11";
            this.textBox_SocTable_Volt11.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt11.TabIndex = 0x4b;
            this.textBox_SocTable_Value10.Location = new Point(0x62, 0x10b);
            this.textBox_SocTable_Value10.Margin = new Padding(2);
            this.textBox_SocTable_Value10.Name = "textBox_SocTable_Value10";
            this.textBox_SocTable_Value10.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value10.TabIndex = 0x4a;
            this.textBox_SocTable_Value9.Location = new Point(0x62, 0xf2);
            this.textBox_SocTable_Value9.Margin = new Padding(2);
            this.textBox_SocTable_Value9.Name = "textBox_SocTable_Value9";
            this.textBox_SocTable_Value9.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value9.TabIndex = 0x49;
            this.textBox_SocTable_Value8.Location = new Point(0x62, 0xd9);
            this.textBox_SocTable_Value8.Margin = new Padding(2);
            this.textBox_SocTable_Value8.Name = "textBox_SocTable_Value8";
            this.textBox_SocTable_Value8.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value8.TabIndex = 0x48;
            this.textBox_SocTable_Value7.Location = new Point(0x62, 0xc0);
            this.textBox_SocTable_Value7.Margin = new Padding(2);
            this.textBox_SocTable_Value7.Name = "textBox_SocTable_Value7";
            this.textBox_SocTable_Value7.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value7.TabIndex = 0x47;
            this.textBox_SocTable_Volt10.Location = new Point(0x10, 0x10b);
            this.textBox_SocTable_Volt10.Margin = new Padding(2);
            this.textBox_SocTable_Volt10.Name = "textBox_SocTable_Volt10";
            this.textBox_SocTable_Volt10.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt10.TabIndex = 70;
            this.textBox_SocTable_Volt9.Location = new Point(0x10, 0xf2);
            this.textBox_SocTable_Volt9.Margin = new Padding(2);
            this.textBox_SocTable_Volt9.Name = "textBox_SocTable_Volt9";
            this.textBox_SocTable_Volt9.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt9.TabIndex = 0x45;
            this.textBox_SocTable_Volt8.Location = new Point(0x10, 0xd9);
            this.textBox_SocTable_Volt8.Margin = new Padding(2);
            this.textBox_SocTable_Volt8.Name = "textBox_SocTable_Volt8";
            this.textBox_SocTable_Volt8.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt8.TabIndex = 0x44;
            this.textBox_SocTable_Volt7.Location = new Point(0x10, 0xc0);
            this.textBox_SocTable_Volt7.Margin = new Padding(2);
            this.textBox_SocTable_Volt7.Name = "textBox_SocTable_Volt7";
            this.textBox_SocTable_Volt7.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt7.TabIndex = 0x43;
            this.textBox_SocTable_Value6.Location = new Point(0x62, 0xa7);
            this.textBox_SocTable_Value6.Margin = new Padding(2);
            this.textBox_SocTable_Value6.Name = "textBox_SocTable_Value6";
            this.textBox_SocTable_Value6.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value6.TabIndex = 0x42;
            this.textBox_SocTable_Value5.Location = new Point(0x62, 0x8e);
            this.textBox_SocTable_Value5.Margin = new Padding(2);
            this.textBox_SocTable_Value5.Name = "textBox_SocTable_Value5";
            this.textBox_SocTable_Value5.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value5.TabIndex = 0x41;
            this.textBox_SocTable_Value4.Location = new Point(0x62, 0x75);
            this.textBox_SocTable_Value4.Margin = new Padding(2);
            this.textBox_SocTable_Value4.Name = "textBox_SocTable_Value4";
            this.textBox_SocTable_Value4.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value4.TabIndex = 0x40;
            this.textBox_SocTable_Value3.Location = new Point(0x62, 0x5c);
            this.textBox_SocTable_Value3.Margin = new Padding(2);
            this.textBox_SocTable_Value3.Name = "textBox_SocTable_Value3";
            this.textBox_SocTable_Value3.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value3.TabIndex = 0x3f;
            this.textBox_SocTable_Value2.Location = new Point(0x62, 0x43);
            this.textBox_SocTable_Value2.Margin = new Padding(2);
            this.textBox_SocTable_Value2.Name = "textBox_SocTable_Value2";
            this.textBox_SocTable_Value2.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value2.TabIndex = 0x3e;
            this.label394.AutoSize = true;
            this.label394.Location = new Point(0x60, 0x11);
            this.label394.Margin = new Padding(2, 0, 2, 0);
            this.label394.Name = "label394";
            this.label394.Size = new Size(0x35, 12);
            this.label394.TabIndex = 0x3d;
            this.label394.Text = "SOC值(%)";
            this.button_SocTable_Set.Location = new Point(0x67, 0x247);
            this.button_SocTable_Set.Margin = new Padding(2);
            this.button_SocTable_Set.Name = "button_SocTable_Set";
            this.button_SocTable_Set.Size = new Size(0x33, 0x18);
            this.button_SocTable_Set.TabIndex = 60;
            this.button_SocTable_Set.Text = "Set";
            this.button_SocTable_Set.UseVisualStyleBackColor = true;
            this.button_SocTable_Set.Click += new EventHandler(this.button_SocTable_Set_Click);
            this.textBox_SocTable_Value1.Location = new Point(0x62, 0x2a);
            this.textBox_SocTable_Value1.Margin = new Padding(2);
            this.textBox_SocTable_Value1.Name = "textBox_SocTable_Value1";
            this.textBox_SocTable_Value1.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Value1.TabIndex = 0x3b;
            this.textBox_SocTable_Volt6.Location = new Point(0x10, 0xa7);
            this.textBox_SocTable_Volt6.Margin = new Padding(2);
            this.textBox_SocTable_Volt6.Name = "textBox_SocTable_Volt6";
            this.textBox_SocTable_Volt6.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt6.TabIndex = 0x3a;
            this.textBox_SocTable_Volt5.Location = new Point(0x10, 0x8e);
            this.textBox_SocTable_Volt5.Margin = new Padding(2);
            this.textBox_SocTable_Volt5.Name = "textBox_SocTable_Volt5";
            this.textBox_SocTable_Volt5.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt5.TabIndex = 0x39;
            this.textBox_SocTable_Volt4.Location = new Point(0x10, 0x75);
            this.textBox_SocTable_Volt4.Margin = new Padding(2);
            this.textBox_SocTable_Volt4.Name = "textBox_SocTable_Volt4";
            this.textBox_SocTable_Volt4.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt4.TabIndex = 0x38;
            this.textBox_SocTable_Volt3.Location = new Point(0x10, 0x5c);
            this.textBox_SocTable_Volt3.Margin = new Padding(2);
            this.textBox_SocTable_Volt3.Name = "textBox_SocTable_Volt3";
            this.textBox_SocTable_Volt3.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt3.TabIndex = 0x37;
            this.textBox_SocTable_Volt2.Location = new Point(0x10, 0x43);
            this.textBox_SocTable_Volt2.Margin = new Padding(2);
            this.textBox_SocTable_Volt2.Name = "textBox_SocTable_Volt2";
            this.textBox_SocTable_Volt2.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt2.TabIndex = 0x36;
            this.label395.AutoSize = true;
            this.label395.Location = new Point(0x13, 0x11);
            this.label395.Margin = new Padding(2, 0, 2, 0);
            this.label395.Name = "label395";
            this.label395.Size = new Size(0x35, 12);
            this.label395.TabIndex = 0x35;
            this.label395.Text = "电压(mV)";
            this.button_SocTable_Read.Location = new Point(0x10, 0x247);
            this.button_SocTable_Read.Margin = new Padding(2);
            this.button_SocTable_Read.Name = "button_SocTable_Read";
            this.button_SocTable_Read.Size = new Size(0x33, 0x18);
            this.button_SocTable_Read.TabIndex = 0x34;
            this.button_SocTable_Read.Text = "Read";
            this.button_SocTable_Read.UseVisualStyleBackColor = true;
            this.button_SocTable_Read.Click += new EventHandler(this.button_SocTable_Read_Click);
            this.textBox_SocTable_Volt1.Location = new Point(0x10, 0x2a);
            this.textBox_SocTable_Volt1.Margin = new Padding(2);
            this.textBox_SocTable_Volt1.Name = "textBox_SocTable_Volt1";
            this.textBox_SocTable_Volt1.Size = new Size(0x38, 0x15);
            this.textBox_SocTable_Volt1.TabIndex = 0x33;
            this.groupBox_Daily.Controls.Add(this.textBox_LogTimer);
            this.groupBox_Daily.Controls.Add(this.textBox_LogFileName);
            this.groupBox_Daily.Controls.Add(this.label_LogTimer);
            this.groupBox_Daily.Controls.Add(this.label_LogFileName);
            this.groupBox_Daily.Controls.Add(this.button_LogTimerStart);
            this.groupBox_Daily.Controls.Add(this.button_LogTimerStop);
            this.groupBox_Daily.Location = new Point(0x356, 0xc6);
            this.groupBox_Daily.Name = "groupBox_Daily";
            this.groupBox_Daily.Size = new Size(0xdd, 0x5d);
            this.groupBox_Daily.TabIndex = 0x8b;
            this.groupBox_Daily.TabStop = false;
            this.groupBox_Daily.Text = "日志记录";
            this.textBox_LogTimer.Location = new Point(0x5b, 0x13);
            this.textBox_LogTimer.Margin = new Padding(2);
            this.textBox_LogTimer.Name = "textBox_LogTimer";
            this.textBox_LogTimer.Size = new Size(0x3a, 0x15);
            this.textBox_LogTimer.TabIndex = 110;
            this.textBox_LogFileName.Location = new Point(8, 0x40);
            this.textBox_LogFileName.Margin = new Padding(2);
            this.textBox_LogFileName.Name = "textBox_LogFileName";
            this.textBox_LogFileName.ReadOnly = true;
            this.textBox_LogFileName.Size = new Size(0xbd, 0x15);
            this.textBox_LogFileName.TabIndex = 0x88;
            this.textBox_LogFileName.TextAlign = HorizontalAlignment.Center;
            this.label_LogTimer.AutoSize = true;
            this.label_LogTimer.Location = new Point(6, 0x18);
            this.label_LogTimer.Margin = new Padding(2, 0, 2, 0);
            this.label_LogTimer.Name = "label_LogTimer";
            this.label_LogTimer.Size = new Size(0x53, 12);
            this.label_LogTimer.TabIndex = 0x6d;
            this.label_LogTimer.Text = "记录间隔(s)：";
            this.label_LogFileName.AutoSize = true;
            this.label_LogFileName.Location = new Point(0x26, 0x2e);
            this.label_LogFileName.Margin = new Padding(2, 0, 2, 0);
            this.label_LogFileName.Name = "label_LogFileName";
            this.label_LogFileName.Size = new Size(0x4d, 12);
            this.label_LogFileName.TabIndex = 0x87;
            this.label_LogFileName.Text = "LogFileName:";
            this.button_LogTimerStart.Location = new Point(0x9b, 12);
            this.button_LogTimerStart.Margin = new Padding(2);
            this.button_LogTimerStart.Name = "button_LogTimerStart";
            this.button_LogTimerStart.RightToLeft = RightToLeft.Yes;
            this.button_LogTimerStart.Size = new Size(0x2a, 20);
            this.button_LogTimerStart.TabIndex = 0x6f;
            this.button_LogTimerStart.Text = "开始";
            this.button_LogTimerStart.UseVisualStyleBackColor = true;
            this.button_LogTimerStart.Click += new EventHandler(this.button_LogTimerStart_Click);
            this.button_LogTimerStop.Location = new Point(0x9c, 0x25);
            this.button_LogTimerStop.Margin = new Padding(2);
            this.button_LogTimerStop.Name = "button_LogTimerStop";
            this.button_LogTimerStop.Size = new Size(0x27, 0x15);
            this.button_LogTimerStop.TabIndex = 0x70;
            this.button_LogTimerStop.Text = "停止";
            this.button_LogTimerStop.UseVisualStyleBackColor = true;
            this.button_LogTimerStop.Click += new EventHandler(this.button_LogTimerStop_Click);
            this.groupBox_upgrate.Controls.Add(this.button_upgrate_clear);
            this.groupBox_upgrate.Controls.Add(this.label2);
            this.groupBox_upgrate.Controls.Add(this.button_upgrate_begin);
            this.groupBox_upgrate.Controls.Add(this.progressBar_upgrate);
            this.groupBox_upgrate.Controls.Add(this.button_upgrate_connect);
            this.groupBox_upgrate.Controls.Add(this.label1);
            this.groupBox_upgrate.Controls.Add(this.Button_upgrate_find);
            this.groupBox_upgrate.Controls.Add(this.textBox_upgrate_window);
            this.groupBox_upgrate.Controls.Add(this.textBox_upgrate_pack);
            this.groupBox_upgrate.Location = new Point(0x356, 10);
            this.groupBox_upgrate.Name = "groupBox_upgrate";
            this.groupBox_upgrate.Size = new Size(0x113, 0xb2);
            this.groupBox_upgrate.TabIndex = 0x8a;
            this.groupBox_upgrate.TabStop = false;
            this.groupBox_upgrate.Text = "Upgrate";
            this.button_upgrate_clear.Location = new Point(9, 0x71);
            this.button_upgrate_clear.Margin = new Padding(2);
            this.button_upgrate_clear.Name = "button_upgrate_clear";
            this.button_upgrate_clear.RightToLeft = RightToLeft.Yes;
            this.button_upgrate_clear.Size = new Size(0x3f, 20);
            this.button_upgrate_clear.TabIndex = 0x91;
            this.button_upgrate_clear.Text = "Clear";
            this.button_upgrate_clear.UseVisualStyleBackColor = true;
            this.button_upgrate_clear.Click += new EventHandler(this.button_upgrate_clear_Click);
            this.label2.AutoSize = true;
            this.label2.Location = new Point(8, 0x18);
            this.label2.Margin = new Padding(2, 0, 2, 0);
            this.label2.Name = "label2";
            this.label2.Size = new Size(0x2f, 12);
            this.label2.TabIndex = 0x8d;
            this.label2.Text = "升级包:";
            this.button_upgrate_begin.Enabled = false;
            this.button_upgrate_begin.Location = new Point(10, 80);
            this.button_upgrate_begin.Margin = new Padding(2);
            this.button_upgrate_begin.Name = "button_upgrate_begin";
            this.button_upgrate_begin.RightToLeft = RightToLeft.Yes;
            this.button_upgrate_begin.Size = new Size(0x3f, 20);
            this.button_upgrate_begin.TabIndex = 0x90;
            this.button_upgrate_begin.Text = "开始升级";
            this.button_upgrate_begin.UseVisualStyleBackColor = true;
            this.button_upgrate_begin.Click += new EventHandler(this.button_upgrate_begin_Click);
            this.progressBar_upgrate.Location = new Point(0x4d, 0x8b);
            this.progressBar_upgrate.Name = "progressBar_upgrate";
            this.progressBar_upgrate.Size = new Size(0xbf, 0x1d);
            this.progressBar_upgrate.TabIndex = 0x89;
            this.button_upgrate_connect.Enabled = false;
            this.button_upgrate_connect.Location = new Point(9, 0x30);
            this.button_upgrate_connect.Margin = new Padding(2);
            this.button_upgrate_connect.Name = "button_upgrate_connect";
            this.button_upgrate_connect.RightToLeft = RightToLeft.Yes;
            this.button_upgrate_connect.Size = new Size(0x3f, 20);
            this.button_upgrate_connect.TabIndex = 0x8f;
            this.button_upgrate_connect.Text = "连接设备";
            this.button_upgrate_connect.UseVisualStyleBackColor = true;
            this.button_upgrate_connect.Click += new EventHandler(this.button_upgrate_connect_Click);
            this.label1.AutoSize = true;
            this.label1.Location = new Point(8, 0x94);
            this.label1.Margin = new Padding(2, 0, 2, 0);
            this.label1.Name = "label1";
            this.label1.Size = new Size(0x41, 12);
            this.label1.TabIndex = 0x8a;
            this.label1.Text = "升级进度：";
            this.Button_upgrate_find.Location = new Point(0xbd, 20);
            this.Button_upgrate_find.Margin = new Padding(2);
            this.Button_upgrate_find.Name = "Button_upgrate_find";
            this.Button_upgrate_find.RightToLeft = RightToLeft.Yes;
            this.Button_upgrate_find.Size = new Size(0x38, 20);
            this.Button_upgrate_find.TabIndex = 0x8e;
            this.Button_upgrate_find.Text = "浏览";
            this.Button_upgrate_find.UseVisualStyleBackColor = true;
            this.Button_upgrate_find.Click += new EventHandler(this.Button_upgrate_find_Click);
            this.textBox_upgrate_window.Location = new Point(0x4d, 0x30);
            this.textBox_upgrate_window.Margin = new Padding(2);
            this.textBox_upgrate_window.Multiline = true;
            this.textBox_upgrate_window.Name = "textBox_upgrate_window";
            this.textBox_upgrate_window.Size = new Size(0xbf, 0x55);
            this.textBox_upgrate_window.TabIndex = 0x8b;
            this.textBox_upgrate_pack.Location = new Point(0x3b, 20);
            this.textBox_upgrate_pack.Margin = new Padding(2);
            this.textBox_upgrate_pack.Name = "textBox_upgrate_pack";
            this.textBox_upgrate_pack.Size = new Size(0x7e, 0x15);
            this.textBox_upgrate_pack.TabIndex = 140;
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record10);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record9);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record8);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record7);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record6);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record5);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record4);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record3);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record2);
            this.groupBox_History.Controls.Add(this.label_Time_Fault_Record1);
            this.groupBox_History.Controls.Add(this.Button_Fault_Record_Read);
            this.groupBox_History.Controls.Add(this.Button_Fault_Record_Clear);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record10);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record4);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record3);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record6);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record5);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record2);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record1);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record7);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record8);
            this.groupBox_History.Controls.Add(this.textBox_Fault_Record9);
            this.groupBox_History.Location = new Point(0x1b2, 8);
            this.groupBox_History.Name = "groupBox_History";
            this.groupBox_History.Size = new Size(0xcd, 0x1a9);
            this.groupBox_History.TabIndex = 0x87;
            this.groupBox_History.TabStop = false;
            this.groupBox_History.Text = "历史保护记录(FaultRecord)";
            this.label_Time_Fault_Record10.AutoSize = true;
            this.label_Time_Fault_Record10.Location = new Point(0x73, 0x159);
            this.label_Time_Fault_Record10.Name = "label_Time_Fault_Record10";
            this.label_Time_Fault_Record10.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record10.TabIndex = 0x99;
            this.label_Time_Fault_Record10.Text = "NA";
            this.label_Time_Fault_Record9.AutoSize = true;
            this.label_Time_Fault_Record9.Location = new Point(0x73, 310);
            this.label_Time_Fault_Record9.Name = "label_Time_Fault_Record9";
            this.label_Time_Fault_Record9.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record9.TabIndex = 0x98;
            this.label_Time_Fault_Record9.Text = "NA";
            this.label_Time_Fault_Record8.AutoSize = true;
            this.label_Time_Fault_Record8.Location = new Point(0x73, 0x114);
            this.label_Time_Fault_Record8.Name = "label_Time_Fault_Record8";
            this.label_Time_Fault_Record8.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record8.TabIndex = 0x97;
            this.label_Time_Fault_Record8.Text = "NA";
            this.label_Time_Fault_Record7.AutoSize = true;
            this.label_Time_Fault_Record7.Location = new Point(0x73, 0xed);
            this.label_Time_Fault_Record7.Name = "label_Time_Fault_Record7";
            this.label_Time_Fault_Record7.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record7.TabIndex = 150;
            this.label_Time_Fault_Record7.Text = "NA";
            this.label_Time_Fault_Record6.AutoSize = true;
            this.label_Time_Fault_Record6.Location = new Point(0x73, 0xcd);
            this.label_Time_Fault_Record6.Name = "label_Time_Fault_Record6";
            this.label_Time_Fault_Record6.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record6.TabIndex = 0x95;
            this.label_Time_Fault_Record6.Text = "NA";
            this.label_Time_Fault_Record5.AutoSize = true;
            this.label_Time_Fault_Record5.Location = new Point(0x73, 0xb2);
            this.label_Time_Fault_Record5.Name = "label_Time_Fault_Record5";
            this.label_Time_Fault_Record5.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record5.TabIndex = 0x94;
            this.label_Time_Fault_Record5.Text = "NA";
            this.label_Time_Fault_Record4.AutoSize = true;
            this.label_Time_Fault_Record4.Location = new Point(0x73, 0x8d);
            this.label_Time_Fault_Record4.Name = "label_Time_Fault_Record4";
            this.label_Time_Fault_Record4.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record4.TabIndex = 0x93;
            this.label_Time_Fault_Record4.Text = "NA";
            this.label_Time_Fault_Record3.AutoSize = true;
            this.label_Time_Fault_Record3.Location = new Point(0x73, 0x6d);
            this.label_Time_Fault_Record3.Name = "label_Time_Fault_Record3";
            this.label_Time_Fault_Record3.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record3.TabIndex = 0x92;
            this.label_Time_Fault_Record3.Text = "NA";
            this.label_Time_Fault_Record2.AutoSize = true;
            this.label_Time_Fault_Record2.Location = new Point(0x73, 70);
            this.label_Time_Fault_Record2.Name = "label_Time_Fault_Record2";
            this.label_Time_Fault_Record2.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record2.TabIndex = 0x91;
            this.label_Time_Fault_Record2.Text = "NA";
            this.label_Time_Fault_Record1.AutoSize = true;
            this.label_Time_Fault_Record1.Location = new Point(0x73, 0x26);
            this.label_Time_Fault_Record1.Name = "label_Time_Fault_Record1";
            this.label_Time_Fault_Record1.Size = new Size(0x11, 12);
            this.label_Time_Fault_Record1.TabIndex = 0x87;
            this.label_Time_Fault_Record1.Text = "NA";
            this.Button_Fault_Record_Read.Location = new Point(4, 0x177);
            this.Button_Fault_Record_Read.Name = "Button_Fault_Record_Read";
            this.Button_Fault_Record_Read.Size = new Size(0x31, 0x17);
            this.Button_Fault_Record_Read.TabIndex = 0x86;
            this.Button_Fault_Record_Read.Text = "Read";
            this.Button_Fault_Record_Read.UseVisualStyleBackColor = true;
            this.Button_Fault_Record_Read.Click += new EventHandler(this.Button_Fault_Record_Read_Click);
            this.Button_Fault_Record_Clear.Location = new Point(0x3b, 0x177);
            this.Button_Fault_Record_Clear.Name = "Button_Fault_Record_Clear";
            this.Button_Fault_Record_Clear.Size = new Size(50, 0x17);
            this.Button_Fault_Record_Clear.TabIndex = 0x85;
            this.Button_Fault_Record_Clear.Text = "Clear";
            this.Button_Fault_Record_Clear.UseVisualStyleBackColor = true;
            this.Button_Fault_Record_Clear.Click += new EventHandler(this.Button_Fault_Record_Clear_Click);
            this.textBox_Fault_Record10.Location = new Point(6, 0x156);
            this.textBox_Fault_Record10.Name = "textBox_Fault_Record10";
            this.textBox_Fault_Record10.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record10.TabIndex = 0x84;
            this.textBox_Fault_Record4.Location = new Point(6, 0x8a);
            this.textBox_Fault_Record4.Name = "textBox_Fault_Record4";
            this.textBox_Fault_Record4.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record4.TabIndex = 0x7d;
            this.textBox_Fault_Record3.Location = new Point(6, 0x68);
            this.textBox_Fault_Record3.Name = "textBox_Fault_Record3";
            this.textBox_Fault_Record3.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record3.TabIndex = 0x7c;
            this.textBox_Fault_Record6.Location = new Point(6, 0xca);
            this.textBox_Fault_Record6.Name = "textBox_Fault_Record6";
            this.textBox_Fault_Record6.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record6.TabIndex = 0x7e;
            this.textBox_Fault_Record5.Location = new Point(6, 0xac);
            this.textBox_Fault_Record5.Name = "textBox_Fault_Record5";
            this.textBox_Fault_Record5.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record5.TabIndex = 0x83;
            this.textBox_Fault_Record2.Location = new Point(6, 0x43);
            this.textBox_Fault_Record2.Name = "textBox_Fault_Record2";
            this.textBox_Fault_Record2.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record2.TabIndex = 0x7b;
            this.textBox_Fault_Record1.Location = new Point(6, 0x23);
            this.textBox_Fault_Record1.Name = "textBox_Fault_Record1";
            this.textBox_Fault_Record1.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record1.TabIndex = 0x7a;
            this.textBox_Fault_Record7.Location = new Point(6, 0xea);
            this.textBox_Fault_Record7.Name = "textBox_Fault_Record7";
            this.textBox_Fault_Record7.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record7.TabIndex = 0x7f;
            this.textBox_Fault_Record8.Location = new Point(6, 0x10f);
            this.textBox_Fault_Record8.Name = "textBox_Fault_Record8";
            this.textBox_Fault_Record8.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record8.TabIndex = 0x80;
            this.textBox_Fault_Record9.Location = new Point(6, 0x131);
            this.textBox_Fault_Record9.Name = "textBox_Fault_Record9";
            this.textBox_Fault_Record9.Size = new Size(0x67, 0x15);
            this.textBox_Fault_Record9.TabIndex = 0x81;
            this.groupBox2.Controls.Add(this.label33);
            this.groupBox2.Controls.Add(this.label34);
            this.groupBox2.Controls.Add(this.label38);
            this.groupBox2.Controls.Add(this.label29);
            this.groupBox2.Controls.Add(this.label28);
            this.groupBox2.Controls.Add(this.label27);
            this.groupBox2.Controls.Add(this.textBox_RTC_Alarm_Second);
            this.groupBox2.Controls.Add(this.textBox_RTC_Alarm_Minute);
            this.groupBox2.Controls.Add(this.textBox_RTC_Alarm_Hour);
            this.groupBox2.Controls.Add(this.textBox_RTC_Alarm_Day);
            this.groupBox2.Controls.Add(this.textBox_RTC_Alarm_Month);
            this.groupBox2.Controls.Add(this.label26);
            this.groupBox2.Controls.Add(this.button_RTC_Set);
            this.groupBox2.Controls.Add(this.textBox_RTC_Alarm_Year);
            this.groupBox2.Controls.Add(this.textBox_RTC_Time_Second);
            this.groupBox2.Controls.Add(this.textBox_RTC_Time_Minute);
            this.groupBox2.Controls.Add(this.textBox_RTC_Time_Hour);
            this.groupBox2.Controls.Add(this.textBox_RTC_Time_Day);
            this.groupBox2.Controls.Add(this.textBox_RTC_Time_Month);
            this.groupBox2.Controls.Add(this.label25);
            this.groupBox2.Controls.Add(this.button_RTC_Read);
            this.groupBox2.Controls.Add(this.textBox_RTC_Time_Year);
            this.groupBox2.Location = new Point(0x288, 9);
            this.groupBox2.Name = "groupBox2";
            this.groupBox2.Size = new Size(200, 0xea);
            this.groupBox2.TabIndex = 0;
            this.groupBox2.TabStop = false;
            this.groupBox2.Text = "RTC";
            this.label33.AutoSize = true;
            this.label33.Location = new Point(13, 170);
            this.label33.Margin = new Padding(2, 0, 2, 0);
            this.label33.Name = "label33";
            this.label33.Size = new Size(0x1d, 12);
            this.label33.TabIndex = 0x48;
            this.label33.Text = "Sec:";
            this.label34.AutoSize = true;
            this.label34.Location = new Point(13, 0x91);
            this.label34.Margin = new Padding(2, 0, 2, 0);
            this.label34.Name = "label34";
            this.label34.Size = new Size(0x1d, 12);
            this.label34.TabIndex = 0x47;
            this.label34.Text = "Min:";
            this.label38.AutoSize = true;
            this.label38.Location = new Point(13, 120);
            this.label38.Margin = new Padding(2, 0, 2, 0);
            this.label38.Name = "label38";
            this.label38.Size = new Size(0x23, 12);
            this.label38.TabIndex = 70;
            this.label38.Text = "Hour:";
            this.label29.AutoSize = true;
            this.label29.Location = new Point(13, 0x5f);
            this.label29.Margin = new Padding(2, 0, 2, 0);
            this.label29.Name = "label29";
            this.label29.Size = new Size(0x1d, 12);
            this.label29.TabIndex = 0x45;
            this.label29.Text = "Day:";
            this.label28.AutoSize = true;
            this.label28.Location = new Point(13, 70);
            this.label28.Margin = new Padding(2, 0, 2, 0);
            this.label28.Name = "label28";
            this.label28.Size = new Size(0x29, 12);
            this.label28.TabIndex = 0x44;
            this.label28.Text = "Month:";
            this.label27.AutoSize = true;
            this.label27.Location = new Point(13, 0x2d);
            this.label27.Margin = new Padding(2, 0, 2, 0);
            this.label27.Name = "label27";
            this.label27.Size = new Size(0x23, 12);
            this.label27.TabIndex = 0x43;
            this.label27.Text = "Year:";
            this.textBox_RTC_Alarm_Second.Location = new Point(0x7f, 0xa7);
            this.textBox_RTC_Alarm_Second.Margin = new Padding(2);
            this.textBox_RTC_Alarm_Second.Name = "textBox_RTC_Alarm_Second";
            this.textBox_RTC_Alarm_Second.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Alarm_Second.TabIndex = 0x42;
            this.textBox_RTC_Alarm_Minute.Location = new Point(0x7f, 0x8e);
            this.textBox_RTC_Alarm_Minute.Margin = new Padding(2);
            this.textBox_RTC_Alarm_Minute.Name = "textBox_RTC_Alarm_Minute";
            this.textBox_RTC_Alarm_Minute.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Alarm_Minute.TabIndex = 0x41;
            this.textBox_RTC_Alarm_Hour.Location = new Point(0x7f, 0x75);
            this.textBox_RTC_Alarm_Hour.Margin = new Padding(2);
            this.textBox_RTC_Alarm_Hour.Name = "textBox_RTC_Alarm_Hour";
            this.textBox_RTC_Alarm_Hour.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Alarm_Hour.TabIndex = 0x40;
            this.textBox_RTC_Alarm_Day.Location = new Point(0x7f, 0x5c);
            this.textBox_RTC_Alarm_Day.Margin = new Padding(2);
            this.textBox_RTC_Alarm_Day.Name = "textBox_RTC_Alarm_Day";
            this.textBox_RTC_Alarm_Day.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Alarm_Day.TabIndex = 0x3f;
            this.textBox_RTC_Alarm_Month.Location = new Point(0x7f, 0x43);
            this.textBox_RTC_Alarm_Month.Margin = new Padding(2);
            this.textBox_RTC_Alarm_Month.Name = "textBox_RTC_Alarm_Month";
            this.textBox_RTC_Alarm_Month.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Alarm_Month.TabIndex = 0x3e;
            this.label26.AutoSize = true;
            this.label26.Location = new Point(0x8b, 0x11);
            this.label26.Margin = new Padding(2, 0, 2, 0);
            this.label26.Name = "label26";
            this.label26.Size = new Size(0x23, 12);
            this.label26.TabIndex = 0x3d;
            this.label26.Text = "Clock";
            this.button_RTC_Set.Location = new Point(0x84, 0xc9);
            this.button_RTC_Set.Margin = new Padding(2);
            this.button_RTC_Set.Name = "button_RTC_Set";
            this.button_RTC_Set.Size = new Size(0x33, 0x18);
            this.button_RTC_Set.TabIndex = 60;
            this.button_RTC_Set.Text = "Set";
            this.button_RTC_Set.UseVisualStyleBackColor = true;
            this.button_RTC_Set.Click += new EventHandler(this.button_RTC_Set_Click);
            this.textBox_RTC_Alarm_Year.Location = new Point(0x7f, 0x2a);
            this.textBox_RTC_Alarm_Year.Margin = new Padding(2);
            this.textBox_RTC_Alarm_Year.Name = "textBox_RTC_Alarm_Year";
            this.textBox_RTC_Alarm_Year.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Alarm_Year.TabIndex = 0x3b;
            this.textBox_RTC_Time_Second.Location = new Point(0x37, 0xa7);
            this.textBox_RTC_Time_Second.Margin = new Padding(2);
            this.textBox_RTC_Time_Second.Name = "textBox_RTC_Time_Second";
            this.textBox_RTC_Time_Second.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Time_Second.TabIndex = 0x3a;
            this.textBox_RTC_Time_Minute.Location = new Point(0x37, 0x8e);
            this.textBox_RTC_Time_Minute.Margin = new Padding(2);
            this.textBox_RTC_Time_Minute.Name = "textBox_RTC_Time_Minute";
            this.textBox_RTC_Time_Minute.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Time_Minute.TabIndex = 0x39;
            this.textBox_RTC_Time_Hour.Location = new Point(0x37, 0x75);
            this.textBox_RTC_Time_Hour.Margin = new Padding(2);
            this.textBox_RTC_Time_Hour.Name = "textBox_RTC_Time_Hour";
            this.textBox_RTC_Time_Hour.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Time_Hour.TabIndex = 0x38;
            this.textBox_RTC_Time_Day.Location = new Point(0x37, 0x5c);
            this.textBox_RTC_Time_Day.Margin = new Padding(2);
            this.textBox_RTC_Time_Day.Name = "textBox_RTC_Time_Day";
            this.textBox_RTC_Time_Day.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Time_Day.TabIndex = 0x37;
            this.textBox_RTC_Time_Month.Location = new Point(0x37, 0x43);
            this.textBox_RTC_Time_Month.Margin = new Padding(2);
            this.textBox_RTC_Time_Month.Name = "textBox_RTC_Time_Month";
            this.textBox_RTC_Time_Month.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Time_Month.TabIndex = 0x36;
            this.label25.AutoSize = true;
            this.label25.Location = new Point(0x45, 0x11);
            this.label25.Margin = new Padding(2, 0, 2, 0);
            this.label25.Name = "label25";
            this.label25.Size = new Size(0x1d, 12);
            this.label25.TabIndex = 0x35;
            this.label25.Text = "Time";
            this.button_RTC_Read.Location = new Point(0x37, 0xc9);
            this.button_RTC_Read.Margin = new Padding(2);
            this.button_RTC_Read.Name = "button_RTC_Read";
            this.button_RTC_Read.Size = new Size(0x33, 0x18);
            this.button_RTC_Read.TabIndex = 0x34;
            this.button_RTC_Read.Text = "Read";
            this.button_RTC_Read.UseVisualStyleBackColor = true;
            this.button_RTC_Read.Click += new EventHandler(this.button_RTC_Read_Click);
            this.textBox_RTC_Time_Year.Location = new Point(0x37, 0x2a);
            this.textBox_RTC_Time_Year.Margin = new Padding(2);
            this.textBox_RTC_Time_Year.Name = "textBox_RTC_Time_Year";
            this.textBox_RTC_Time_Year.Size = new Size(0x38, 0x15);
            this.textBox_RTC_Time_Year.TabIndex = 0x33;
            this.eventLog1.SynchronizingObject = this;
            this.timer2.Interval = 500;
            this.timer_Log.Interval = 0x3e8;
            base.AutoScaleDimensions = new SizeF(6f, 12f);
            base.AutoScaleMode = AutoScaleMode.Font;
            this.AutoScroll = true;
            base.ClientSize = new Size(0x529, 0x2f9);
            base.Controls.Add(this.tabControl1);
            base.Name = "Form1";
            base.StartPosition = FormStartPosition.CenterScreen;
            this.Text = "Form1";
            base.Load += new EventHandler(this.Form1_Load);
            this.groupBox_Vcell.ResumeLayout(false);
            this.groupBox_Vcell.PerformLayout();
            this.groupBox_Vcell_Status.ResumeLayout(false);
            this.groupBox_Vcell_Status.PerformLayout();
            this.groupBox_OtherStatus.ResumeLayout(false);
            this.groupBox_OtherStatus.PerformLayout();
            this.tabControl1.ResumeLayout(false);
            this.tabPage1.ResumeLayout(false);
            this.tabPage1.PerformLayout();
            this.toolStrip_Imformation.ResumeLayout(false);
            this.toolStrip_Imformation.PerformLayout();
            this.groupBox_read.ResumeLayout(false);
            this.groupBox36.ResumeLayout(false);
            this.groupBox36.PerformLayout();
            this.groupBox35.ResumeLayout(false);
            this.groupBox35.PerformLayout();
            this.groupBox7.ResumeLayout(false);
            this.groupBox7.PerformLayout();
            this.groupBox6.ResumeLayout(false);
            this.groupBox6.PerformLayout();
            this.groupBox_Present.ResumeLayout(false);
            this.groupBox_Present.PerformLayout();
            this.groupBox5.ResumeLayout(false);
            this.groupBox5.PerformLayout();
            this.groupBox4.ResumeLayout(false);
            this.groupBox4.PerformLayout();
            this.groupBox3.ResumeLayout(false);
            this.groupBox3.PerformLayout();
            this.groupBox_ERROR.ResumeLayout(false);
            this.groupBox_ERROR.PerformLayout();
            this.groupBox_Balance.ResumeLayout(false);
            this.groupBox_Balance.PerformLayout();
            this.groupBox_Temperature.ResumeLayout(false);
            this.groupBox_Temperature.PerformLayout();
            this.groupBox_set.ResumeLayout(false);
            this.groupBox_set.PerformLayout();
            this.tabPage6.ResumeLayout(false);
            this.tabPage6.PerformLayout();
            this.toolStrip_SwitchCtrl.ResumeLayout(false);
            this.toolStrip_SwitchCtrl.PerformLayout();
            this.groupBox34.ResumeLayout(false);
            this.groupBox34.PerformLayout();
            this.tabPage2.ResumeLayout(false);
            this.tabPage2.PerformLayout();
            this.toolStrip_Calib1.ResumeLayout(false);
            this.toolStrip_Calib1.PerformLayout();
            this.groupBox_Vcell_cal.ResumeLayout(false);
            this.groupBox30.ResumeLayout(false);
            this.groupBox30.PerformLayout();
            this.groupBox31.ResumeLayout(false);
            this.groupBox31.PerformLayout();
            this.groupBox1.ResumeLayout(false);
            this.groupBox1.PerformLayout();
            this.groupBox22.ResumeLayout(false);
            this.groupBox22.PerformLayout();
            this.groupBox23.ResumeLayout(false);
            this.groupBox23.PerformLayout();
            this.groupBox20.ResumeLayout(false);
            this.groupBox20.PerformLayout();
            this.groupBox13.ResumeLayout(false);
            this.groupBox13.PerformLayout();
            this.groupBox21.ResumeLayout(false);
            this.groupBox21.PerformLayout();
            this.groupBox8.ResumeLayout(false);
            this.groupBox8.PerformLayout();
            this.groupBox14.ResumeLayout(false);
            this.groupBox14.PerformLayout();
            this.groupBox_Vcell16.ResumeLayout(false);
            this.groupBox_Vcell16.PerformLayout();
            this.groupBox15.ResumeLayout(false);
            this.groupBox15.PerformLayout();
            this.groupBox9.ResumeLayout(false);
            this.groupBox9.PerformLayout();
            this.groupBox16.ResumeLayout(false);
            this.groupBox16.PerformLayout();
            this.groupBox_Vcell14.ResumeLayout(false);
            this.groupBox_Vcell14.PerformLayout();
            this.groupBox17.ResumeLayout(false);
            this.groupBox17.PerformLayout();
            this.groupBox18.ResumeLayout(false);
            this.groupBox18.PerformLayout();
            this.groupBox10.ResumeLayout(false);
            this.groupBox10.PerformLayout();
            this.groupBox19.ResumeLayout(false);
            this.groupBox19.PerformLayout();
            this.groupBox_Vcell15.ResumeLayout(false);
            this.groupBox_Vcell15.PerformLayout();
            this.groupBox11.ResumeLayout(false);
            this.groupBox11.PerformLayout();
            this.groupBox12.ResumeLayout(false);
            this.groupBox12.PerformLayout();
            this.groupBox_Vcell13.ResumeLayout(false);
            this.groupBox_Vcell13.PerformLayout();
            this.groupBox_Vcell12.ResumeLayout(false);
            this.groupBox_Vcell12.PerformLayout();
            this.groupBox_Vcell6.ResumeLayout(false);
            this.groupBox_Vcell6.PerformLayout();
            this.groupBox_Vcell11.ResumeLayout(false);
            this.groupBox_Vcell11.PerformLayout();
            this.groupBox_Vcell5.ResumeLayout(false);
            this.groupBox_Vcell5.PerformLayout();
            this.groupBox_Vcell1.ResumeLayout(false);
            this.groupBox_Vcell1.PerformLayout();
            this.groupBox_Vcell10.ResumeLayout(false);
            this.groupBox_Vcell10.PerformLayout();
            this.groupBox_Vcell4.ResumeLayout(false);
            this.groupBox_Vcell4.PerformLayout();
            this.groupBox_Vcell8.ResumeLayout(false);
            this.groupBox_Vcell8.PerformLayout();
            this.groupBox_Vcell7.ResumeLayout(false);
            this.groupBox_Vcell7.PerformLayout();
            this.groupBox_Vcell9.ResumeLayout(false);
            this.groupBox_Vcell9.PerformLayout();
            this.groupBox_Vcell3.ResumeLayout(false);
            this.groupBox_Vcell3.PerformLayout();
            this.groupBox_Vcell2.ResumeLayout(false);
            this.groupBox_Vcell2.PerformLayout();
            this.tabPage5.ResumeLayout(false);
            this.tabPage5.PerformLayout();
            this.toolStrip_Protect.ResumeLayout(false);
            this.toolStrip_Protect.PerformLayout();
            this.groupBox_Vall_I.ResumeLayout(false);
            this.groupBox_Idsg.ResumeLayout(false);
            this.groupBox_Idsg.PerformLayout();
            this.groupBox_Ichg.ResumeLayout(false);
            this.groupBox_Ichg.PerformLayout();
            this.groupBox_temp_cal.ResumeLayout(false);
            this.groupBox28.ResumeLayout(false);
            this.groupBox28.PerformLayout();
            this.groupBox25.ResumeLayout(false);
            this.groupBox25.PerformLayout();
            this.groupBox29.ResumeLayout(false);
            this.groupBox29.PerformLayout();
            this.groupBox26.ResumeLayout(false);
            this.groupBox26.PerformLayout();
            this.groupBox27.ResumeLayout(false);
            this.groupBox27.PerformLayout();
            this.groupBox_temp_mos.ResumeLayout(false);
            this.groupBox_temp_mos.PerformLayout();
            this.groupBox_temp3.ResumeLayout(false);
            this.groupBox_temp3.PerformLayout();
            this.groupBox_temp_env.ResumeLayout(false);
            this.groupBox_temp_env.PerformLayout();
            this.groupBox_temp1.ResumeLayout(false);
            this.groupBox_temp1.PerformLayout();
            this.groupBox_temp2.ResumeLayout(false);
            this.groupBox_temp2.PerformLayout();
            this.tabPage3.ResumeLayout(false);
            this.tabPage3.PerformLayout();
            this.groupBox37.ResumeLayout(false);
            this.groupBox37.PerformLayout();
            this.groupBox33.ResumeLayout(false);
            this.groupBox33.PerformLayout();
            this.groupBox32.ResumeLayout(false);
            this.groupBox32.PerformLayout();
            this.toolStrip_Calib2.ResumeLayout(false);
            this.toolStrip_Calib2.PerformLayout();
            this.tabPage4.ResumeLayout(false);
            this.tabPage4.PerformLayout();
            this.groupBox45.ResumeLayout(false);
            this.toolStrip_OtherEle.ResumeLayout(false);
            this.toolStrip_OtherEle.PerformLayout();
            this.groupBox_CopperLoss.ResumeLayout(false);
            this.groupBox_CopperLoss.PerformLayout();
            this.groupBox24.ResumeLayout(false);
            this.groupBox24.PerformLayout();
            this.groupBox_Daily.ResumeLayout(false);
            this.groupBox_Daily.PerformLayout();
            this.groupBox_upgrate.ResumeLayout(false);
            this.groupBox_upgrate.PerformLayout();
            this.groupBox_History.ResumeLayout(false);
            this.groupBox_History.PerformLayout();
            this.groupBox2.ResumeLayout(false);
            this.groupBox2.PerformLayout();
            this.eventLog1.EndInit();
            base.ResumeLayout(false);
        }

        public void Language_English_Load(string filePath)
        {
            this.label_AFE_ComError_ref.Text = NiceIniWriteAndRead.ReadFromIni("Section2", "keyword1", "aaa", filePath);
            this.label_CBC_ref.Text = NiceIniWriteAndRead.ReadFromIni("Section2", "keyword2", "bbb", filePath);
        }

        private void LanguageSelect()
        {
            string section = "LanguageSelect";
            this.bLanguageSelect = NiceIniWriteAndRead.ReadFromIni(section, "keyword", "", @".\Language.ini");
            string bLanguageSelect = this.bLanguageSelect;
            if (bLanguageSelect != "English")
            {
                bool flag1 = bLanguageSelect == "Chinese";
            }
        }

        private void RxRdRegAck(byte[] bydata)
        {
            if (bydata[1] == 0x83)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("参数读取有误！错误码： " + Convert.ToString(bydata[2]), "错误！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Parameters Reading Error！Error Code： " + Convert.ToString(bydata[2]), "Error！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
            else
            {
                ushort i;
                ushort index = this.u16Rs485RegAddr;
                if (index <= 0x222a)
                {
                    float f32B;
                    if (index > 0x2046)
                    {
                        if (index > 0x2100)
                        {
                            if (index == 0x2200)
                            {
                                i = 3;
                                this.textBox_SocTable_Volt1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt1.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value1.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt2.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value2.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt3.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value3.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt4.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value4.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt5.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value5.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value5.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt6.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt6.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value6.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value6.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt7.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt7.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value7.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value7.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt8.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt8.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value8.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value8.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt9.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt9.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value9.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value9.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt10.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt10.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value10.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value10.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt11.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt11.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value11.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value11.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt12.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt12.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value12.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value12.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt13.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt13.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value13.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value13.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt14.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt14.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value14.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value14.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt15.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt15.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value15.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value15.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt16.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt16.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value16.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value16.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt17.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt17.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value17.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value17.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt18.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt18.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value18.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value18.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt19.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt19.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value19.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value19.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt20.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt20.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value20.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value20.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Volt21.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Volt21.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocTable_Value21.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocTable_Value21.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                return;
                            }
                            if (index == 0x222a)
                            {
                                i = 3;
                                this.textBox_CopperLoss1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss1.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss2.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss3.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss4.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss5.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss5.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss6.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss6.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss7.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss7.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss8.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss8.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss9.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss9.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss10.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss10.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss11.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss11.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss12.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss12.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss13.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss13.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss14.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss14.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss15.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss15.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CopperLoss16.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CopperLoss16.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum1.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum2.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum3.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum4.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum5.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum5.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum6.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum6.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum7.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum7.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum8.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum8.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum9.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum9.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum10.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum10.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum11.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum11.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum12.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum12.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum13.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum13.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum14.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum14.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum15.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum15.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_CellNum16.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_CellNum16.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                return;
                            }
                        }
                        else
                        {
                            if (index == 0x204a)
                            {
                                i = 3;
                                this.textBox_temp1_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_temp1_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num36 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num36 + bydata[index]));
                                this.textBox_temp1_b.Invoke((<p0>, <p1>) => this.textBox_temp1_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_temp2_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_temp2_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num37 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num37 + bydata[index]));
                                this.textBox_temp2_b.Invoke((<p0>, <p1>) => this.textBox_temp2_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_temp3_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_temp3_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num38 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num38 + bydata[index]));
                                this.textBox_temp3_b.Invoke((<p0>, <p1>) => this.textBox_temp3_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_temp4_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_temp4_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num39 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num39 + bydata[index]));
                                this.textBox_temp4_b.Invoke((<p0>, <p1>) => this.textBox_temp4_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_temp5_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_temp5_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num40 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num40 + bydata[index]));
                                this.textBox_temp5_b.Invoke((<p0>, <p1>) => this.textBox_temp5_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_temp6_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_temp6_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num41 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num41 + bydata[index]));
                                this.textBox_temp6_b.Invoke((<p0>, <p1>) => this.textBox_temp6_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_tempEnv1_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_tempEnv1_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num42 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num42 + bydata[index]));
                                this.textBox_tempEnv1_b.Invoke((<p0>, <p1>) => this.textBox_tempEnv1_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_tempEnv2_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_tempEnv2_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num43 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num43 + bydata[index]));
                                this.textBox_tempEnv2_b.Invoke((<p0>, <p1>) => this.textBox_tempEnv2_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_tempEnv3_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_tempEnv3_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num44 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num44 + bydata[index]));
                                this.textBox_tempEnv3_b.Invoke((<p0>, <p1>) => this.textBox_tempEnv3_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                this.textBox_temp_mos_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] << 8;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_temp_mos_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                                });
                                index = i;
                                i = (ushort) (index + 1);
                                int num45 = bydata[index] << 8;
                                index = i;
                                i = (ushort) (index + 1);
                                f32B = (float) Convert.ToDouble((short) (num45 + bydata[index]));
                                this.textBox_temp_mos_b.Invoke((<p0>, <p1>) => this.textBox_temp_mos_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                                return;
                            }
                            if (index == 0x2100)
                            {
                                i = 3;
                                this.textBox_VcellOVP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellOVP_First.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellOVP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellOVP_Second.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellOVP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellOVP_Third.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellOVP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellOVP_Rec.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellOVP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellOVP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellUVP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellUVP_First.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellUVP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellUVP_Second.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellUVP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellUVP_Third.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellUVP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellUVP_Rec.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VcellUVP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VcellUVP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VbusOVP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusOVP_First.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusOVP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusOVP_Second.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusOVP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusOVP_Third.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusOVP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusOVP_Rec.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusOVP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusOVP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VbusUVP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusUVP_First.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusUVP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusUVP_Second.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusUVP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusUVP_Third.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusUVP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusUVP_Rec.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 100f)).ToString("0.00");
                                });
                                this.textBox_VbusUVP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VbusUVP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_IchgOCP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IchgOCP_First.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IchgOCP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IchgOCP_Second.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IchgOCP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IchgOCP_Third.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IchgOCP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IchgOCP_Rec.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IchgOCP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IchgOCP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_IdsgOCP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IdsgOCP_First.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IdsgOCP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IdsgOCP_Second.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IdsgOCP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IdsgOCP_Third.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IdsgOCP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IdsgOCP_Rec.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                                });
                                this.textBox_IdsgOCP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_IdsgOCP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_TchgOTP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgOTP_First.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgOTP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgOTP_Second.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgOTP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgOTP_Third.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgOTP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgOTP_Rec.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgOTP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgOTP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_TchgUTP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgUTP_First.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgUTP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgUTP_Second.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgUTP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgUTP_Third.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgUTP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgUTP_Rec.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TchgUTP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TchgUTP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_TdsgOTP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgOTP_First.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgOTP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgOTP_Second.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgOTP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgOTP_Third.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgOTP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgOTP_Rec.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgOTP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgOTP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_TdsgUTP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgUTP_First.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgUTP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgUTP_Second.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgUTP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgUTP_Third.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgUTP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgUTP_Rec.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TdsgUTP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TdsgUTP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_TmosOTP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TmosOTP_First.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TmosOTP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TmosOTP_Second.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TmosOTP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TmosOTP_Third.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TmosOTP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TmosOTP_Rec.Text = Convert.ToDouble((float) (((num1 + bydata[num]) - 400f) / 10f)).ToString("0.0");
                                });
                                this.textBox_TmosOTP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_TmosOTP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VdeltaOVP_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VdeltaOVP_First.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VdeltaOVP_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VdeltaOVP_Second.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VdeltaOVP_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VdeltaOVP_Third.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VdeltaOVP_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VdeltaOVP_Rec.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_VdeltaOVP_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_VdeltaOVP_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocUp_First.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocUp_First.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocUp_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocUp_Second.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocUp_Third.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocUp_Third.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocUp_Rec.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocUp_Rec.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                this.textBox_SocUp_DelayT.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                    ushort num = i;
                                    i = (ushort) (num + 1);
                                    int num1 = bydata[num] * 0x100;
                                    num = i;
                                    i = (ushort) (num + 1);
                                    this.textBox_SocUp_DelayT.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                                });
                                return;
                            }
                        }
                    }
                    else
                    {
                        if (index == 0x2000)
                        {
                            i = 3;
                            this.textBox_cail_cell1_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell1_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num1 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num1 + bydata[index]));
                            this.textBox_cail_cell1_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell1_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell2_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell2_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num3 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num3 + bydata[index]));
                            this.textBox_cail_cell2_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell2_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell3_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell3_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num4 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num4 + bydata[index]));
                            this.textBox_cail_cell3_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell3_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell4_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell4_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num5 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num5 + bydata[index]));
                            this.textBox_cail_cell4_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell4_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell5_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell5_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num6 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num6 + bydata[index]));
                            this.textBox_cail_cell5_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell5_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell6_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell6_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num7 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num7 + bydata[index]));
                            this.textBox_cail_cell6_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell6_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell7_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell7_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num8 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num8 + bydata[index]));
                            this.textBox_cail_cell7_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell7_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell8_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell8_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num9 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num9 + bydata[index]));
                            this.textBox_cail_cell8_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell8_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell9_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell9_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num10 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num10 + bydata[index]));
                            this.textBox_cail_cell9_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell9_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell10_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell10_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num11 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num11 + bydata[index]));
                            this.textBox_cail_cell10_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell10_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell11_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell11_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num12 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num12 + bydata[index]));
                            this.textBox_cail_cell11_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell11_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell12_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell12_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num13 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num13 + bydata[index]));
                            this.textBox_cail_cell12_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell12_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell13_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell13_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num14 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num14 + bydata[index]));
                            this.textBox_cail_cell13_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell13_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell14_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell14_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num15 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num15 + bydata[index]));
                            this.textBox_cail_cell14_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell14_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell15_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell15_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num16 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num16 + bydata[index]));
                            this.textBox_cail_cell15_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell15_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell16_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell16_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num17 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num17 + bydata[index]));
                            this.textBox_cail_cell16_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell16_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell17_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell17_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num18 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num18 + bydata[index]));
                            this.textBox_cail_cell17_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell17_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell18_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell18_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num19 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num19 + bydata[index]));
                            this.textBox_cail_cell18_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell18_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell19_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell19_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num20 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num20 + bydata[index]));
                            this.textBox_cail_cell19_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell19_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell20_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell20_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num21 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num21 + bydata[index]));
                            this.textBox_cail_cell20_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell20_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell21_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell21_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num22 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num22 + bydata[index]));
                            this.textBox_cail_cell21_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell21_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell22_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell22_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num23 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num23 + bydata[index]));
                            this.textBox_cail_cell22_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell22_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell23_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell23_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num24 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num24 + bydata[index]));
                            this.textBox_cail_cell23_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell23_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell24_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell24_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num25 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num25 + bydata[index]));
                            this.textBox_cail_cell24_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell24_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell25_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell25_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num26 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num26 + bydata[index]));
                            this.textBox_cail_cell25_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell25_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell26_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell26_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num27 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num27 + bydata[index]));
                            this.textBox_cail_cell26_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell26_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell27_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell27_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num28 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num28 + bydata[index]));
                            this.textBox_cail_cell27_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell27_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell28_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell28_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num29 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num29 + bydata[index]));
                            this.textBox_cail_cell28_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell28_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell29_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell29_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num30 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num30 + bydata[index]));
                            this.textBox_cail_cell29_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell29_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell30_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell30_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num31 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num31 + bydata[index]));
                            this.textBox_cail_cell30_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell30_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell31_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell31_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num32 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num32 + bydata[index]));
                            this.textBox_cail_cell31_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell31_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            this.textBox_cail_cell32_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_cell32_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num33 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num33 + bydata[index]));
                            this.textBox_cail_cell32_b.Invoke((<p0>, <p1>) => this.textBox_cail_cell32_b.Text = Convert.ToDouble(f32B).ToString("0"));
                            return;
                        }
                        if (index == 0x2040)
                        {
                            i = 3;
                            this.textBox_cail_AFE1_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_AFE1_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            this.textBox_cail_AFE1_b.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_AFE1_b.Text = Convert.ToDouble((float) Convert.ToDouble((short) (num1 + bydata[num]))).ToString("0");
                            });
                            this.textBox_cail_AFE2_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_AFE2_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            this.textBox_cail_AFE2_b.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_AFE2_b.Text = Convert.ToDouble((float) Convert.ToDouble((short) (num1 + bydata[num]))).ToString("0");
                            });
                            this.textBox_cail_Vbus_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_Vbus_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            this.textBox_cail_Vbus_b.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_Vbus_b.Text = Convert.ToDouble((float) Convert.ToDouble((short) (num1 + bydata[num]))).ToString("0");
                            });
                            return;
                        }
                        if (index == 0x2046)
                        {
                            i = 3;
                            this.textBox_cail_Idsg_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_Idsg_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num34 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num34 + bydata[index]));
                            this.textBox_cail_Idsg_b.Invoke((<p0>, <p1>) => this.textBox_cail_Idsg_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                            this.textBox_cail_Ichg_k.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] << 8;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_cail_Ichg_k.Text = Convert.ToDouble((double) (((double) (num1 + bydata[num])) / Math.Pow(2.0, 10.0))).ToString("0.000");
                            });
                            index = i;
                            i = (ushort) (index + 1);
                            int num35 = bydata[index] << 8;
                            index = i;
                            i = (ushort) (index + 1);
                            f32B = (float) Convert.ToDouble((short) (num35 + bydata[index]));
                            this.textBox_cail_Ichg_b.Invoke((<p0>, <p1>) => this.textBox_cail_Ichg_b.Text = Convert.ToDouble((double) (((double) f32B) / Math.Pow(2.0, 10.0))).ToString("0.000"));
                            return;
                        }
                    }
                }
                else if (index <= 0x2310)
                {
                    if (index > 0x2300)
                    {
                        if (index == 0x2308)
                        {
                            this.textBox_Heat_DSGhigh.Invoke((<p0>, <p1>) => this.textBox_Heat_DSGhigh.Text = Convert.ToDouble((float) ((((float) ((bydata[3] * 0x100) + bydata[4])) / 10f) - 40f)).ToString("0.0"));
                            this.textBox_Heat_DSGlow.Invoke((<p0>, <p1>) => this.textBox_Heat_DSGlow.Text = Convert.ToDouble((float) ((((float) ((bydata[5] * 0x100) + bydata[6])) / 10f) - 40f)).ToString("0.0"));
                            this.textBox_Heat_CHGhigh.Invoke((<p0>, <p1>) => this.textBox_Heat_CHGhigh.Text = Convert.ToDouble((float) ((((float) ((bydata[7] * 0x100) + bydata[8])) / 10f) - 40f)).ToString("0.0"));
                            this.textBox_Heat_CHGlow.Invoke((<p0>, <p1>) => this.textBox_Heat_CHGlow.Text = Convert.ToDouble((float) ((((float) ((bydata[9] * 0x100) + bydata[10])) / 10f) - 40f)).ToString("0.0"));
                            this.textBox_Cool_DSGhigh.Invoke((<p0>, <p1>) => this.textBox_Cool_DSGhigh.Text = Convert.ToDouble((float) ((((float) ((bydata[11] * 0x100) + bydata[12])) / 10f) - 40f)).ToString("0.0"));
                            this.textBox_Cool_DSGlow.Invoke((<p0>, <p1>) => this.textBox_Cool_DSGlow.Text = Convert.ToDouble((float) ((((float) ((bydata[13] * 0x100) + bydata[14])) / 10f) - 40f)).ToString("0.0"));
                            this.textBox_Cool_CHGhigh.Invoke((<p0>, <p1>) => this.textBox_Cool_CHGhigh.Text = Convert.ToDouble((float) ((((float) ((bydata[15] * 0x100) + bydata[0x10])) / 10f) - 40f)).ToString("0.0"));
                            this.textBox_Cool_CHGlow.Invoke((<p0>, <p1>) => this.textBox_Cool_CHGlow.Text = Convert.ToDouble((float) ((((float) ((bydata[0x11] * 0x100) + bydata[0x12])) / 10f) - 40f)).ToString("0.0"));
                            return;
                        }
                        if (index == 0x2310)
                        {
                            this.textBox_NormalV.Invoke((<p0>, <p1>) => this.textBox_NormalV.Text = Convert.ToDouble((float) ((bydata[3] * 0x100) + bydata[4])).ToString("0"));
                            this.textBox_NormalT.Invoke((<p0>, <p1>) => this.textBox_NormalT.Text = Convert.ToDouble((float) ((bydata[5] * 0x100) + bydata[6])).ToString("0"));
                            this.textBox_OverDsgV.Invoke((<p0>, <p1>) => this.textBox_OverDsgV.Text = Convert.ToDouble((float) ((bydata[7] * 0x100) + bydata[8])).ToString("0"));
                            this.textBox_OverDsgT.Invoke((<p0>, <p1>) => this.textBox_OverDsgT.Text = Convert.ToDouble((float) ((bydata[9] * 0x100) + bydata[10])).ToString("0"));
                            this.textBox_I_ChgLimit.Invoke((<p0>, <p1>) => this.textBox_I_ChgLimit.Text = Convert.ToDouble((float) (((float) ((bydata[11] * 0x100) + bydata[12])) / 10f)).ToString("0.0"));
                            this.textBox_I_DsgLimit.Invoke((<p0>, <p1>) => this.textBox_I_DsgLimit.Text = Convert.ToDouble((float) (((float) ((bydata[13] * 0x100) + bydata[14])) / 10f)).ToString("0.0"));
                            this.textBox_PreChgFre.Invoke((<p0>, <p1>) => this.textBox_PreChgFre.Text = Convert.ToDouble((float) ((bydata[15] * 0x100) + bydata[0x10])).ToString("0"));
                            this.textBox_PreChgTime.Invoke((<p0>, <p1>) => this.textBox_PreChgTime.Text = Convert.ToDouble((float) ((bydata[0x11] * 0x100) + bydata[0x12])).ToString("0"));
                            return;
                        }
                    }
                    else
                    {
                        if (index == 0x224a)
                        {
                            i = 3;
                            this.textBox_RTC_Time_Year.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Time_Year.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Time_Month.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Time_Month.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Time_Day.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Time_Day.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Time_Hour.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Time_Hour.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Time_Minute.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Time_Minute.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Time_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Time_Second.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Alarm_Year.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Alarm_Year.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Alarm_Month.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Alarm_Month.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Alarm_Day.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Alarm_Day.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Alarm_Hour.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Alarm_Hour.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Alarm_Minute.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Alarm_Minute.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            this.textBox_RTC_Alarm_Second.Invoke(delegate (object <p0>, EventArgs <p1>) {
                                ushort num = i;
                                i = (ushort) (num + 1);
                                int num1 = bydata[num] * 0x100;
                                num = i;
                                i = (ushort) (num + 1);
                                this.textBox_RTC_Alarm_Second.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString();
                            });
                            return;
                        }
                        if (index == 0x2300)
                        {
                            this.textBox_openV.Invoke((<p0>, <p1>) => this.textBox_openV.Text = Convert.ToDouble((float) ((bydata[3] * 0x100) + bydata[4])).ToString());
                            this.textBox_openW.Invoke((<p0>, <p1>) => this.textBox_openW.Text = Convert.ToDouble((float) ((bydata[5] * 0x100) + bydata[6])).ToString());
                            this.textBox_closeW1.Invoke((<p0>, <p1>) => this.textBox_closeW1.Text = Convert.ToDouble((float) ((bydata[7] * 0x100) + bydata[8])).ToString());
                            this.textBox_closeW2.Invoke((<p0>, <p1>) => this.textBox_closeW2.Text = Convert.ToDouble((float) ((bydata[9] * 0x100) + bydata[10])).ToString());
                            this.textBox_OpenT_Odd.Invoke((<p0>, <p1>) => this.textBox_OpenT_Odd.Text = Convert.ToDouble((float) ((bydata[11] * 0x100) + bydata[12])).ToString());
                            this.textBox_OpenT_Even.Invoke((<p0>, <p1>) => this.textBox_OpenT_Even.Text = Convert.ToDouble((float) ((bydata[13] * 0x100) + bydata[14])).ToString());
                            this.textBox_OpenT_Mos.Invoke((<p0>, <p1>) => this.textBox_OpenT_Mos.Text = Convert.ToDouble((float) ((bydata[15] * 0x100) + bydata[0x10])).ToString());
                            this.textBox_OpenT_Res.Invoke((<p0>, <p1>) => this.textBox_OpenT_Res.Text = Convert.ToDouble((float) ((bydata[0x11] * 0x100) + bydata[0x12])).ToString());
                            return;
                        }
                    }
                }
                else if (index <= 0x231c)
                {
                    if (index == 0x2318)
                    {
                        this.textBox_Soc_Ah.Invoke((<p0>, <p1>) => this.textBox_Soc_Ah.Text = Convert.ToDouble((float) (((float) ((bydata[3] * 0x100) + bydata[4])) / 10f)).ToString("0.0"));
                        this.textBox_Soc_CycleTime.Invoke((<p0>, <p1>) => this.textBox_Soc_CycleTime.Text = Convert.ToDouble((float) ((bydata[5] * 0x100) + bydata[6])).ToString("0"));
                        this.textBox_Soc_TabelSelect.Invoke((<p0>, <p1>) => this.textBox_Soc_TabelSelect.Text = Convert.ToDouble((float) ((bydata[7] * 0x100) + bydata[8])).ToString("0"));
                        this.textBox_Soc_Res2.Invoke((<p0>, <p1>) => this.textBox_Soc_Res2.Text = Convert.ToDouble((float) ((bydata[9] * 0x100) + bydata[10])).ToString("0"));
                        return;
                    }
                    if (index == 0x231c)
                    {
                        this.textBox_Sys_SeriesNum.Invoke((<p0>, <p1>) => this.textBox_Sys_SeriesNum.Text = Convert.ToDouble((float) ((bydata[3] * 0x100) + bydata[4])).ToString("0"));
                        this.textBox_Sys_CSRes.Invoke((<p0>, <p1>) => this.textBox_Sys_CSRes.Text = Convert.ToDouble((float) ((bydata[5] * 0x100) + bydata[6])).ToString("0"));
                        this.textBox_Sys_CSRes_Num.Invoke((<p0>, <p1>) => this.textBox_Sys_CSRes_Num.Text = Convert.ToDouble((float) ((bydata[7] * 0x100) + bydata[8])).ToString("0"));
                        this.textBox_Sys_PreChg_Time.Invoke((<p0>, <p1>) => this.textBox_Sys_PreChg_Time.Text = Convert.ToDouble((float) ((bydata[9] * 0x100) + bydata[10])).ToString("0"));
                        return;
                    }
                }
                else
                {
                    if (index == 0x2320)
                    {
                        i = 3;
                        this.textBox_HeatDSG_High.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_HeatDSG_High.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_HeatDSG_Low.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_HeatDSG_Low.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_HeatCHG_High.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_HeatCHG_High.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_HeatCHG_Low.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_HeatCHG_Low.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_HeatCur_Max.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_HeatCur_Max.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                        });
                        this.textBox_HeatCur_Min.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_HeatCur_Min.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                        });
                        this.textBox_HeatTime_Max.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_HeatTime_Max.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Heat_Res1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Heat_Res1.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Heat_Res2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Heat_Res2.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Heat_Res3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Heat_Res3.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Heat_Res4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Heat_Res4.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Heat_Res5.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Heat_Res5.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Heat_Res6.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Heat_Res6.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_CoolDSG_High.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_CoolDSG_High.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_CoolDSG_Low.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_CoolDSG_Low.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_CoolCHG_High.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_CoolCHG_High.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_CoolCHG_Low.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_CoolCHG_Low.Text = Convert.ToDouble((float) ((((float) (num1 + bydata[num])) / 10f) - 40f)).ToString("0.0");
                        });
                        this.textBox_CoolCur_Max.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_CoolCur_Max.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                        });
                        this.textBox_CoolCur_Min.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_CoolCur_Min.Text = Convert.ToDouble((float) (((float) (num1 + bydata[num])) / 10f)).ToString("0.0");
                        });
                        this.textBox_CoolTime_Max.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_CoolTime_Max.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Cool_Res1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Cool_Res1.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Cool_Res2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Cool_Res2.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Cool_Res3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Cool_Res3.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        this.textBox_Cool_Res4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] * 0x100;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Cool_Res4.Text = Convert.ToDouble((float) (num1 + bydata[num])).ToString("0");
                        });
                        return;
                    }
                    if (index == 0xc001)
                    {
                        i = 3;
                        this.textBox_Fault_Record1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record1.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num46 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num46 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num47 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num47 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num48 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num48 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num49 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num49 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num50 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num50 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num51 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num51 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record1.Text = "NA";
                        }
                        else
                        {
                            string[] textArray1 = new string[11];
                            textArray1[0] = this.Year;
                            textArray1[1] = "/";
                            textArray1[2] = this.Month;
                            textArray1[3] = "/";
                            textArray1[4] = this.Day;
                            textArray1[5] = "/";
                            textArray1[6] = this.Hour;
                            textArray1[7] = "/";
                            textArray1[8] = this.Minute;
                            textArray1[9] = "/";
                            textArray1[10] = this.Second;
                            this.label_Time_Fault_Record1.Text = string.Concat(textArray1);
                        }
                        this.textBox_Fault_Record2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record2.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num52 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num52 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num53 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num53 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num54 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num54 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num55 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num55 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num56 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num56 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num57 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num57 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record2.Text = "NA";
                        }
                        else
                        {
                            string[] textArray2 = new string[11];
                            textArray2[0] = this.Year;
                            textArray2[1] = "/";
                            textArray2[2] = this.Month;
                            textArray2[3] = "/";
                            textArray2[4] = this.Day;
                            textArray2[5] = "/";
                            textArray2[6] = this.Hour;
                            textArray2[7] = "/";
                            textArray2[8] = this.Minute;
                            textArray2[9] = "/";
                            textArray2[10] = this.Second;
                            this.label_Time_Fault_Record2.Text = string.Concat(textArray2);
                        }
                        this.textBox_Fault_Record3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record3.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num58 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num58 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num59 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num59 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num60 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num60 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num61 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num61 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num62 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num62 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num63 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num63 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record3.Text = "NA";
                        }
                        else
                        {
                            string[] textArray3 = new string[11];
                            textArray3[0] = this.Year;
                            textArray3[1] = "/";
                            textArray3[2] = this.Month;
                            textArray3[3] = "/";
                            textArray3[4] = this.Day;
                            textArray3[5] = "/";
                            textArray3[6] = this.Hour;
                            textArray3[7] = "/";
                            textArray3[8] = this.Minute;
                            textArray3[9] = "/";
                            textArray3[10] = this.Second;
                            this.label_Time_Fault_Record3.Text = string.Concat(textArray3);
                        }
                        this.textBox_Fault_Record4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record4.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num64 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num64 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num65 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num65 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num66 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num66 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num67 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num67 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num68 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num68 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num69 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num69 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record4.Text = "NA";
                        }
                        else
                        {
                            string[] textArray4 = new string[11];
                            textArray4[0] = this.Year;
                            textArray4[1] = "/";
                            textArray4[2] = this.Month;
                            textArray4[3] = "/";
                            textArray4[4] = this.Day;
                            textArray4[5] = "/";
                            textArray4[6] = this.Hour;
                            textArray4[7] = "/";
                            textArray4[8] = this.Minute;
                            textArray4[9] = "/";
                            textArray4[10] = this.Second;
                            this.label_Time_Fault_Record4.Text = string.Concat(textArray4);
                        }
                        this.textBox_Fault_Record5.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record5.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num70 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num70 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num71 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num71 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num72 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num72 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num73 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num73 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num74 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num74 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num75 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num75 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record5.Text = "NA";
                        }
                        else
                        {
                            string[] textArray5 = new string[11];
                            textArray5[0] = this.Year;
                            textArray5[1] = "/";
                            textArray5[2] = this.Month;
                            textArray5[3] = "/";
                            textArray5[4] = this.Day;
                            textArray5[5] = "/";
                            textArray5[6] = this.Hour;
                            textArray5[7] = "/";
                            textArray5[8] = this.Minute;
                            textArray5[9] = "/";
                            textArray5[10] = this.Second;
                            this.label_Time_Fault_Record5.Text = string.Concat(textArray5);
                        }
                        this.textBox_Fault_Record6.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record6.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num76 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num76 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num77 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num77 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num78 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num78 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num79 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num79 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num80 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num80 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num81 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num81 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record6.Text = "NA";
                        }
                        else
                        {
                            string[] textArray6 = new string[11];
                            textArray6[0] = this.Year;
                            textArray6[1] = "/";
                            textArray6[2] = this.Month;
                            textArray6[3] = "/";
                            textArray6[4] = this.Day;
                            textArray6[5] = "/";
                            textArray6[6] = this.Hour;
                            textArray6[7] = "/";
                            textArray6[8] = this.Minute;
                            textArray6[9] = "/";
                            textArray6[10] = this.Second;
                            this.label_Time_Fault_Record6.Text = string.Concat(textArray6);
                        }
                        this.textBox_Fault_Record7.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record7.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num82 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num82 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num83 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num83 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num84 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num84 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num85 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num85 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num86 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num86 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num87 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num87 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record7.Text = "NA";
                        }
                        else
                        {
                            string[] textArray7 = new string[11];
                            textArray7[0] = this.Year;
                            textArray7[1] = "/";
                            textArray7[2] = this.Month;
                            textArray7[3] = "/";
                            textArray7[4] = this.Day;
                            textArray7[5] = "/";
                            textArray7[6] = this.Hour;
                            textArray7[7] = "/";
                            textArray7[8] = this.Minute;
                            textArray7[9] = "/";
                            textArray7[10] = this.Second;
                            this.label_Time_Fault_Record7.Text = string.Concat(textArray7);
                        }
                        this.textBox_Fault_Record8.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record8.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num88 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num88 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num89 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num89 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num90 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num90 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num91 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num91 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num92 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num92 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num93 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num93 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record8.Text = "NA";
                        }
                        else
                        {
                            string[] textArray8 = new string[11];
                            textArray8[0] = this.Year;
                            textArray8[1] = "/";
                            textArray8[2] = this.Month;
                            textArray8[3] = "/";
                            textArray8[4] = this.Day;
                            textArray8[5] = "/";
                            textArray8[6] = this.Hour;
                            textArray8[7] = "/";
                            textArray8[8] = this.Minute;
                            textArray8[9] = "/";
                            textArray8[10] = this.Second;
                            this.label_Time_Fault_Record8.Text = string.Concat(textArray8);
                        }
                        this.textBox_Fault_Record9.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record9.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num94 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num94 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num95 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num95 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num96 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num96 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num97 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num97 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num98 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num98 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num99 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num99 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record9.Text = "NA";
                        }
                        else
                        {
                            string[] textArray9 = new string[11];
                            textArray9[0] = this.Year;
                            textArray9[1] = "/";
                            textArray9[2] = this.Month;
                            textArray9[3] = "/";
                            textArray9[4] = this.Day;
                            textArray9[5] = "/";
                            textArray9[6] = this.Hour;
                            textArray9[7] = "/";
                            textArray9[8] = this.Minute;
                            textArray9[9] = "/";
                            textArray9[10] = this.Second;
                            this.label_Time_Fault_Record9.Text = string.Concat(textArray9);
                        }
                        this.textBox_Fault_Record10.Invoke(delegate (object <p0>, EventArgs <p1>) {
                            ushort num = i;
                            i = (ushort) (num + 1);
                            int num1 = bydata[num] << 8;
                            num = i;
                            i = (ushort) (num + 1);
                            this.textBox_Fault_Record10.Text = this.FaultWarnName[num1 + bydata[num]];
                        });
                        index = i;
                        i = (ushort) (index + 1);
                        int num100 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Year = Convert.ToDouble((float) (num100 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num101 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Month = Convert.ToDouble((float) (num101 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num102 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Day = Convert.ToDouble((float) (num102 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num103 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Hour = Convert.ToDouble((float) (num103 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num104 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Minute = Convert.ToDouble((float) (num104 + bydata[index])).ToString("0");
                        index = i;
                        i = (ushort) (index + 1);
                        int num105 = bydata[index] << 8;
                        index = i;
                        i = (ushort) (index + 1);
                        this.Second = Convert.ToDouble((float) (num105 + bydata[index])).ToString("0");
                        if ((this.Month == "0") && (this.Day == "0"))
                        {
                            this.label_Time_Fault_Record10.Text = "NA";
                            return;
                        }
                        string[] textArray10 = new string[11];
                        textArray10[0] = this.Year;
                        textArray10[1] = "/";
                        textArray10[2] = this.Month;
                        textArray10[3] = "/";
                        textArray10[4] = this.Day;
                        textArray10[5] = "/";
                        textArray10[6] = this.Hour;
                        textArray10[7] = "/";
                        textArray10[8] = this.Minute;
                        textArray10[9] = "/";
                        textArray10[10] = this.Second;
                        this.label_Time_Fault_Record10.Text = string.Concat(textArray10);
                        return;
                    }
                }
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("操作错误！", "错误信息！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Mission Failed！", "ErrorMessage！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
            }
        }

        private void RxRdRunInfoAck(byte[] bydata)
        {
            int temp;
            int num2;
            int i = 3;
            switch (this.u16Rs485RegAddr)
            {
                case 0xd000:
                {
                    num2 = i;
                    i = num2 + 1;
                    int num1 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num1 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC1.Text = "NA";
                    }
                    else
                    {
                        this.label_VC1.Invoke((<p0>, <p1>) => this.label_VC1.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num3 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num3 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC2.Text = "NA";
                    }
                    else
                    {
                        this.label_VC2.Invoke((<p0>, <p1>) => this.label_VC2.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num4 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num4 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC3.Text = "NA";
                    }
                    else
                    {
                        this.label_VC3.Invoke((<p0>, <p1>) => this.label_VC3.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num5 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num5 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC4.Text = "NA";
                    }
                    else
                    {
                        this.label_VC4.Invoke((<p0>, <p1>) => this.label_VC4.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num6 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num6 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC5.Text = "NA";
                    }
                    else
                    {
                        this.label_VC5.Invoke((<p0>, <p1>) => this.label_VC5.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num7 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num7 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC6.Text = "NA";
                    }
                    else
                    {
                        this.label_VC6.Invoke((<p0>, <p1>) => this.label_VC6.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num8 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num8 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC7.Text = "NA";
                    }
                    else
                    {
                        this.label_VC7.Invoke((<p0>, <p1>) => this.label_VC7.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num9 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num9 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC8.Text = "NA";
                    }
                    else
                    {
                        this.label_VC8.Invoke((<p0>, <p1>) => this.label_VC8.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num10 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num10 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC9.Text = "NA";
                    }
                    else
                    {
                        this.label_VC9.Invoke((<p0>, <p1>) => this.label_VC9.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num11 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num11 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC10.Text = "NA";
                    }
                    else
                    {
                        this.label_VC10.Invoke((<p0>, <p1>) => this.label_VC10.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num12 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num12 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC11.Text = "NA";
                    }
                    else
                    {
                        this.label_VC11.Invoke((<p0>, <p1>) => this.label_VC11.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num13 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num13 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC12.Text = "NA";
                    }
                    else
                    {
                        this.label_VC12.Invoke((<p0>, <p1>) => this.label_VC12.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num14 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num14 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC13.Text = "NA";
                    }
                    else
                    {
                        this.label_VC13.Invoke((<p0>, <p1>) => this.label_VC13.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num15 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num15 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC14.Text = "NA";
                    }
                    else
                    {
                        this.label_VC14.Invoke((<p0>, <p1>) => this.label_VC14.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num16 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num16 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC15.Text = "NA";
                    }
                    else
                    {
                        this.label_VC15.Invoke((<p0>, <p1>) => this.label_VC15.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num17 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num17 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC16.Text = "NA";
                    }
                    else
                    {
                        this.label_VC16.Invoke((<p0>, <p1>) => this.label_VC16.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num18 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num18 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC17.Text = "NA";
                    }
                    else
                    {
                        this.label_VC17.Invoke((<p0>, <p1>) => this.label_VC17.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num19 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num19 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC18.Text = "NA";
                    }
                    else
                    {
                        this.label_VC18.Invoke((<p0>, <p1>) => this.label_VC18.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num20 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num20 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC19.Text = "NA";
                    }
                    else
                    {
                        this.label_VC19.Invoke((<p0>, <p1>) => this.label_VC19.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num21 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num21 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC20.Text = "NA";
                    }
                    else
                    {
                        this.label_VC20.Invoke((<p0>, <p1>) => this.label_VC20.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num22 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num22 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC21.Text = "NA";
                    }
                    else
                    {
                        this.label_VC21.Invoke((<p0>, <p1>) => this.label_VC21.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num23 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num23 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC22.Text = "NA";
                    }
                    else
                    {
                        this.label_VC22.Invoke((<p0>, <p1>) => this.label_VC22.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num24 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num24 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC23.Text = "NA";
                    }
                    else
                    {
                        this.label_VC23.Invoke((<p0>, <p1>) => this.label_VC23.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num25 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num25 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC24.Text = "NA";
                    }
                    else
                    {
                        this.label_VC24.Invoke((<p0>, <p1>) => this.label_VC24.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num26 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num26 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC25.Text = "NA";
                    }
                    else
                    {
                        this.label_VC25.Invoke((<p0>, <p1>) => this.label_VC25.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num27 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num27 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC26.Text = "NA";
                    }
                    else
                    {
                        this.label_VC26.Invoke((<p0>, <p1>) => this.label_VC26.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num28 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num28 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC27.Text = "NA";
                    }
                    else
                    {
                        this.label_VC27.Invoke((<p0>, <p1>) => this.label_VC27.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num29 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num29 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC28.Text = "NA";
                    }
                    else
                    {
                        this.label_VC28.Invoke((<p0>, <p1>) => this.label_VC28.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num30 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num30 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC29.Text = "NA";
                    }
                    else
                    {
                        this.label_VC29.Invoke((<p0>, <p1>) => this.label_VC29.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num31 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num31 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC30.Text = "NA";
                    }
                    else
                    {
                        this.label_VC30.Invoke((<p0>, <p1>) => this.label_VC30.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num32 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num32 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC31.Text = "NA";
                    }
                    else
                    {
                        this.label_VC31.Invoke((<p0>, <p1>) => this.label_VC31.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num33 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = num33 + bydata[num2];
                    if (temp >= 0xea60)
                    {
                        this.label_VC32.Text = "NA";
                    }
                    else
                    {
                        this.label_VC32.Invoke((<p0>, <p1>) => this.label_VC32.Text = Convert.ToDouble((float) temp).ToString("0"));
                    }
                    this.label_Vcell_max.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Vcell_max.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0");
                    });
                    this.label_Vcell_min.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Vcell_min.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0");
                    });
                    this.label_Max_pos.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Max_pos.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0");
                    });
                    this.label_Min_pos.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Min_pos.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0");
                    });
                    this.label_V_delta.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_V_delta.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0");
                    });
                    this.label_Vbat.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Vbat.Text = Convert.ToDouble((float) (((float) (num1 + bydata[index])) / 100f)).ToString("0.0");
                    });
                    break;
                }
                case 0xd001:
                {
                    i = 3;
                    num2 = i;
                    i = num2 + 1;
                    int num34 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num34 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_Temp1.Text = "NA";
                    }
                    else
                    {
                        this.label_Temp1.Invoke((<p0>, <p1>) => this.label_Temp1.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num35 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num35 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_Temp2.Text = "NA";
                    }
                    else
                    {
                        this.label_Temp2.Invoke((<p0>, <p1>) => this.label_Temp2.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num36 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num36 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_Temp3.Text = "NA";
                    }
                    else
                    {
                        this.label_Temp3.Invoke((<p0>, <p1>) => this.label_Temp3.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num37 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num37 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_Temp4.Text = "NA";
                    }
                    else
                    {
                        this.label_Temp4.Invoke((<p0>, <p1>) => this.label_Temp4.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num38 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num38 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_Temp5.Text = "NA";
                    }
                    else
                    {
                        this.label_Temp5.Invoke((<p0>, <p1>) => this.label_Temp5.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num39 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num39 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_Temp6.Text = "NA";
                    }
                    else
                    {
                        this.label_Temp6.Invoke((<p0>, <p1>) => this.label_Temp6.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num40 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num40 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_TempEnv1.Text = "NA";
                    }
                    else
                    {
                        this.label_TempEnv1.Invoke((<p0>, <p1>) => this.label_TempEnv1.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num41 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num41 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_TempEnv2.Text = "NA";
                    }
                    else
                    {
                        this.label_TempEnv2.Invoke((<p0>, <p1>) => this.label_TempEnv2.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num42 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num42 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_TempEnv3.Text = "NA";
                    }
                    else
                    {
                        this.label_TempEnv3.Invoke((<p0>, <p1>) => this.label_TempEnv3.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num43 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num43 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_TempMos.Text = "NA";
                    }
                    else
                    {
                        this.label_TempMos.Invoke((<p0>, <p1>) => this.label_TempMos.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num44 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num44 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_TempMax.Text = "NA";
                    }
                    else
                    {
                        this.label_TempMax.Invoke((<p0>, <p1>) => this.label_TempMax.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    num2 = i;
                    i = num2 + 1;
                    int num45 = bydata[num2] * 0x100;
                    num2 = i;
                    i = num2 + 1;
                    temp = ((num45 + bydata[num2]) / 10) - 40;
                    if (temp <= -30)
                    {
                        this.label_TempMin.Text = "NA";
                    }
                    else
                    {
                        this.label_TempMin.Invoke((<p0>, <p1>) => this.label_TempMin.Text = Convert.ToDouble((float) temp).ToString("0.0"));
                    }
                    this.label_Ichg.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Ichg.Text = Convert.ToDouble((float) (((float) (num1 + bydata[index])) / 10f)).ToString("0.0");
                    });
                    this.label_Idsg.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Idsg.Text = Convert.ToDouble((float) (((float) (num1 + bydata[index])) / 10f)).ToString("0.0");
                    });
                    this.label_SOC.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_SOC.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0.0");
                    });
                    this.label_SOH.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_SOH.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0.0");
                    });
                    this.label_Present_mAh.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Present_mAh.Text = Convert.ToDouble((float) ((num1 + bydata[index]) * 10f)).ToString("0");
                    });
                    this.label_Full_mAh.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Full_mAh.Text = Convert.ToDouble((float) ((num1 + bydata[index]) * 10f)).ToString("0");
                    });
                    this.label_Factory_mAh.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_Factory_mAh.Text = Convert.ToDouble((float) ((num1 + bydata[index]) * 10f)).ToString("0");
                    });
                    this.label_CycleTimes.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        int num1 = bydata[index] * 0x100;
                        index = i;
                        i = index + 1;
                        this.label_CycleTimes.Text = Convert.ToDouble((float) (num1 + bydata[index])).ToString("0");
                    });
                    if (((bydata[i] * 0x100) + bydata[i + 1]) != 0)
                    {
                        this.label_Fault_First.Invoke((<p0>, <p1>) => this.label_Fault_First.Text = Convert.ToDouble((float) 1f).ToString("0"));
                    }
                    else
                    {
                        this.label_Fault_First.Invoke((<p0>, <p1>) => this.label_Fault_First.Text = Convert.ToDouble((float) 0f).ToString("0"));
                    }
                    this.label_Vcell_OV_First.Invoke((<p0>, <p1>) => this.label_Vcell_OV_First.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_Vcell_UV_First.Invoke((<p0>, <p1>) => this.label_Vcell_UV_First.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_Vbat_OV_First.Invoke((<p0>, <p1>) => this.label_Vbat_OV_First.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_Vbat_UV_First.Invoke((<p0>, <p1>) => this.label_Vbat_UV_First.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_CHG_OC_First.Invoke((<p0>, <p1>) => this.label_CHG_OC_First.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_DSG_OC_First.Invoke((<p0>, <p1>) => this.label_DSG_OC_First.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_Cellchg_OT_First.Invoke((<p0>, <p1>) => this.label_Cellchg_OT_First.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.label_Celldsg_OT_First.Invoke((<p0>, <p1>) => this.label_Celldsg_OT_First.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    this.label_Cellchg_UT_First.Invoke((<p0>, <p1>) => this.label_Cellchg_UT_First.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_Celldsg_UT_First.Invoke((<p0>, <p1>) => this.label_Celldsg_UT_First.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_Vdelta_Op_First.Invoke((<p0>, <p1>) => this.label_Vdelta_Op_First.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.label_Res_First.Invoke((<p0>, <p1>) => this.label_Res_First.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.label_Soc_Up_First.Invoke((<p0>, <p1>) => this.label_Soc_Up_First.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.label_Tmos_OTP_First.Invoke((<p0>, <p1>) => this.label_Tmos_OTP_First.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    i++;
                    i++;
                    if (((bydata[i] * 0x100) + bydata[i + 1]) != 0)
                    {
                        this.label_Fault_Second.Invoke((<p0>, <p1>) => this.label_Fault_Second.Text = Convert.ToDouble((float) 1f).ToString("0"));
                    }
                    else
                    {
                        this.label_Fault_Second.Invoke((<p0>, <p1>) => this.label_Fault_Second.Text = Convert.ToDouble((float) 0f).ToString("0"));
                    }
                    this.label_Vcell_OV_Second.Invoke((<p0>, <p1>) => this.label_Vcell_OV_Second.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_Vcell_UV_Second.Invoke((<p0>, <p1>) => this.label_Vcell_UV_Second.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_Vbat_OV_Second.Invoke((<p0>, <p1>) => this.label_Vbat_OV_Second.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_Vbat_UV_Second.Invoke((<p0>, <p1>) => this.label_Vbat_UV_Second.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_CHG_OC_Second.Invoke((<p0>, <p1>) => this.label_CHG_OC_Second.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_DSG_OC_Second.Invoke((<p0>, <p1>) => this.label_DSG_OC_Second.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_Cellchg_OT_Second.Invoke((<p0>, <p1>) => this.label_Cellchg_OT_Second.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.label_Celldsg_OT_Second.Invoke((<p0>, <p1>) => this.label_Celldsg_OT_Second.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    this.label_Cellchg_UT_Second.Invoke((<p0>, <p1>) => this.label_Cellchg_UT_Second.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_Celldsg_UT_Second.Invoke((<p0>, <p1>) => this.label_Celldsg_UT_Second.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_Vdelta_Op_Second.Invoke((<p0>, <p1>) => this.label_Vdelta_Op_Second.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.label_Res_Second.Invoke((<p0>, <p1>) => this.label_Res_Second.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.label_Soc_Up_Second.Invoke((<p0>, <p1>) => this.label_Soc_Up_Second.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.label_Tmos_OTP_Second.Invoke((<p0>, <p1>) => this.label_Tmos_OTP_Second.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    i++;
                    i++;
                    if (((bydata[i] * 0x100) + bydata[i + 1]) != 0)
                    {
                        this.label_Fault_Third.Invoke((<p0>, <p1>) => this.label_Fault_Third.Text = Convert.ToDouble((float) 1f).ToString("0"));
                    }
                    else
                    {
                        this.label_Fault_Third.Invoke((<p0>, <p1>) => this.label_Fault_Third.Text = Convert.ToDouble((float) 0f).ToString("0"));
                    }
                    this.label_Vcell_OV_Third.Invoke((<p0>, <p1>) => this.label_Vcell_OV_Third.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_Vcell_UV_Third.Invoke((<p0>, <p1>) => this.label_Vcell_UV_Third.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_Vbat_OV_Third.Invoke((<p0>, <p1>) => this.label_Vbat_OV_Third.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_Vbat_UV_Third.Invoke((<p0>, <p1>) => this.label_Vbat_UV_Third.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_CHG_OC_Third.Invoke((<p0>, <p1>) => this.label_CHG_OC_Third.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_DSG_OC_Third.Invoke((<p0>, <p1>) => this.label_DSG_OC_Third.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_Cellchg_OT_Third.Invoke((<p0>, <p1>) => this.label_Cellchg_OT_Third.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.label_Celldsg_OT_Third.Invoke((<p0>, <p1>) => this.label_Celldsg_OT_Third.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    this.label_Cellchg_UT_Third.Invoke((<p0>, <p1>) => this.label_Cellchg_UT_Third.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_Celldsg_UT_Third.Invoke((<p0>, <p1>) => this.label_Celldsg_UT_Third.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_Vdelta_Op_Third.Invoke((<p0>, <p1>) => this.label_Vdelta_Op_Third.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.label_Res_Third.Invoke((<p0>, <p1>) => this.label_Res_Third.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.label_Soc_Up_Third.Invoke((<p0>, <p1>) => this.label_Soc_Up_Third.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.label_Tmos_OTP_Third.Invoke((<p0>, <p1>) => this.label_Tmos_OTP_Third.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    i++;
                    i++;
                    this.Balanced_VC1.Invoke((<p0>, <p1>) => this.Balanced_VC1.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.Balanced_VC2.Invoke((<p0>, <p1>) => this.Balanced_VC2.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.Balanced_VC3.Invoke((<p0>, <p1>) => this.Balanced_VC3.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.Balanced_VC4.Invoke((<p0>, <p1>) => this.Balanced_VC4.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.Balanced_VC5.Invoke((<p0>, <p1>) => this.Balanced_VC5.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.Balanced_VC6.Invoke((<p0>, <p1>) => this.Balanced_VC6.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.Balanced_VC7.Invoke((<p0>, <p1>) => this.Balanced_VC7.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.Balanced_VC8.Invoke((<p0>, <p1>) => this.Balanced_VC8.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    this.Balanced_VC9.Invoke((<p0>, <p1>) => this.Balanced_VC9.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.Balanced_VC10.Invoke((<p0>, <p1>) => this.Balanced_VC10.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.Balanced_VC11.Invoke((<p0>, <p1>) => this.Balanced_VC11.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.Balanced_VC12.Invoke((<p0>, <p1>) => this.Balanced_VC12.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.Balanced_VC13.Invoke((<p0>, <p1>) => this.Balanced_VC13.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.Balanced_VC14.Invoke((<p0>, <p1>) => this.Balanced_VC14.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    this.Balanced_VC15.Invoke((<p0>, <p1>) => this.Balanced_VC15.Text = Convert.ToDouble((float) ((bydata[i] >> 6) & 1)).ToString("0"));
                    this.Balanced_VC16.Invoke((<p0>, <p1>) => this.Balanced_VC16.Text = Convert.ToDouble((float) ((bydata[i] >> 7) & 1)).ToString("0"));
                    i++;
                    i++;
                    this.Balanced_VC17.Invoke((<p0>, <p1>) => this.Balanced_VC17.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.Balanced_VC18.Invoke((<p0>, <p1>) => this.Balanced_VC18.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.Balanced_VC19.Invoke((<p0>, <p1>) => this.Balanced_VC19.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.Balanced_VC20.Invoke((<p0>, <p1>) => this.Balanced_VC20.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.Balanced_VC21.Invoke((<p0>, <p1>) => this.Balanced_VC21.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.Balanced_VC22.Invoke((<p0>, <p1>) => this.Balanced_VC22.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.Balanced_VC23.Invoke((<p0>, <p1>) => this.Balanced_VC23.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.Balanced_VC24.Invoke((<p0>, <p1>) => this.Balanced_VC24.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    this.Balanced_VC25.Invoke((<p0>, <p1>) => this.Balanced_VC25.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.Balanced_VC26.Invoke((<p0>, <p1>) => this.Balanced_VC26.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.Balanced_VC27.Invoke((<p0>, <p1>) => this.Balanced_VC27.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.Balanced_VC28.Invoke((<p0>, <p1>) => this.Balanced_VC28.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.Balanced_VC29.Invoke((<p0>, <p1>) => this.Balanced_VC29.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.Balanced_VC30.Invoke((<p0>, <p1>) => this.Balanced_VC30.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    this.Balanced_VC31.Invoke((<p0>, <p1>) => this.Balanced_VC31.Text = Convert.ToDouble((float) ((bydata[i] >> 6) & 1)).ToString("0"));
                    this.Balanced_VC32.Invoke((<p0>, <p1>) => this.Balanced_VC32.Text = Convert.ToDouble((float) ((bydata[i] >> 7) & 1)).ToString("0"));
                    break;
                }
                case 0xd002:
                    i = 3;
                    num2 = i;
                    i = num2 + 1;
                    this.toolStripLabel_RTC_year.Text = Convert.ToString(bydata[num2]);
                    num2 = i;
                    i = num2 + 1;
                    this.toolStripLabel_RTC_month.Text = Convert.ToString(bydata[num2]);
                    num2 = i;
                    i = num2 + 1;
                    this.toolStripLabel_RTC_day.Text = Convert.ToString(bydata[num2]);
                    num2 = i;
                    i = num2 + 1;
                    this.toolStripLabel_RTC_hour.Text = Convert.ToString(bydata[num2]);
                    num2 = i;
                    i = num2 + 1;
                    this.toolStripLabel_RTC_minute.Text = Convert.ToString(bydata[num2]);
                    num2 = i;
                    i = num2 + 1;
                    this.toolStripLabel_RTC_second.Text = Convert.ToString(bydata[num2]);
                    this.textBox_Fault_First1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_First1.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_First2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_First2.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_First3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_First3.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_First4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_First4.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Second1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Second1.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Second2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Second2.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Second3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Second3.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Second4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Second4.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Third1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Third1.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Third2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Third2.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Third3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Third3.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.textBox_Fault_Third4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.textBox_Fault_Third4.Text = this.FaultWarnName[bydata[index]];
                    });
                    this.label_Err_AFE1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_AFE1.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_AFE2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_AFE2.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Can.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Can.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_E2P_COM.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_E2P_COM.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_SPI.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_SPI.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Upper.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Upper.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Client1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Client1.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Screen.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Screen.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Wifi.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Wifi.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_BlueTooth.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_BlueTooth.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_App.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_App.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_CBC.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_CBC.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_E2P_Store.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_E2P_Store.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_HSE.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_HSE.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_LSE.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_LSE.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Flash.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Flash.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Balanced.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Balanced.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_ADC.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_ADC.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Res1.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Res1.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Res2.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Res2.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Res3.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Res3.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Res4.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Res4.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Res5.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Res5.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    this.label_Err_Res6.Invoke(delegate (object <p0>, EventArgs <p1>) {
                        int index = i;
                        i = index + 1;
                        this.label_Err_Res6.Text = Convert.ToDouble((float) bydata[index]).ToString("0");
                    });
                    break;

                case 0xd003:
                    i = 3;
                    this.label_SysStatus_Heat.Invoke((<p0>, <p1>) => this.label_SysStatus_Heat.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_SysStatus_Cool.Invoke((<p0>, <p1>) => this.label_SysStatus_Cool.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_SysStatus_AFE1.Invoke((<p0>, <p1>) => this.label_SysStatus_AFE1.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.label_SysStatus_AFE2.Invoke((<p0>, <p1>) => this.label_SysStatus_AFE2.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.label_SysStatus_Balance.Invoke((<p0>, <p1>) => this.label_SysStatus_Balance.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.label_SysStatus_ToSleep.Invoke((<p0>, <p1>) => this.label_SysStatus_ToSleep.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    this.label_SysStatus_Res1.Invoke((<p0>, <p1>) => this.label_SysStatus_Res1.Text = Convert.ToDouble((float) ((bydata[i] >> 6) & 1)).ToString("0"));
                    this.label_SysStatus_Res2.Invoke((<p0>, <p1>) => this.label_SysStatus_Res2.Text = Convert.ToDouble((float) ((bydata[i] >> 7) & 1)).ToString("0"));
                    this.label_SysStatus_BMS_StartUp.Invoke((<p0>, <p1>) => this.label_SysStatus_BMS_StartUp.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_SysStatus_Pre_MOS.Invoke((<p0>, <p1>) => this.label_SysStatus_Pre_MOS.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_SysStatus_CHG_MOS.Invoke((<p0>, <p1>) => this.label_SysStatus_CHG_MOS.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_SysStatus_DSG_MOS.Invoke((<p0>, <p1>) => this.label_SysStatus_DSG_MOS.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_SysStatus_Pre_Relay.Invoke((<p0>, <p1>) => this.label_SysStatus_Pre_Relay.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_SysStatus_CHG_Relay.Invoke((<p0>, <p1>) => this.label_SysStatus_CHG_Relay.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_SysStatus_DSG_Relay.Invoke((<p0>, <p1>) => this.label_SysStatus_DSG_Relay.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.label_SysStatus_Main_Relay.Invoke((<p0>, <p1>) => this.label_SysStatus_Main_Relay.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    i++;
                    i++;
                    this.label_SysStatus_Res3.Invoke((<p0>, <p1>) => this.label_SysStatus_Res3.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_SysStatus_Res4.Invoke((<p0>, <p1>) => this.label_SysStatus_Res4.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_SysStatus_Res5.Invoke((<p0>, <p1>) => this.label_SysStatus_Res5.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_SysStatus_Res6.Invoke((<p0>, <p1>) => this.label_SysStatus_Res6.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_SysStatus_Res7.Invoke((<p0>, <p1>) => this.label_SysStatus_Res7.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    i++;
                    i++;
                    this.label_AFE2_Func_Status.Invoke((<p0>, <p1>) => this.label_AFE2_Func_Status.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_Sleep_Func_Status.Invoke((<p0>, <p1>) => this.label_Sleep_Func_Status.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_Balance_Func_Status.Invoke((<p0>, <p1>) => this.label_Balance_Func_Status.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_BMS_Source_Func_Status.Invoke((<p0>, <p1>) => this.label_BMS_Source_Func_Status.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_MosRelay_Func_Status.Invoke((<p0>, <p1>) => this.label_MosRelay_Func_Status.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_Relay_Func_Status.Invoke((<p0>, <p1>) => this.label_Relay_Func_Status.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_SocFixed_Func_Status.Invoke((<p0>, <p1>) => this.label_SocFixed_Func_Status.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_Heated_Func_Status.Invoke((<p0>, <p1>) => this.label_Heated_Func_Status.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_Cool_Func_Status.Invoke((<p0>, <p1>) => this.label_Cool_Func_Status.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.label_AFE1_Func_Status.Invoke((<p0>, <p1>) => this.label_AFE1_Func_Status.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    i++;
                    i++;
                    i++;
                    i++;
                    this.label_Switch9.Invoke((<p0>, <p1>) => this.label_Switch9.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_Switch10.Invoke((<p0>, <p1>) => this.label_Switch10.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_Switch11.Invoke((<p0>, <p1>) => this.label_Switch11.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.label_Switch12.Invoke((<p0>, <p1>) => this.label_Switch12.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.label_Switch13.Invoke((<p0>, <p1>) => this.label_Switch13.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.label_Switch14.Invoke((<p0>, <p1>) => this.label_Switch14.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    this.label_Switch15.Invoke((<p0>, <p1>) => this.label_Switch15.Text = Convert.ToDouble((float) ((bydata[i] >> 6) & 1)).ToString("0"));
                    this.label_Switch16.Invoke((<p0>, <p1>) => this.label_Switch16.Text = Convert.ToDouble((float) ((bydata[i] >> 7) & 1)).ToString("0"));
                    this.label_Switch1.Invoke((<p0>, <p1>) => this.label_Switch1.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_Switch2.Invoke((<p0>, <p1>) => this.label_Switch2.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_Switch3.Invoke((<p0>, <p1>) => this.label_Switch3.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_Switch4.Invoke((<p0>, <p1>) => this.label_Switch4.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_Switch5.Invoke((<p0>, <p1>) => this.label_Switch5.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_Switch6.Invoke((<p0>, <p1>) => this.label_Switch6.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_Switch7.Invoke((<p0>, <p1>) => this.label_Switch7.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.label_Switch8.Invoke((<p0>, <p1>) => this.label_Switch8.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    i++;
                    i++;
                    this.label_Switch25.Invoke((<p0>, <p1>) => this.label_Switch25.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_Switch26.Invoke((<p0>, <p1>) => this.label_Switch26.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_Switch27.Invoke((<p0>, <p1>) => this.label_Switch27.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.label_Switch28.Invoke((<p0>, <p1>) => this.label_Switch28.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.label_Switch29.Invoke((<p0>, <p1>) => this.label_Switch29.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.label_Switch30.Invoke((<p0>, <p1>) => this.label_Switch30.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    this.label_Switch31.Invoke((<p0>, <p1>) => this.label_Switch31.Text = Convert.ToDouble((float) ((bydata[i] >> 6) & 1)).ToString("0"));
                    this.label_Switch32.Invoke((<p0>, <p1>) => this.label_Switch32.Text = Convert.ToDouble((float) ((bydata[i] >> 7) & 1)).ToString("0"));
                    this.label_Switch17.Invoke((<p0>, <p1>) => this.label_Switch17.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_Switch18.Invoke((<p0>, <p1>) => this.label_Switch18.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_Switch19.Invoke((<p0>, <p1>) => this.label_Switch19.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_Switch20.Invoke((<p0>, <p1>) => this.label_Switch20.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_Switch21.Invoke((<p0>, <p1>) => this.label_Switch21.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_Switch22.Invoke((<p0>, <p1>) => this.label_Switch22.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_Switch23.Invoke((<p0>, <p1>) => this.label_Switch23.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    this.label_Switch24.Invoke((<p0>, <p1>) => this.label_Switch24.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 7) & 1)).ToString("0"));
                    i++;
                    i++;
                    if (((bydata[i] & 0xf7) == 0) && ((bydata[i + 1] & 0xf7) == 0))
                    {
                        this.label_HeatCoolErr.Invoke((<p0>, <p1>) => this.label_HeatCoolErr.Text = Convert.ToDouble(0).ToString("0"));
                    }
                    else
                    {
                        this.label_HeatCoolErr.Invoke((<p0>, <p1>) => this.label_HeatCoolErr.Text = Convert.ToDouble(1).ToString("0"));
                    }
                    this.label_Cool_Open.Invoke((<p0>, <p1>) => this.label_Cool_Open.Text = Convert.ToDouble((float) (bydata[i] & 1)).ToString("0"));
                    this.label_Cool_OverT.Invoke((<p0>, <p1>) => this.label_Cool_OverT.Text = Convert.ToDouble((float) ((bydata[i] >> 1) & 1)).ToString("0"));
                    this.label_Cool_Short.Invoke((<p0>, <p1>) => this.label_Cool_Short.Text = Convert.ToDouble((float) ((bydata[i] >> 2) & 1)).ToString("0"));
                    this.label_Cool_Normal.Invoke((<p0>, <p1>) => this.label_Cool_Normal.Text = Convert.ToDouble((float) ((bydata[i] >> 3) & 1)).ToString("0"));
                    this.label_Cool_Res1.Invoke((<p0>, <p1>) => this.label_Cool_Res1.Text = Convert.ToDouble((float) ((bydata[i] >> 4) & 1)).ToString("0"));
                    this.label_Cool_Res2.Invoke((<p0>, <p1>) => this.label_Cool_Res2.Text = Convert.ToDouble((float) ((bydata[i] >> 5) & 1)).ToString("0"));
                    this.label_Cool_Res3.Invoke((<p0>, <p1>) => this.label_Cool_Res3.Text = Convert.ToDouble((float) ((bydata[i] >> 6) & 1)).ToString("0"));
                    this.label_Heat_Open.Invoke((<p0>, <p1>) => this.label_Heat_Open.Text = Convert.ToDouble((float) (bydata[i + 1] & 1)).ToString("0"));
                    this.label_Heat_OverT.Invoke((<p0>, <p1>) => this.label_Heat_OverT.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 1) & 1)).ToString("0"));
                    this.label_Heat_Short.Invoke((<p0>, <p1>) => this.label_Heat_Short.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 2) & 1)).ToString("0"));
                    this.label_Heat_Normal.Invoke((<p0>, <p1>) => this.label_Heat_Normal.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 3) & 1)).ToString("0"));
                    this.label_Heat_Res1.Invoke((<p0>, <p1>) => this.label_Heat_Res1.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 4) & 1)).ToString("0"));
                    this.label_Heat_Res2.Invoke((<p0>, <p1>) => this.label_Heat_Res2.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 5) & 1)).ToString("0"));
                    this.label_Heat_Res3.Invoke((<p0>, <p1>) => this.label_Heat_Res3.Text = Convert.ToDouble((float) ((bydata[i + 1] >> 6) & 1)).ToString("0"));
                    break;

                default:
                    break;
            }
            this.u16RdRunInfoRxCnt++;
            if (this.bIsEng == 0)
            {
                this.toolStripLabel_RxCnt1.Text = "接收次数：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt2.Text = "接收次数：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt3.Text = "接收次数：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt4.Text = "接收次数：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt5.Text = "接收次数：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt6.Text = "接收次数：" + Convert.ToString(this.u16RdRunInfoRxCnt);
            }
            else
            {
                this.toolStripLabel_RxCnt1.Text = "Received Counts：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt2.Text = "Received Counts：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt3.Text = "Received Counts：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt4.Text = "Received Counts：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt5.Text = "Received Counts：" + Convert.ToString(this.u16RdRunInfoRxCnt);
                this.toolStripLabel_RxCnt6.Text = "Received Counts：" + Convert.ToString(this.u16RdRunInfoRxCnt);
            }
        }

        private void RxWrRegAck(byte[] bydata)
        {
            if (bydata[1] == 0x86)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("写入有误！错误码： " + Convert.ToString(bydata[2]), "错误！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    MessageBox.Show("Written Error！Error Code： " + Convert.ToString(bydata[2]), "Error！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                this.timer1.Enabled = true;
            }
            else
            {
                ushort num = this.u16Rs485RegAddr;
                switch (num)
                {
                    case 0x1000:
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("校准参数复位成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            return;
                        }
                        MessageBox.Show("Calibrating parameters reset successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        return;

                    case 0x1001:
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("当前保护记录清零成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            return;
                        }
                        MessageBox.Show("Protect records cleared successfully！", "SuccessMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        return;

                    case 0x1002:
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("保护参数复位成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            return;
                        }
                        MessageBox.Show("Protective parameters reset successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        return;

                    case 0x1003:
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("其它参数复位成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            return;
                        }
                        MessageBox.Show("Other parameters reset successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        return;

                    case 0x1004:
                        MessageBox.Show("加热冷凝点复位成功!", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        return;
                }
                switch (num)
                {
                    case 0x1100:
                    case 0x1101:
                    case 0x1102:
                    case 0x1103:
                        break;

                    default:
                        if (this.bIsEng != 0)
                        {
                            MessageBox.Show("Mission Failed！", "ErrorMessage！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            break;
                        }
                        MessageBox.Show("操作错误！", "错误信息！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                        return;
                }
            }
        }

        private void RxWrRegsAck(byte[] bydata)
        {
            if (bydata[1] == 0x90)
            {
                switch (this.u16Rs485RegAddr)
                {
                    case 0xfffd:
                        if (this.bIsEng == 0)
                        {
                            this.textBox_upgrate_window.AppendText("设备连接失败！\n");
                            return;
                        }
                        this.textBox_upgrate_window.AppendText("MCU connect failed！\n");
                        return;

                    case 0xfffe:
                        this.textBox_upgrate_window.AppendText("升级过程出错...\n");
                        this.CountCnt = 0;
                        this.length = 0;
                        return;

                    case 0xffff:
                        this.textBox_upgrate_window.AppendText("升级过程出错...\n");
                        this.CountCnt = 0;
                        this.length = 0;
                        return;
                }
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("参数写入有误！错误码： " + Convert.ToString(bydata[2]), "错误！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                    return;
                }
                MessageBox.Show("Parameters written errror！Error Code： " + Convert.ToString(bydata[2]), "Error！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                return;
            }
            ushort num = this.u16Rs485RegAddr;
            if (num > 0x222c)
            {
                if (num <= 0x2238)
                {
                    if (num == 0x2230)
                    {
                        if (this.bAddElement != 1)
                        {
                            if (this.bIsEng == 0)
                            {
                                MessageBox.Show("加热参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                            else
                            {
                                MessageBox.Show("Heating parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                        }
                        this.bAddElement = 0;
                        return;
                    }
                    if (num == 0x2234)
                    {
                        if (this.bAddElement != 1)
                        {
                            if (this.bIsEng == 0)
                            {
                                MessageBox.Show("SOC保护参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                            else
                            {
                                MessageBox.Show("SOC protective parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                        }
                        this.bAddElement = 0;
                        return;
                    }
                    if (num == 0x2238)
                    {
                        if (this.bAddElement != 1)
                        {
                            if (this.bIsEng == 0)
                            {
                                MessageBox.Show("压差过大保护参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                            else
                            {
                                MessageBox.Show("Delta over protective parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                        }
                        this.bAddElement = 0;
                        return;
                    }
                }
                else if (num <= 0x2300)
                {
                    if (num == 0x223c)
                    {
                        if (this.bAddElement != 1)
                        {
                            if (this.bIsEng == 0)
                            {
                                MessageBox.Show("休眠保护参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                            else
                            {
                                MessageBox.Show("Hibernate protective parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                        }
                        this.bAddElement = 0;
                        return;
                    }
                    if (num == 0x2300)
                    {
                        if (this.bOtherElement != 1)
                        {
                            if (this.bIsEng == 0)
                            {
                                MessageBox.Show("参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                            else
                            {
                                MessageBox.Show("Parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                        }
                        this.bOtherElement = 0;
                        return;
                    }
                }
                else
                {
                    if (num == 0x2304)
                    {
                        if (this.bOtherElement != 1)
                        {
                            if (this.bIsEng == 0)
                            {
                                MessageBox.Show("SOC参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                            else
                            {
                                MessageBox.Show("SOC parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            }
                        }
                        this.bOtherElement = 0;
                        return;
                    }
                    switch (num)
                    {
                        case 0xfffd:
                            if (this.bIsEng == 0)
                            {
                                this.textBox_upgrate_window.AppendText("设备连接成功！\n");
                            }
                            else
                            {
                                this.textBox_upgrate_window.AppendText("MCU connect OK！\n");
                            }
                            this.button_upgrate_begin.Enabled = true;
                            return;

                        case 0xfffe:
                            if (this.progressBar_upgrate.Value == 100)
                            {
                                this.FlashUpgrateComplete();
                                return;
                            }
                            if (this.CountCnt == 0)
                            {
                                this.textBox_upgrate_window.AppendText("正在升级程序...\n");
                                this.button_upgrate_begin.Enabled = false;
                                this.button_upgrate_connect.Enabled = false;
                            }
                            this.CountCnt++;
                            this.FlashUpgrate();
                            return;

                        case 0xffff:
                            this.textBox_upgrate_window.AppendText("程序升级完成\n");
                            this.button_upgrate_begin.Enabled = true;
                            this.button_upgrate_connect.Enabled = true;
                            this.CountCnt = 0;
                            this.length = 0;
                            MessageBox.Show("升级成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            return;

                        default:
                            break;
                    }
                }
                goto TR_000B;
            }
            else
            {
                if (num > 0x220d)
                {
                    if (num > 0x2221)
                    {
                        if (num == 0x2225)
                        {
                            goto TR_0016;
                        }
                        else if (num == 0x222c)
                        {
                            if (this.bAddElement != 1)
                            {
                                if (this.bIsEng == 0)
                                {
                                    MessageBox.Show("均衡参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                                }
                                else
                                {
                                    MessageBox.Show("Balancing parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                                }
                            }
                            this.bAddElement = 0;
                            return;
                        }
                    }
                    else if ((num == 0x2218) || (num == 0x2221))
                    {
                        goto TR_0016;
                    }
                }
                else if ((num == 0x2200) || ((num == 0x2209) || (num == 0x220d)))
                {
                    if (this.bProtectElement != 1)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("保护参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        }
                        else
                        {
                            MessageBox.Show("Protective parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        }
                    }
                    this.bProtectElement = 0;
                    return;
                }
                goto TR_000B;
            }
            goto TR_0016;
        TR_000B:
            if (this.bIsEng == 0)
            {
                MessageBox.Show("参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                return;
            }
            MessageBox.Show("Parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            return;
        TR_0016:
            if (this.bWarnElement != 1)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("预警参数写入成功！", "提示信息！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                }
                else
                {
                    MessageBox.Show("Warning parameters written successfully！", "SuccessfullyMessage！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                }
            }
            this.bWarnElement = 0;
        }

        private void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)
        {
            try
            {
                int bytesToRead = this.serialPort1.BytesToRead;
                byte[] buffer = new byte[bytesToRead];
                int num3 = 0;
                num3 = this.serialPort1.Read(buffer, 0, bytesToRead);
                int index = 0;
                while (true)
                {
                    byte bRxByteCnt;
                    if (index < num3)
                    {
                        bRxByteCnt = this.bRxByteCnt;
                        this.bRxByteCnt = (byte) (bRxByteCnt + 1);
                        this.bRxDataBuff[bRxByteCnt] = buffer[index];
                        index++;
                        continue;
                    }
                    if ((this.bRxDataBuff[0] != this.bRs485Addr) && (this.bRxDataBuff[0] != 0))
                    {
                        this.bRxByteCnt = 0;
                    }
                    else
                    {
                        bRxByteCnt = this.bRs485FunCmd;
                        if (bRxByteCnt == 3)
                        {
                            if (this.bRxByteCnt >= 2)
                            {
                                if (this.bRxDataBuff[1] == this.bRs485FunCmd)
                                {
                                    if (this.bRxByteCnt >= 3)
                                    {
                                        this.bTotleBytes = (byte) (this.bRxDataBuff[2] + 5);
                                        if (this.bRxByteCnt == this.bTotleBytes)
                                        {
                                            this.bRxFrameFinishFlag = true;
                                            this.bRxByteCnt = 0;
                                        }
                                    }
                                }
                                else if (this.bRxDataBuff[1] != (this.bRs485FunCmd | 0x80))
                                {
                                    this.bRxByteCnt = 0;
                                }
                                else if (this.bRxByteCnt >= 5)
                                {
                                    this.bRxFrameFinishFlag = true;
                                    this.bTotleBytes = this.bRxByteCnt;
                                    this.bRxByteCnt = 0;
                                }
                            }
                        }
                        else if ((bRxByteCnt != 6) && (bRxByteCnt != 0x10))
                        {
                            this.bRxByteCnt = 0;
                        }
                        else if (this.bRxByteCnt >= 2)
                        {
                            if (this.bRxDataBuff[1] == this.bRs485FunCmd)
                            {
                                if (this.bRxByteCnt >= 8)
                                {
                                    this.bRxFrameFinishFlag = true;
                                    this.bTotleBytes = this.bRxByteCnt;
                                    this.bRxByteCnt = 0;
                                }
                            }
                            else if (this.bRxDataBuff[1] != (this.bRs485FunCmd | 0x80))
                            {
                                this.bRxByteCnt = 0;
                            }
                            else if (this.bRxByteCnt >= 5)
                            {
                                this.bRxFrameFinishFlag = true;
                                this.bTotleBytes = this.bRxByteCnt;
                                this.bRxByteCnt = 0;
                            }
                        }
                    }
                    if (!this.bRxFrameFinishFlag)
                    {
                        goto TR_0000;
                    }
                    else
                    {
                        byte lenth = (byte) (this.bTotleBytes - 2);
                        if (!this.Calculate_Sum_Rx(ref this.bRxDataBuff, lenth))
                        {
                            if (this.bIsEng == 0)
                            {
                                MessageBox.Show("操作不成功，接收数据校验错误！", "错误！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            else
                            {
                                MessageBox.Show("Mission Failed，Received data validation error！", "Error！", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                            }
                            goto TR_0001;
                        }
                        else
                        {
                            lenth = (byte) (this.bRxDataBuff[1] & 0xff);
                            if (lenth > 0x10)
                            {
                                if (lenth != 0x83)
                                {
                                    if (lenth == 0x86)
                                    {
                                        break;
                                    }
                                    if (lenth != 0x90)
                                    {
                                        goto TR_0001;
                                    }
                                    goto TR_0002;
                                }
                            }
                            else if (lenth != 3)
                            {
                                if (lenth == 6)
                                {
                                    break;
                                }
                                if (lenth != 0x10)
                                {
                                    goto TR_0001;
                                }
                                goto TR_0002;
                            }
                            if (this.timer1.Enabled)
                            {
                                this.RxRdRunInfoAck(this.bRxDataBuff);
                            }
                            else
                            {
                                this.RxRdRegAck(this.bRxDataBuff);
                            }
                            goto TR_0001;
                        }
                    }
                    break;
                }
                this.RxWrRegAck(this.bRxDataBuff);
            TR_0001:
                this.bRxFrameFinishFlag = false;
                goto TR_0000;
            TR_0002:
                this.RxWrRegsAck(this.bRxDataBuff);
                goto TR_0001;
            }
            catch (Exception)
            {
            }
        TR_0000:
            this.serialPort1.DiscardInBuffer();
        }

        public void Switch_High_Call()
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1100;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        public void Switch_Low_Call()
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1101;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        public void System_Function_OFF_Call()
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1103;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        public void System_Function_ON_Call()
        {
            byte[] data = new byte[] { 1, 1, 8, 1, 0, 0, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 6;
                    this.u16Rs485RegAddr = 0x1102;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegData / 0x100);
                    data[5] = (byte) (this.u16Rs485RegData % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void tabControl1_SelectedIndexChanged(object sender, EventArgs e)
        {
            if ((this.tabControl1.SelectedIndex != 0) && (this.tabControl1.SelectedIndex != 1))
            {
                this.timer1.Enabled = false;
            }
            else
            {
                this.timer1.Enabled = true;
            }
        }

        private void textBox_Soc_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_Soc_Ah.Text = "";
            this.textBox_Soc_CycleTime.Text = "";
            this.textBox_Soc_TabelSelect.Text = "";
            this.textBox_Soc_Res2.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x2318;
                    this.u16Rs485RegNum = 4;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void textBox_Soc_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_Soc_Ah.Text == "") || ((this.textBox_Soc_CycleTime.Text == "") || ((this.textBox_Soc_TabelSelect.Text == "") || (this.textBox_Soc_Res2.Text == ""))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_Soc_Ah.Text);
                float num2 = float.Parse(this.textBox_Soc_CycleTime.Text);
                float num3 = float.Parse(this.textBox_Soc_TabelSelect.Text);
                float num4 = float.Parse(this.textBox_Soc_Res2.Text);
                if ((num > 650f) || (num < 0.1))
                {
                    MessageBox.Show("电池容量范围为0.1 - 650Ah，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num2 > 50000f) || (num2 < 1f))
                {
                    MessageBox.Show("电池循环次数范围为1 - 50000次，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num3 > 50000f) || (num3 < 0f))
                {
                    MessageBox.Show("Soc表格选择范围为0 - 50000，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num4 > 50000f) || (num4 < 0f))
                {
                    MessageBox.Show("0-50000，预留，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num5 = (ushort) (float.Parse(this.textBox_Soc_Ah.Text) * 10f);
                    ushort num6 = (ushort) float.Parse(this.textBox_Soc_CycleTime.Text);
                    ushort num7 = (ushort) float.Parse(this.textBox_Soc_TabelSelect.Text);
                    ushort num8 = (ushort) float.Parse(this.textBox_Soc_Res2.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x2318;
                        this.u16Rs485RegNum = 4;
                        this.bRs485ByteNum = 8;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num10 = (byte) (index + 1);
                        data[num10] = this.bRs485FunCmd;
                        byte num11 = (byte) (num10 + 1);
                        data[num11] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num12 = (byte) (num11 + 1);
                        data[num12] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num13 = (byte) (num12 + 1);
                        data[num13] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num14 = (byte) (num13 + 1);
                        data[num14] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num15 = (byte) (num14 + 1);
                        data[num15] = this.bRs485ByteNum;
                        byte num16 = (byte) (num15 + 1);
                        data[num16] = (byte) ((num5 >> 8) & 0xff);
                        byte num17 = (byte) (num16 + 1);
                        data[num17] = (byte) (num5 & 0xff);
                        byte num18 = (byte) (num17 + 1);
                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                        byte num19 = (byte) (num18 + 1);
                        data[num19] = (byte) (num6 & 0xff);
                        byte num20 = (byte) (num19 + 1);
                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                        byte num21 = (byte) (num20 + 1);
                        data[num21] = (byte) (num7 & 0xff);
                        byte num22 = (byte) (num21 + 1);
                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                        byte num23 = (byte) (num22 + 1);
                        byte lenth = (byte) (num23 + 1);
                        data[num23] = (byte) (num8 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void textBox_Sys_read_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            this.textBox_Sys_CSRes.Text = "";
            this.textBox_Sys_CSRes_Num.Text = "";
            this.textBox_Sys_SeriesNum.Text = "";
            this.textBox_Sys_PreChg_Time.Text = "";
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else
            {
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = 0x231c;
                    this.u16Rs485RegNum = 4;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                }
                catch (Exception)
                {
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                    }
                }
            }
        }

        private void textBox_Sys_set_Click(object sender, EventArgs e)
        {
            byte[] data = new byte[50];
            if (!this.serialPort1.IsOpen)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("串口错误，串口未打开", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Serial Port Error，Serial Port is not open", "ErrorMessage！");
                }
            }
            else if ((this.textBox_Sys_CSRes.Text == "") || ((this.textBox_Sys_CSRes_Num.Text == "") || ((this.textBox_Sys_SeriesNum.Text == "") || (this.textBox_Sys_PreChg_Time.Text == ""))))
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("请输入完整的信息", "错误提示！");
                }
                else
                {
                    MessageBox.Show("Please enter all information", "ErrorMessage！");
                }
            }
            else
            {
                float num = float.Parse(this.textBox_Sys_SeriesNum.Text);
                float num2 = float.Parse(this.textBox_Sys_CSRes.Text);
                float num3 = float.Parse(this.textBox_Sys_CSRes_Num.Text);
                float num4 = float.Parse(this.textBox_Sys_PreChg_Time.Text);
                if ((num > 32f) || (num < 3f))
                {
                    MessageBox.Show("电池串数设置范围为3-32串，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num2 > 65000f) || (num2 < 1f))
                {
                    MessageBox.Show("CS检流电阻单个取值范围为1-65000mΩ，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num3 > 10000f) || (num3 < 1f))
                {
                    MessageBox.Show("CS检流电阻个数范围为1-10000个，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else if ((num4 > 50000f) || (num4 < 0f))
                {
                    MessageBox.Show("MOS(接触器)预充时间为0 - 50000s，数据越界！", "设置失败", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                }
                else
                {
                    ushort num5 = (ushort) float.Parse(this.textBox_Sys_SeriesNum.Text);
                    ushort num6 = (ushort) float.Parse(this.textBox_Sys_CSRes.Text);
                    ushort num7 = (ushort) float.Parse(this.textBox_Sys_CSRes_Num.Text);
                    ushort num8 = (ushort) float.Parse(this.textBox_Sys_PreChg_Time.Text);
                    try
                    {
                        this.bRs485FunCmd = 0x10;
                        this.u16Rs485RegAddr = 0x231c;
                        this.u16Rs485RegNum = 4;
                        this.bRs485ByteNum = 8;
                        byte index = 0;
                        data[index] = this.bRs485Addr;
                        byte num10 = (byte) (index + 1);
                        data[num10] = this.bRs485FunCmd;
                        byte num11 = (byte) (num10 + 1);
                        data[num11] = (byte) (this.u16Rs485RegAddr / 0x100);
                        byte num12 = (byte) (num11 + 1);
                        data[num12] = (byte) (this.u16Rs485RegAddr % 0x100);
                        byte num13 = (byte) (num12 + 1);
                        data[num13] = (byte) (this.u16Rs485RegNum / 0x100);
                        byte num14 = (byte) (num13 + 1);
                        data[num14] = (byte) (this.u16Rs485RegNum % 0x100);
                        byte num15 = (byte) (num14 + 1);
                        data[num15] = this.bRs485ByteNum;
                        byte num16 = (byte) (num15 + 1);
                        data[num16] = (byte) ((num5 >> 8) & 0xff);
                        byte num17 = (byte) (num16 + 1);
                        data[num17] = (byte) (num5 & 0xff);
                        byte num18 = (byte) (num17 + 1);
                        data[num18] = (byte) ((num6 >> 8) & 0xff);
                        byte num19 = (byte) (num18 + 1);
                        data[num19] = (byte) (num6 & 0xff);
                        byte num20 = (byte) (num19 + 1);
                        data[num20] = (byte) ((num7 >> 8) & 0xff);
                        byte num21 = (byte) (num20 + 1);
                        data[num21] = (byte) (num7 & 0xff);
                        byte num22 = (byte) (num21 + 1);
                        data[num22] = (byte) ((num8 >> 8) & 0xff);
                        byte num23 = (byte) (num22 + 1);
                        byte lenth = (byte) (num23 + 1);
                        data[num23] = (byte) (num8 & 0xff);
                        this.Calculate_Sum_Tx(ref data, lenth);
                        this.serialPort1.DiscardInBuffer();
                        this.serialPort1.DiscardOutBuffer();
                        this.bRxByteCnt = 0;
                        this.bTotleBytes = 0;
                        this.bRxFrameFinishFlag = false;
                        this.serialPort1.Write(data, 0, lenth + 2);
                        this.serialPort1.DiscardInBuffer();
                    }
                    catch (Exception)
                    {
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial Port Error，Please recheck Serial Port", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        private void timer_Log_Tick(object sender, EventArgs e)
        {
            string[] textArray1 = new string[40];
            textArray1[0] = DateTime.Now.ToString();
            textArray1[1] = ",";
            textArray1[2] = this.label_VC1.Text;
            textArray1[3] = ",";
            textArray1[4] = this.label_VC2.Text;
            textArray1[5] = ",";
            textArray1[6] = this.label_VC3.Text;
            textArray1[7] = ",";
            textArray1[8] = this.label_VC4.Text;
            textArray1[9] = ",";
            textArray1[10] = this.label_VC5.Text;
            textArray1[11] = ",";
            textArray1[12] = this.label_VC6.Text;
            textArray1[13] = ",";
            textArray1[14] = this.label_VC7.Text;
            textArray1[15] = ",";
            textArray1[0x10] = this.label_VC8.Text;
            textArray1[0x11] = ",";
            textArray1[0x12] = this.label_VC9.Text;
            textArray1[0x13] = ",";
            textArray1[20] = this.label_VC10.Text;
            textArray1[0x15] = ",";
            textArray1[0x16] = this.label_VC11.Text;
            textArray1[0x17] = ",";
            textArray1[0x18] = this.label_VC12.Text;
            textArray1[0x19] = ",";
            textArray1[0x1a] = this.label_VC13.Text;
            textArray1[0x1b] = ",";
            textArray1[0x1c] = this.label_VC14.Text;
            textArray1[0x1d] = ",";
            textArray1[30] = this.label_VC15.Text;
            textArray1[0x1f] = ",";
            textArray1[0x20] = this.label_VC16.Text;
            textArray1[0x21] = ",";
            textArray1[0x22] = this.label_Vbat.Text;
            textArray1[0x23] = ",";
            textArray1[0x24] = this.label_Ichg.Text;
            textArray1[0x25] = ",";
            textArray1[0x26] = this.label_Idsg.Text;
            textArray1[0x27] = ",";
            string str = string.Concat(textArray1);
            try
            {
                StreamWriter writer1 = new StreamWriter(this.gsLogFilePath, true, Encoding.UTF8, 2);
                writer1.WriteLine(str);
                writer1.Flush();
                writer1.Close();
            }
            catch (Exception)
            {
                if (this.bIsEng == 0)
                {
                    MessageBox.Show("日志保存异常", "错误提示！");
                }
                else
                {
                    MessageBox.Show("LogFile Saving Error!", "ErrorMessage！");
                }
            }
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            byte[] data = new byte[] { 1, 2, 1, 1, 0, 8, 0, 0 };
            if (!this.serialPort1.IsOpen)
            {
                this.bRdCmdErrCnt = (byte) (this.bRdCmdErrCnt + 1);
                if (this.bRdCmdErrCnt > 3)
                {
                    this.timer1.Enabled = false;
                    this.bRdCmdErrCnt = 0;
                    if (this.bIsEng == 0)
                    {
                        MessageBox.Show("串口错误，串口未打开", "错误提示！");
                    }
                    else
                    {
                        MessageBox.Show("Serial port error, Serial Port is not Start Up", "ErrorMessage！");
                    }
                }
            }
            else
            {
                ushort num;
                ushort num2;
                ushort num3 = this.g_u16RdSel;
                this.g_u16RdSel = (ushort) (num3 + 1);
                switch (num3)
                {
                    case 0:
                        num = 0xd000;
                        num2 = 0x26;
                        break;

                    case 1:
                        num = 0xd001;
                        num2 = 0x19;
                        break;

                    case 2:
                        num = 0xd002;
                        num2 = 0x15;
                        break;

                    case 3:
                        num = 0xd003;
                        num2 = 12;
                        break;

                    case 4:
                        num = 0xd004;
                        num2 = 1;
                        this.g_u16RdSel = 0;
                        break;

                    default:
                        num = 0xd000;
                        num2 = 0x24;
                        break;
                }
                try
                {
                    this.bRs485FunCmd = 3;
                    this.u16Rs485RegAddr = num;
                    this.u16Rs485RegNum = num2;
                    data[0] = this.bRs485Addr;
                    data[1] = this.bRs485FunCmd;
                    data[2] = (byte) (this.u16Rs485RegAddr / 0x100);
                    data[3] = (byte) (this.u16Rs485RegAddr % 0x100);
                    data[4] = (byte) (this.u16Rs485RegNum / 0x100);
                    data[5] = (byte) (this.u16Rs485RegNum % 0x100);
                    this.Calculate_Sum_Tx(ref data, 6);
                    this.serialPort1.DiscardInBuffer();
                    this.serialPort1.DiscardOutBuffer();
                    this.bRxByteCnt = 0;
                    this.bTotleBytes = 0;
                    this.bRxFrameFinishFlag = false;
                    this.serialPort1.Write(data, 0, 8);
                    this.serialPort1.DiscardInBuffer();
                    this.u16RdRunInfoTxCnt++;
                    if (this.bIsEng == 0)
                    {
                        this.toolStripLabel_TxCnt1.Text = "发送次数：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt2.Text = "发送次数：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt3.Text = "发送次数：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt4.Text = "发送次数：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt5.Text = "发送次数：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt6.Text = "发送次数：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                    }
                    else
                    {
                        this.toolStripLabel_TxCnt1.Text = "Transmittion Counts：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt2.Text = "Transmittion Counts：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt3.Text = "Transmittion Counts：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt4.Text = "Transmittion Counts：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt5.Text = "Transmittion Counts：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                        this.toolStripLabel_TxCnt6.Text = "Transmittion Counts：" + Convert.ToString(this.u16RdRunInfoTxCnt);
                    }
                }
                catch (Exception)
                {
                    this.bRdCmdErrCnt = (byte) (this.bRdCmdErrCnt + 1);
                    if (this.bRdCmdErrCnt > 3)
                    {
                        this.timer1.Enabled = false;
                        this.bRdCmdErrCnt = 0;
                        if (this.bIsEng == 0)
                        {
                            MessageBox.Show("串口错误，请检查串口是否打开", "错误提示！");
                        }
                        else
                        {
                            MessageBox.Show("Serial port error, Please recheck the Serial Port！", "ErrorMessage！");
                        }
                    }
                }
            }
        }

        public class NiceIniWriteAndRead
        {
            [DllImport("kernel32")]
            private static extern int GetPrivateProfileString(string section, string key, string def, StringBuilder retVal, int size, string filePath);
            public static string ReadFromIni(string section, string key, string def, string filePath)
            {
                StringBuilder retVal = new StringBuilder();
                GetPrivateProfileString(section, key, def, retVal, 500, filePath);
                return retVal.ToString();
            }

            [DllImport("kernel32")]
            private static extern long WritePrivateProfileString(string section, string key, string val, string filePath);
            public static bool WriteToIni(string section, string key, string val, string filePath)
            {
                bool flag = true;
                try
                {
                    if (!Directory.Exists(filePath))
                    {
                        Directory.CreateDirectory(filePath);
                    }
                    if (!File.Exists(filePath))
                    {
                        flag = false;
                    }
                    else
                    {
                        flag = true;
                        WritePrivateProfileString(section, key, val, filePath);
                    }
                }
                catch
                {
                    flag = false;
                }
                return flag;
            }
        }

        public enum RS485_CMD_RW_E
        {
            RS485_CMD_ADDR_RESET_CALIB_COEF = 0x1000,
            RS485_CMD_ADDR_RESET_PROTECT_RECORD = 0x1001,
            RS485_CMD_ADDR_RESET_PROTECT_ELEMENT = 0x1002,
            RS485_CMD_ADDR_RESET_OTHER_CANADD = 0x1003,
            RS485_CMD_ADDR_RESET_HEAT_COOL = 0x1004,
            RS485_CMD_ADDR_SWITCH_ON = 0x1100,
            RS485_CMD_ADDR_SWITCH_OFF = 0x1101,
            RS485_CMD_ADDR_SYSTEM_FUNCTION_ON = 0x1102,
            RS485_CMD_ADDR_SYSTEM_FUNCTION_OFF = 0x1103,
            RS485_CMD_ADDR_VC1CALIB_K = 0x2000,
            RS485_CMD_ADDR_VC1CALIB_B = 0x2001,
            RS485_CMD_ADDR_VC2CALIB_K = 0x2002,
            RS485_CMD_ADDR_VC2CALIB_B = 0x2003,
            RS485_CMD_ADDR_VC3CALIB_K = 0x2004,
            RS485_CMD_ADDR_VC3CALIB_B = 0x2005,
            RS485_CMD_ADDR_VC4CALIB_K = 0x2006,
            RS485_CMD_ADDR_VC4CALIB_B = 0x2007,
            RS485_CMD_ADDR_VC5CALIB_K = 0x2008,
            RS485_CMD_ADDR_VC5CALIB_B = 0x2009,
            RS485_CMD_ADDR_VC6CALIB_K = 0x200a,
            RS485_CMD_ADDR_VC6CALIB_B = 0x200b,
            RS485_CMD_ADDR_VC7CALIB_K = 0x200c,
            RS485_CMD_ADDR_VC7CALIB_B = 0x200d,
            RS485_CMD_ADDR_VC8CALIB_K = 0x200e,
            RS485_CMD_ADDR_VC8CALIB_B = 0x200f,
            RS485_CMD_ADDR_VC9CALIB_K = 0x2010,
            RS485_CMD_ADDR_VC9CALIB_B = 0x2011,
            RS485_CMD_ADDR_VC10CALIB_K = 0x2012,
            RS485_CMD_ADDR_VC10CALIB_B = 0x2013,
            RS485_CMD_ADDR_VC11CALIB_K = 0x2014,
            RS485_CMD_ADDR_VC11CALIB_B = 0x2015,
            RS485_CMD_ADDR_VC12CALIB_K = 0x2016,
            RS485_CMD_ADDR_VC12CALIB_B = 0x2017,
            RS485_CMD_ADDR_VC13CALIB_K = 0x2018,
            RS485_CMD_ADDR_VC13CALIB_B = 0x2019,
            RS485_CMD_ADDR_VC14CALIB_K = 0x201a,
            RS485_CMD_ADDR_VC14CALIB_B = 0x201b,
            RS485_CMD_ADDR_VC15CALIB_K = 0x201c,
            RS485_CMD_ADDR_VC15CALIB_B = 0x201d,
            RS485_CMD_ADDR_VC16CALIB_K = 0x201e,
            RS485_CMD_ADDR_VC16CALIB_B = 0x201f,
            RS485_CMD_ADDR_VC17CALIB_K = 0x2020,
            RS485_CMD_ADDR_VC17CALIB_B = 0x2021,
            RS485_CMD_ADDR_VC18CALIB_K = 0x2022,
            RS485_CMD_ADDR_VC18CALIB_B = 0x2023,
            RS485_CMD_ADDR_VC19CALIB_K = 0x2024,
            RS485_CMD_ADDR_VC19CALIB_B = 0x2025,
            RS485_CMD_ADDR_VC20CALIB_K = 0x2026,
            RS485_CMD_ADDR_VC20CALIB_B = 0x2027,
            RS485_CMD_ADDR_VC21CALIB_K = 0x2028,
            RS485_CMD_ADDR_VC21CALIB_B = 0x2029,
            RS485_CMD_ADDR_VC22CALIB_K = 0x202a,
            RS485_CMD_ADDR_VC22CALIB_B = 0x202b,
            RS485_CMD_ADDR_VC23CALIB_K = 0x202c,
            RS485_CMD_ADDR_VC23CALIB_B = 0x202d,
            RS485_CMD_ADDR_VC24CALIB_K = 0x202e,
            RS485_CMD_ADDR_VC24CALIB_B = 0x202f,
            RS485_CMD_ADDR_VC25CALIB_K = 0x2030,
            RS485_CMD_ADDR_VC25CALIB_B = 0x2031,
            RS485_CMD_ADDR_VC26CALIB_K = 0x2032,
            RS485_CMD_ADDR_VC26CALIB_B = 0x2033,
            RS485_CMD_ADDR_VC27CALIB_K = 0x2034,
            RS485_CMD_ADDR_VC27CALIB_B = 0x2035,
            RS485_CMD_ADDR_VC28CALIB_K = 0x2036,
            RS485_CMD_ADDR_VC28CALIB_B = 0x2037,
            RS485_CMD_ADDR_VC29CALIB_K = 0x2038,
            RS485_CMD_ADDR_VC29CALIB_B = 0x2039,
            RS485_CMD_ADDR_VC30CALIB_K = 0x203a,
            RS485_CMD_ADDR_VC30CALIB_B = 0x203b,
            RS485_CMD_ADDR_VC31CALIB_K = 0x203c,
            RS485_CMD_ADDR_VC31CALIB_B = 0x203d,
            RS485_CMD_ADDR_VC32CALIB_K = 0x203e,
            RS485_CMD_ADDR_VC32CALIB_B = 0x203f,
            RS485_CMD_ADDR_AFE1CALIB_K = 0x2040,
            RS485_CMD_ADDR_AFE1CALIB_B = 0x2041,
            RS485_CMD_ADDR_AFE2CALIB_K = 0x2042,
            RS485_CMD_ADDR_AFE2CALIB_B = 0x2043,
            RS485_CMD_ADDR_VBUSCALIB_K = 0x2044,
            RS485_CMD_ADDR_VBUSCALIB_B = 0x2045,
            RS485_CMD_ADDR_ICHGCALIB_K = 0x2046,
            RS485_CMD_ADDR_ICHGCALIB_B = 0x2047,
            RS485_CMD_ADDR_IDISCHGCALIB_K = 0x2048,
            RS485_CMD_ADDR_IDISCHGCALIB_B = 0x2049,
            RS485_CMD_ADDR_TEMP1_CALIB_K = 0x204a,
            RS485_CMD_ADDR_TEMP1_CALIB_B = 0x204b,
            RS485_CMD_ADDR_TEMP2_CALIB_K = 0x204c,
            RS485_CMD_ADDR_TEMP2_CALIB_B = 0x204d,
            RS485_CMD_ADDR_TEMP3_CALIB_K = 0x204e,
            RS485_CMD_ADDR_TEMP3_CALIB_B = 0x204f,
            RS485_CMD_ADDR_TEMP4_CALIB_K = 0x2050,
            RS485_CMD_ADDR_TEMP4_CALIB_B = 0x2051,
            RS485_CMD_ADDR_TEMP5_CALIB_K = 0x2052,
            RS485_CMD_ADDR_TEMP5_CALIB_B = 0x2053,
            RS485_CMD_ADDR_TEMP6_CALIB_K = 0x2054,
            RS485_CMD_ADDR_TEMP6_CALIB_B = 0x2055,
            RS485_CMD_ADDR_TEMP_ENV1_CALIB_K = 0x2056,
            RS485_CMD_ADDR_TEMP_ENV1_CALIB_B = 0x2057,
            RS485_CMD_ADDR_TEMP_ENV2_CALIB_K = 0x2058,
            RS485_CMD_ADDR_TEMP_ENV2_CALIB_B = 0x2059,
            RS485_CMD_ADDR_TEMP_ENV3_CALIB_K = 0x205a,
            RS485_CMD_ADDR_TEMP_ENV3_CALIB_B = 0x205b,
            RS485_CMD_ADDR_TEMP_MOS_CALIB_K = 0x205c,
            RS485_CMD_ADDR_TEMP_MOS_CALIB_B = 0x205d,
            RS485_CMD_ADDR_VCELL_OVP_FIRST = 0x2100,
            RS485_CMD_ADDR_VCELL_OVP_SECOND = 0x2101,
            RS485_CMD_ADDR_VCELL_OVP_THIRD = 0x2102,
            RS485_CMD_ADDR_VCELL_OVP_RCV = 0x2103,
            RS485_CMD_ADDR_VCELL_OVP_FILTER = 0x2104,
            RS485_CMD_ADDR_VCELL_UVP_FIRST = 0x2105,
            RS485_CMD_ADDR_VCELL_UVP_SECOND = 0x2106,
            RS485_CMD_ADDR_VCELL_UVP_THIRD = 0x2107,
            RS485_CMD_ADDR_VCELL_UVP_RCV = 0x2108,
            RS485_CMD_ADDR_VCELL_UVP_FILTER = 0x2109,
            RS485_CMD_ADDR_VBUS_OVP_FIRST = 0x210a,
            RS485_CMD_ADDR_VBUS_OVP_SECOND = 0x210b,
            RS485_CMD_ADDR_VBUS_OVP_THIRD = 0x210c,
            RS485_CMD_ADDR_VBUS_OVP_RCV = 0x210d,
            RS485_CMD_ADDR_VBUS_OVP_FILTER = 0x210e,
            RS485_CMD_ADDR_VBUS_UVP_FIRST = 0x210f,
            RS485_CMD_ADDR_VBUS_UVP_SECOND = 0x2110,
            RS485_CMD_ADDR_VBUS_UVP_THIRD = 0x2111,
            RS485_CMD_ADDR_VBUS_UVP_RCV = 0x2112,
            RS485_CMD_ADDR_VBUS_UVP_FILTER = 0x2113,
            RS485_CMD_ADDR_ICHG_OCP_FIRST = 0x2114,
            RS485_CMD_ADDR_ICHG_OCP_SECOND = 0x2115,
            RS485_CMD_ADDR_ICHG_OCP_THIRD = 0x2116,
            RS485_CMD_ADDR_ICHG_OCP_RCV = 0x2117,
            RS485_CMD_ADDR_ICHG_OCP_FILTER = 0x2118,
            RS485_CMD_ADDR_IDSG_OCP_FIRST = 0x2119,
            RS485_CMD_ADDR_IDSG_OCP_SECOND = 0x211a,
            RS485_CMD_ADDR_IDSG_OCP_THIRD = 0x211b,
            RS485_CMD_ADDR_IDSG_OCP_RCV = 0x211c,
            RS485_CMD_ADDR_IDSG_OCP_FILTER = 0x211d,
            RS485_CMD_ADDR_TCHG_OTP_FIRST = 0x211e,
            RS485_CMD_ADDR_TCHG_OTP_SECOND = 0x211f,
            RS485_CMD_ADDR_TCHG_OTP_THIRD = 0x2120,
            RS485_CMD_ADDR_TCHG_OTP_RCV = 0x2121,
            RS485_CMD_ADDR_TCHG_OTP_FILTER = 0x2122,
            RS485_CMD_ADDR_TCHG_UTP_FIRST = 0x2123,
            RS485_CMD_ADDR_TCHG_UTP_SECOND = 0x2124,
            RS485_CMD_ADDR_TCHG_UTP_THIRD = 0x2125,
            RS485_CMD_ADDR_TCHG_UTP_RCV = 0x2126,
            RS485_CMD_ADDR_TCHG_UTP_FILTER = 0x2127,
            RS485_CMD_ADDR_TDSG_OTP_FIRST = 0x2128,
            RS485_CMD_ADDR_TDSG_OTP_SECOND = 0x2129,
            RS485_CMD_ADDR_TDSG_OTP_THIRD = 0x212a,
            RS485_CMD_ADDR_TDSG_OTP_RCV = 0x212b,
            RS485_CMD_ADDR_TDSG_OTP_FILTER = 0x212c,
            RS485_CMD_ADDR_TDSG_UTP_FIRST = 0x212d,
            RS485_CMD_ADDR_TDSG_UTP_SECOND = 0x212e,
            RS485_CMD_ADDR_TDSG_UTP_THIRD = 0x212f,
            RS485_CMD_ADDR_TDSG_UTP_RCV = 0x2130,
            RS485_CMD_ADDR_TDSG_UTP_FILTER = 0x2131,
            RS485_CMD_ADDR_TMOS_OTP_FIRST = 0x2132,
            RS485_CMD_ADDR_TMOS_OTP_SECOND = 0x2133,
            RS485_CMD_ADDR_TMOS_OTP_THIRD = 0x2134,
            RS485_CMD_ADDR_TMOS_OTP_RCV = 0x2135,
            RS485_CMD_ADDR_TMOS_OTP_FILTER = 0x2136,
            RS485_CMD_ADDR_VDELTA_OP_FIRST = 0x2137,
            RS485_CMD_ADDR_VDELTA_OP_SECOND = 0x2138,
            RS485_CMD_ADDR_VDELTA_OP_THIRD = 0x2139,
            RS485_CMD_ADDR_VDELTA_OP_RCV = 0x213a,
            RS485_CMD_ADDR_VDELTA_OP_FILTER = 0x213b,
            RS485_CMD_ADDR_SOC_UP_FIRST = 0x213c,
            RS485_CMD_ADDR_SOC_UP_SECOND = 0x213d,
            RS485_CMD_ADDR_SOC_UP_THIRD = 0x213e,
            RS485_CMD_ADDR_SOC_UP_RCV = 0x213f,
            RS485_CMD_ADDR_SOC_UP_FILTER = 0x2140,
            RS485_CMD_ADDR_SOC_VOLTAGE1 = 0x2200,
            RS485_CMD_ADDR_SOC_VALUE1 = 0x2201,
            RS485_CMD_ADDR_SOC_VOLTAGE2 = 0x2202,
            RS485_CMD_ADDR_SOC_VALUE2 = 0x2203,
            RS485_CMD_ADDR_SOC_VOLTAGE3 = 0x2204,
            RS485_CMD_ADDR_SOC_VALUE3 = 0x2205,
            RS485_CMD_ADDR_SOC_VOLTAGE4 = 0x2206,
            RS485_CMD_ADDR_SOC_VALUE4 = 0x2207,
            RS485_CMD_ADDR_SOC_VOLTAGE5 = 0x2208,
            RS485_CMD_ADDR_SOC_VALUE5 = 0x2209,
            RS485_CMD_ADDR_SOC_VOLTAGE6 = 0x220a,
            RS485_CMD_ADDR_SOC_VALUE6 = 0x220b,
            RS485_CMD_ADDR_SOC_VOLTAGE7 = 0x220c,
            RS485_CMD_ADDR_SOC_VALUE7 = 0x220d,
            RS485_CMD_ADDR_SOC_VOLTAGE8 = 0x220e,
            RS485_CMD_ADDR_SOC_VALUE8 = 0x220f,
            RS485_CMD_ADDR_SOC_VOLTAGE9 = 0x2210,
            RS485_CMD_ADDR_SOC_VALUE9 = 0x2211,
            RS485_CMD_ADDR_SOC_VOLTAGE10 = 0x2212,
            RS485_CMD_ADDR_SOC_VALUE10 = 0x2213,
            RS485_CMD_ADDR_SOC_VOLTAGE11 = 0x2214,
            RS485_CMD_ADDR_SOC_VALUE11 = 0x2215,
            RS485_CMD_ADDR_SOC_VOLTAGE12 = 0x2216,
            RS485_CMD_ADDR_SOC_VALUE12 = 0x2217,
            RS485_CMD_ADDR_SOC_VOLTAGE13 = 0x2218,
            RS485_CMD_ADDR_SOC_VALUE13 = 0x2219,
            RS485_CMD_ADDR_SOC_VOLTAGE14 = 0x221a,
            RS485_CMD_ADDR_SOC_VALUE14 = 0x221b,
            RS485_CMD_ADDR_SOC_VOLTAGE15 = 0x221c,
            RS485_CMD_ADDR_SOC_VALUE15 = 0x221d,
            RS485_CMD_ADDR_SOC_VOLTAGE16 = 0x221e,
            RS485_CMD_ADDR_SOC_VALUE16 = 0x221f,
            RS485_CMD_ADDR_SOC_VOLTAGE17 = 0x2220,
            RS485_CMD_ADDR_SOC_VALUE17 = 0x2221,
            RS485_CMD_ADDR_SOC_VOLTAGE18 = 0x2222,
            RS485_CMD_ADDR_SOC_VALUE18 = 0x2223,
            RS485_CMD_ADDR_SOC_VOLTAGE19 = 0x2224,
            RS485_CMD_ADDR_SOC_VALUE19 = 0x2225,
            RS485_CMD_ADDR_SOC_VOLTAGE20 = 0x2226,
            RS485_CMD_ADDR_SOC_VALUE20 = 0x2227,
            RS485_CMD_ADDR_SOC_VOLTAGE21 = 0x2228,
            RS485_CMD_ADDR_SOC_VALUE21 = 0x2229,
            RS485_CMD_ADDR_COPPERLOSS1 = 0x222a,
            RS485_CMD_ADDR_COPPERLOSS2 = 0x222b,
            RS485_CMD_ADDR_COPPERLOSS3 = 0x222c,
            RS485_CMD_ADDR_COPPERLOSS4 = 0x222d,
            RS485_CMD_ADDR_COPPERLOSS5 = 0x222e,
            RS485_CMD_ADDR_COPPERLOSS6 = 0x222f,
            RS485_CMD_ADDR_COPPERLOSS7 = 0x2230,
            RS485_CMD_ADDR_COPPERLOSS8 = 0x2231,
            RS485_CMD_ADDR_COPPERLOSS9 = 0x2232,
            RS485_CMD_ADDR_COPPERLOSS10 = 0x2233,
            RS485_CMD_ADDR_COPPERLOSS11 = 0x2234,
            RS485_CMD_ADDR_COPPERLOSS12 = 0x2235,
            RS485_CMD_ADDR_COPPERLOSS13 = 0x2236,
            RS485_CMD_ADDR_COPPERLOSS14 = 0x2237,
            RS485_CMD_ADDR_COPPERLOSS15 = 0x2238,
            RS485_CMD_ADDR_COPPERLOSS16 = 0x2239,
            RS485_CMD_ADDR_CELLNUM1 = 0x223a,
            RS485_CMD_ADDR_CELLNUM2 = 0x223b,
            RS485_CMD_ADDR_CELLNUM3 = 0x223c,
            RS485_CMD_ADDR_CELLNUM4 = 0x223d,
            RS485_CMD_ADDR_CELLNUM5 = 0x223e,
            RS485_CMD_ADDR_CELLNUM6 = 0x223f,
            RS485_CMD_ADDR_CELLNUM7 = 0x2240,
            RS485_CMD_ADDR_CELLNUM8 = 0x2241,
            RS485_CMD_ADDR_CELLNUM9 = 0x2242,
            RS485_CMD_ADDR_CELLNUM10 = 0x2243,
            RS485_CMD_ADDR_CELLNUM11 = 0x2244,
            RS485_CMD_ADDR_CELLNUM12 = 0x2245,
            RS485_CMD_ADDR_CELLNUM13 = 0x2246,
            RS485_CMD_ADDR_CELLNUM14 = 0x2247,
            RS485_CMD_ADDR_CELLNUM15 = 0x2248,
            RS485_CMD_ADDR_CELLNUM16 = 0x2249,
            RS485_CMD_ADDR_RTC_TIME_YEAR = 0x224a,
            RS485_CMD_ADDR_RTC_TIME_MONTH = 0x224b,
            RS485_CMD_ADDR_RTC_TIME_DAY = 0x224c,
            RS485_CMD_ADDR_RTC_TIME_HOUR = 0x224d,
            RS485_CMD_ADDR_RTC_TIME_MINUTE = 0x224e,
            RS485_CMD_ADDR_RTC_TIME_SECOND = 0x224f,
            RS485_CMD_ADDR_RTC_ALARM_YEAR = 0x2250,
            RS485_CMD_ADDR_RTC_ALARM_MONTH = 0x2251,
            RS485_CMD_ADDR_RTC_ALARM_DAY = 0x2252,
            RS485_CMD_ADDR_RTC_ALARM_HOUR = 0x2253,
            RS485_CMD_ADDR_RTC_ALARM_MINUTE = 0x2254,
            RS485_CMD_ADDR_RTC_ALARM_SECOND = 0x2255,
            RS485_CMD_ADDR_BALANCE_OV = 0x2300,
            RS485_CMD_ADDR_BALANCE_OW = 0x2301,
            RS485_CMD_ADDR_BALANCE_CW1 = 0x2302,
            RS485_CMD_ADDR_BALANCE_CW2 = 0x2303,
            RS485_CMD_ADDR_OPENTIME_ODD = 0x2304,
            RS485_CMD_ADDR_OPENTIME_EVEN = 0x2305,
            RS485_CMD_ADDR_OPENTIME_MOS = 0x2306,
            RS485_CMD_ADDR_OPENTIME_RES = 0x2307,
            RS485_CMD_ADDR_HEAT_DSG_H = 0x2308,
            RS485_CMD_ADDR_HEAT_DSG_L = 0x2309,
            RS485_CMD_ADDR_HEAT_CHG_H = 0x230a,
            RS485_CMD_ADDR_HEAT_CHG_L = 0x230b,
            RS485_CMD_ADDR_COOL_DSG_H = 0x230c,
            RS485_CMD_ADDR_COOL_DSG_L = 0x230d,
            RS485_CMD_ADDR_COOL_CHG_H = 0x230e,
            RS485_CMD_ADDR_COOL_CHG_L = 0x230f,
            RS485_CMD_ADDR_SLEEP_V_NORMAL = 0x2310,
            RS485_CMD_ADDR_SLEEP_TIME_NORMAL = 0x2311,
            RS485_CMD_ADDR_SLEEP_V_LOW = 0x2312,
            RS485_CMD_ADDR_SLEEP_TIME_LOW = 0x2313,
            RS485_CMD_ADDR_SLEEP_I_CHG = 0x2314,
            RS485_CMD_ADDR_SLEEP_I_DSG = 0x2315,
            RS485_CMD_ADDR_SLEEP_RES1 = 0x2316,
            RS485_CMD_ADDR_SLEEP_RES2 = 0x2317,
            RS485_CMD_ADDR_SOC_AH = 0x2318,
            RS485_CMD_ADDR_SOC_CYCLE_TIME = 0x2319,
            RS485_CMD_ADDR_SOC_RES1 = 0x231a,
            RS485_CMD_ADDR_SOC_RES2 = 0x231b,
            RS485_CMD_ADDR_SYS_SERIES_NUM = 0x231c,
            RS485_CMD_ADDR_SYS_CS_RESIS = 0x231d,
            RS485_CMD_ADDR_SYS_CS_NUM = 0x231e,
            RS485_CMD_ADDR_SYS_RES1 = 0x231f,
            RS485_CMD_ADDR_HEAT_DSG_HIGH = 0x2320,
            RS485_CMD_ADDR_HEAT_DSG_LOW = 0x2321,
            RS485_CMD_ADDR_HEAT_CHG_HIGH = 0x2322,
            RS485_CMD_ADDR_HEAT_CHG_LOW = 0x2323,
            RS485_CMD_ADDR_HEAT_CUR_MAX = 0x2324,
            RS485_CMD_ADDR_HEAT_CUR_MIN = 0x2325,
            RS485_CMD_ADDR_HEAT_TIME_MAX = 0x2326,
            RS485_CMD_ADDR_HEAT_RES1 = 0x2327,
            RS485_CMD_ADDR_HEAT_RES2 = 0x2328,
            RS485_CMD_ADDR_HEAT_RES3 = 0x2329,
            RS485_CMD_ADDR_HEAT_RES4 = 0x232a,
            RS485_CMD_ADDR_HEAT_RES5 = 0x232b,
            RS485_CMD_ADDR_HEAT_RES6 = 0x232c,
            RS485_CMD_ADDR_COOL_DSG_HIGH = 0x232d,
            RS485_CMD_ADDR_COOL_DSG_LOW = 0x232e,
            RS485_CMD_ADDR_COOL_CHG_HIGH = 0x232f,
            RS485_CMD_ADDR_COOL_CHG_LOW = 0x2330,
            RS485_CMD_ADDR_COOL_CUR_MAX = 0x2331,
            RS485_CMD_ADDR_COOL_CUR_MIN = 0x2332,
            RS485_CMD_ADDR_COOL_TIME_MAX = 0x2333,
            RS485_CMD_ADDR_COOL_RES1 = 0x2334,
            RS485_CMD_ADDR_COOL_RES2 = 0x2335,
            RS485_CMD_ADDR_COOL_RES3 = 0x2336,
            RS485_CMD_ADDR_COOL_RES4 = 0x2337
        }
    }
}

